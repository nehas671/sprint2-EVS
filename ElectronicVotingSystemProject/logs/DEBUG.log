2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select new com.spring.cg.entity.CastVoteEntity(c.candidateName, p.partyName) from com.spring.cg.entity.PartyzEntity p JOIN p.candidate c JOIN p.election e where UPPER(e.electionName) like :electionName AND UPPER(e.constituency) like :constituency AND e.date=:date
2021-01-17 17:06:03 DEBUG SQL: select candidate1_.candidate_name as col_0_0_, partyzenti0_.party_name as col_1_0_ from party partyzenti0_ inner join candidate candidate1_ on partyzenti0_.party_name=candidate1_.party_name inner join election_party election2_ on partyzenti0_.party_name=election2_.party_name inner join election electionse3_ on election2_.election_id=electionse3_.election_id where (upper(electionse3_.election_name) like ?) and (upper(electionse3_.constituency) like ?) and electionse3_.date=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAll
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select new com.spring.cg.entity.CastVoteEntity(cv.electionName, cv.state, cv.constituency, cv.date, cv.candidateName, cv.partyName, cv.voterId) from com.spring.cg.entity.CastVoteEntity cv where UPPER(cv.electionName) like :electionName AND UPPER(cv.constituency) like :constituency AND cv.date=:date AND cv.voterId=:voterId
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CastVoteEntity'
    |  |     \-[ALIAS] Node: 'cv'
    |  \-[SELECT] Node: 'Select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'CastVoteEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'constituency'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'date'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'candidateName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'cv'
    |        |  \-[IDENT] Node: 'partyName'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'cv'
    |           \-[IDENT] Node: 'voterId'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[METHOD_CALL] Node: '('
          |  |  |  |  +-[IDENT] Node: 'UPPER'
          |  |  |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |  |  |     \-[DOT] Node: '.'
          |  |  |  |        +-[IDENT] Node: 'cv'
          |  |  |  |        \-[IDENT] Node: 'electionName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'electionName'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'UPPER'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[DOT] Node: '.'
          |  |     |        +-[IDENT] Node: 'cv'
          |  |     |        \-[IDENT] Node: 'constituency'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'constituency'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'cv'
          |     |  \-[IDENT] Node: 'date'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'date'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'cv'
             |  \-[IDENT] Node: 'voterId'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'voterId'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.CastVoteEntity (cv) -> castvoteen0_
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.state -> castvoteen0_.state
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.constituency -> castvoteen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : cv.date -> castvoteen0_.date
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : candidateName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.candidateName -> castvoteen0_.candidate_name
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : partyName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.partyName -> castvoteen0_.party_name
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : voterId -> org.hibernate.type.IntegerType@6fd9dbe6
2021-01-17 17:06:03 DEBUG Resolved : cv.voterId -> castvoteen0_.voter_id
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : cv.constituency -> castvoteen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : cv.date -> castvoteen0_.date
2021-01-17 17:06:03 DEBUG Resolved : cv -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : voterId -> org.hibernate.type.IntegerType@6fd9dbe6
2021-01-17 17:06:03 DEBUG Resolved : cv.voterId -> castvoteen0_.voter_id
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) CastVoteEntity ) ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ( castvoteen0_.state castvoteen0_.cast_id state ) ( castvoteen0_.constituency castvoteen0_.cast_id constituency ) ( castvoteen0_.date castvoteen0_.cast_id date ) ( castvoteen0_.candidate_name castvoteen0_.cast_id candidateName ) ( castvoteen0_.party_name castvoteen0_.cast_id partyName ) ( castvoteen0_.voter_id castvoteen0_.cast_id voterId ) ) ) ( FromClause{level=1} castvote castvoteen0_ ) ( where ( AND ( AND ( AND ( like ( ( UPPER ( exprList ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ) ) ? ) ( like ( ( UPPER ( exprList ( castvoteen0_.constituency castvoteen0_.cast_id constituency ) ) ) ? ) ) ( = ( castvoteen0_.date castvoteen0_.cast_id date ) ? ) ) ( = ( castvoteen0_.voter_id castvoteen0_.cast_id voterId ) ? ) ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.CastVoteEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: CastVoteEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.candidateName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: candidateName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.partyName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: partyName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: cv.voterId
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: cv
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: voterId
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-SqlNode
          |  |  +-BinaryLogicOperatorNode
          |  |  |  +-MethodNode
          |  |  |  |  +-IdentNode
          |  |  |  |  | persister: null
          |  |  |  |  | originalText: UPPER
          |  |  |  |  \-SqlNode
          |  |  |  |     \-DotNode
          |  |  |  |       persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |  |  |  |       path: cv.electionName
          |  |  |  |        +-IdentNode
          |  |  |  |        | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |  |  |  |        | originalText: cv
          |  |  |  |        \-IdentNode
          |  |  |  |          persister: null
          |  |  |  |          originalText: electionName
          |  |  |  \-ParameterNode
          |  |  \-BinaryLogicOperatorNode
          |  |     +-MethodNode
          |  |     |  +-IdentNode
          |  |     |  | persister: null
          |  |     |  | originalText: UPPER
          |  |     |  \-SqlNode
          |  |     |     \-DotNode
          |  |     |       persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |  |     |       path: cv.constituency
          |  |     |        +-IdentNode
          |  |     |        | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |  |     |        | originalText: cv
          |  |     |        \-IdentNode
          |  |     |          persister: null
          |  |     |          originalText: constituency
          |  |     \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-DotNode
          |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |     | path: cv.date
          |     |  +-IdentNode
          |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
          |     |  | originalText: cv
          |     |  \-IdentNode
          |     |    persister: null
          |     |    originalText: date
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
             | path: cv.voterId
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
             |  | originalText: cv
             |  \-IdentNode
             |    persister: null
             |    originalText: voterId
             \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [castvote castvoteen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (castvote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.CastVoteEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'CastVoteEntity' {originalText=CastVoteEntity}
    |     +-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=cv.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=cv.state,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=cv.constituency,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=cv.date,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.candidate_name' {propertyName=candidateName,dereferenceType=PRIMITIVE,getPropertyPath=candidateName,path=cv.candidateName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'candidateName' {originalText=candidateName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.party_name' {propertyName=partyName,dereferenceType=PRIMITIVE,getPropertyPath=partyName,path=cv.partyName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'partyName' {originalText=partyName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_5_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.voter_id' {propertyName=voterId,dereferenceType=PRIMITIVE,getPropertyPath=voterId,path=cv.voterId,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'voterId' {originalText=voterId}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[cv], fromElementByTableAlias=[castvoteen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'castvote castvoteen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=cv,role=null,tableName=castvote,tableAlias=castvoteen0_,origin=null,columns={,className=com.spring.cg.entity.CastVoteEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[METHOD_CALL] MethodNode: '('
          |  |  |  |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          |  |  |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |  |  |     \-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=cv.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
          |  |  |  |        +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
          |  |  |  |        \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=electionName, expectedType=org.hibernate.type.StringType@72a34537}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'castvoteen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=cv.constituency,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
          |  |     |        +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
          |  |     |        \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=constituency, expectedType=org.hibernate.type.StringType@72a34537}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'castvoteen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=cv.date,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
          |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
          |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.LocalDateType@5fb44964}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'castvoteen0_.voter_id' {propertyName=voterId,dereferenceType=PRIMITIVE,getPropertyPath=voterId,path=cv.voterId,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=cv}
             |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=cv, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
             |  \-[IDENT] IdentNode: 'voterId' {originalText=voterId}
             \-[NAMED_PARAM] ParameterNode: '?' {name=voterId, expectedType=org.hibernate.type.IntegerType@6fd9dbe6}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select new com.spring.cg.entity.CastVoteEntity(cv.electionName, cv.state, cv.constituency, cv.date, cv.candidateName, cv.partyName, cv.voterId) from com.spring.cg.entity.CastVoteEntity cv where UPPER(cv.electionName) like :electionName AND UPPER(cv.constituency) like :constituency AND cv.date=:date AND cv.voterId=:voterId
2021-01-17 17:06:03 DEBUG SQL: select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.constituency as col_2_0_, castvoteen0_.date as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, castvoteen0_.voter_id as col_6_0_ from castvote castvoteen0_ where (upper(castvoteen0_.election_name) like ?) and (upper(castvoteen0_.constituency) like ?) and castvoteen0_.date=? and castvoteen0_.voter_id=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'electionRepository'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.ElectionRepository…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findAll
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select new com.spring.cg.entity.ElectionsEntity(e.electionName, e.state, e.constituency, e.date) from com.spring.cg.entity.ElectionsEntity e where UPPER(e.electionName) like :electionName AND UPPER(e.state) like :state AND UPPER(e.constituency) like :constituency AND e.date=:date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionsEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'Select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ElectionsEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'constituency'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'e'
    |           \-[IDENT] Node: 'date'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'AND'
          +-[AND] Node: 'AND'
          |  +-[AND] Node: 'AND'
          |  |  +-[LIKE] Node: 'like'
          |  |  |  +-[METHOD_CALL] Node: '('
          |  |  |  |  +-[IDENT] Node: 'UPPER'
          |  |  |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |  |  |     \-[DOT] Node: '.'
          |  |  |  |        +-[IDENT] Node: 'e'
          |  |  |  |        \-[IDENT] Node: 'electionName'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'electionName'
          |  |  \-[LIKE] Node: 'like'
          |  |     +-[METHOD_CALL] Node: '('
          |  |     |  +-[IDENT] Node: 'UPPER'
          |  |     |  \-[EXPR_LIST] Node: 'exprList'
          |  |     |     \-[DOT] Node: '.'
          |  |     |        +-[IDENT] Node: 'e'
          |  |     |        \-[IDENT] Node: 'state'
          |  |     \-[COLON] Node: ':'
          |  |        \-[IDENT] Node: 'state'
          |  \-[LIKE] Node: 'like'
          |     +-[METHOD_CALL] Node: '('
          |     |  +-[IDENT] Node: 'UPPER'
          |     |  \-[EXPR_LIST] Node: 'exprList'
          |     |     \-[DOT] Node: '.'
          |     |        +-[IDENT] Node: 'e'
          |     |        \-[IDENT] Node: 'constituency'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'constituency'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'e'
             |  \-[IDENT] Node: 'date'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionsEntity (e) -> electionse0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionse0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.state -> electionse0_.state
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.constituency -> electionse0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionse0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionse0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.state -> electionse0_.state
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.constituency -> electionse0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionse0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ElectionsEntity ) ( electionse0_.election_name electionse0_.election_id electionName ) ( electionse0_.state electionse0_.election_id state ) ( electionse0_.constituency electionse0_.election_id constituency ) ( electionse0_.date electionse0_.election_id date ) ) ) ( FromClause{level=1} election electionse0_ ) ( where ( AND ( AND ( AND ( like ( ( UPPER ( exprList ( electionse0_.election_name electionse0_.election_id electionName ) ) ) ? ) ( like ( ( UPPER ( exprList ( electionse0_.state electionse0_.election_id state ) ) ) ? ) ) ( like ( ( UPPER ( exprList ( electionse0_.constituency electionse0_.election_id constituency ) ) ) ? ) ) ( = ( electionse0_.date electionse0_.election_id date ) ? ) ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ElectionsEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ElectionsEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     | path: e.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     | path: e.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     | path: e.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     | path: e.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-SqlNode
          |  +-SqlNode
          |  |  +-BinaryLogicOperatorNode
          |  |  |  +-MethodNode
          |  |  |  |  +-IdentNode
          |  |  |  |  | persister: null
          |  |  |  |  | originalText: UPPER
          |  |  |  |  \-SqlNode
          |  |  |  |     \-DotNode
          |  |  |  |       persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |  |  |  |       path: e.electionName
          |  |  |  |        +-IdentNode
          |  |  |  |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |  |  |  |        | originalText: e
          |  |  |  |        \-IdentNode
          |  |  |  |          persister: null
          |  |  |  |          originalText: electionName
          |  |  |  \-ParameterNode
          |  |  \-BinaryLogicOperatorNode
          |  |     +-MethodNode
          |  |     |  +-IdentNode
          |  |     |  | persister: null
          |  |     |  | originalText: UPPER
          |  |     |  \-SqlNode
          |  |     |     \-DotNode
          |  |     |       persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |  |     |       path: e.state
          |  |     |        +-IdentNode
          |  |     |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |  |     |        | originalText: e
          |  |     |        \-IdentNode
          |  |     |          persister: null
          |  |     |          originalText: state
          |  |     \-ParameterNode
          |  \-BinaryLogicOperatorNode
          |     +-MethodNode
          |     |  +-IdentNode
          |     |  | persister: null
          |     |  | originalText: UPPER
          |     |  \-SqlNode
          |     |     \-DotNode
          |     |       persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |     |       path: e.constituency
          |     |        +-IdentNode
          |     |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
          |     |        | originalText: e
          |     |        \-IdentNode
          |     |          persister: null
          |     |          originalText: constituency
          |     \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
             | path: e.date
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
             |  | originalText: e
             |  \-IdentNode
             |    persister: null
             |    originalText: date
             \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionse0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ElectionsEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ElectionsEntity' {originalText=ElectionsEntity}
    |     +-[DOT] DotNode: 'electionse0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'electionse0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=e.state,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'electionse0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=e.constituency,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'electionse0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionse0_,origin=null,columns={,className=com.spring.cg.entity.ElectionsEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'AND'
          +-[AND] SqlNode: 'AND'
          |  +-[AND] SqlNode: 'AND'
          |  |  +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |  |  +-[METHOD_CALL] MethodNode: '('
          |  |  |  |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          |  |  |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |  |  |     \-[DOT] DotNode: 'electionse0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
          |  |  |  |        +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
          |  |  |  |        \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=electionName, expectedType=org.hibernate.type.StringType@72a34537}
          |  |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |  |     +-[METHOD_CALL] MethodNode: '('
          |  |     |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          |  |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     |     \-[DOT] DotNode: 'electionse0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=e.state,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
          |  |     |        +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
          |  |     |        \-[IDENT] IdentNode: 'state' {originalText=state}
          |  |     \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.StringType@72a34537}
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[METHOD_CALL] MethodNode: '('
          |     |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          |     |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     |     \-[DOT] DotNode: 'electionse0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=e.constituency,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
          |     |        +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
          |     |        \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=constituency, expectedType=org.hibernate.type.StringType@72a34537}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'electionse0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
             |  +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
             |  \-[IDENT] IdentNode: 'date' {originalText=date}
             \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.LocalDateType@5fb44964}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select new com.spring.cg.entity.ElectionsEntity(e.electionName, e.state, e.constituency, e.date) from com.spring.cg.entity.ElectionsEntity e where UPPER(e.electionName) like :electionName AND UPPER(e.state) like :state AND UPPER(e.constituency) like :constituency AND e.date=:date
2021-01-17 17:06:03 DEBUG SQL: select electionse0_.election_name as col_0_0_, electionse0_.state as col_1_0_, electionse0_.constituency as col_2_0_, electionse0_.date as col_3_0_ from election electionse0_ where (upper(electionse0_.election_name) like ?) and (upper(electionse0_.state) like ?) and (upper(electionse0_.constituency) like ?) and electionse0_.date=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getAllElectionName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select distinct UPPER(e.electionName) from com.spring.cg.entity.ElectionsEntity e order by UPPER(e.electionName)
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionsEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'Select'
    |     +-[DISTINCT] Node: 'distinct'
    |     \-[METHOD_CALL] Node: '('
    |        +-[IDENT] Node: 'UPPER'
    |        \-[EXPR_LIST] Node: 'exprList'
    |           \-[DOT] Node: '.'
    |              +-[IDENT] Node: 'e'
    |              \-[IDENT] Node: 'electionName'
    \-[ORDER] Node: 'order'
       \-[METHOD_CALL] Node: '('
          +-[IDENT] Node: 'UPPER'
          \-[EXPR_LIST] Node: 'exprList'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'e'
                \-[IDENT] Node: 'electionName'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionsEntity (e) -> electionse0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionse0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : e -> electionse0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionse0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} distinct ( ( UPPER ( exprList ( electionse0_.election_name electionse0_.election_id electionName ) ) ) ) ( FromClause{level=1} election electionse0_ ) ( order ( ( UPPER ( exprList ( electionse0_.election_name electionse0_.election_id electionName ) ) ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-MethodNode
    |  |  +-IdentNode
    |  |  | persister: null
    |  |  | originalText: UPPER
    |  |  \-SqlNode
    |  |     \-DotNode
    |  |       persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |  |       path: e.electionName
    |  |        +-IdentNode
    |  |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
    |  |        | originalText: e
    |  |        \-IdentNode
    |  |          persister: null
    |  |          originalText: electionName
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       \-MethodNode
          +-IdentNode
          | persister: null
          | originalText: UPPER
          \-SqlNode
             \-DotNode
               persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
               path: e.electionName
                +-IdentNode
                | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionsEntity)
                | originalText: e
                \-IdentNode
                  persister: null
                  originalText: electionName

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionse0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[METHOD_CALL] MethodNode: '('
    |  |  +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
    |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |  |     \-[DOT] DotNode: 'electionse0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
    |  |        +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
    |  |        \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionse0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionse0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionse0_,origin=null,columns={,className=com.spring.cg.entity.ElectionsEntity}}
    \-[ORDER] OrderByClause: 'order'
       \-[METHOD_CALL] MethodNode: '('
          +-[METHOD_NAME] IdentNode: 'UPPER' {originalText=UPPER}
          \-[EXPR_LIST] SqlNode: 'exprList'
             \-[DOT] DotNode: 'electionse0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionse0_,className=com.spring.cg.entity.ElectionsEntity,classAlias=e}
                +-[ALIAS_REF] IdentNode: 'electionse0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionsEntity, tableAlias=electionse0_}
                \-[IDENT] IdentNode: 'electionName' {originalText=electionName}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select distinct UPPER(e.electionName) from com.spring.cg.entity.ElectionsEntity e order by UPPER(e.electionName)
2021-01-17 17:06:03 DEBUG SQL: select distinct upper(electionse0_.election_name) as col_0_0_ from election electionse0_ order by upper(electionse0_.election_name)
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'stateRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.StateRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'districtController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'districtServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'districtRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.DistrictRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'electionController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'electionServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'electionRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.ElectionRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method getAllConstituency
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select distinct e.constituency from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'Select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'constituency'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} distinct ( electionen0_.constituency electionen0_.election_id constituency ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.constituency
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: constituency
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=e.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select distinct e.constituency from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.constituency as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllByElectionName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.electionName=?1
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ElectionEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionId'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'constituency'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 's'
    |           \-[IDENT] Node: 'date'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'electionName'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (s) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionId -> org.hibernate.type.LongType@5d5574c7
2021-01-17 17:06:03 DEBUG Resolved : s.electionId -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : s.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ElectionEntity ) ( electionen0_.election_id electionen0_.election_id electionId ) ( electionen0_.election_name electionen0_.election_id electionName ) ( electionen0_.state electionen0_.election_id state ) ( electionen0_.constituency electionen0_.election_id constituency ) ( electionen0_.date electionen0_.election_id date ) ) ) ( FromClause{level=1} election electionen0_ ) ( where ( = ( electionen0_.election_name electionen0_.election_id electionName ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ElectionEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ElectionEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionId
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionId
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | path: s.electionName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: electionName
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ElectionEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ElectionEntity' {originalText=ElectionEntity}
    |     +-[DOT] DotNode: 'electionen0_.election_id' {propertyName=electionId,dereferenceType=PRIMITIVE,getPropertyPath=electionId,path=s.electionId,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionId' {originalText=electionId}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=s.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=s.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=s.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=s.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.electionName=?1
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as col_0_0_, electionen0_.election_name as col_1_0_, electionen0_.state as col_2_0_, electionen0_.constituency as col_3_0_, electionen0_.date as col_4_0_ from election electionen0_ where electionen0_.election_name=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getAllElectionState
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select distinct e.state from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'Select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'state'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} distinct ( electionen0_.state electionen0_.election_id state ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.state
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: state
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=e.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select distinct e.state from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.state as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllByConstituency
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.constituency=?1
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ElectionEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionId'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'constituency'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 's'
    |           \-[IDENT] Node: 'date'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'constituency'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (s) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionId -> org.hibernate.type.LongType@5d5574c7
2021-01-17 17:06:03 DEBUG Resolved : s.electionId -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : s.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ElectionEntity ) ( electionen0_.election_id electionen0_.election_id electionId ) ( electionen0_.election_name electionen0_.election_id electionName ) ( electionen0_.state electionen0_.election_id state ) ( electionen0_.constituency electionen0_.election_id constituency ) ( electionen0_.date electionen0_.election_id date ) ) ) ( FromClause{level=1} election electionen0_ ) ( where ( = ( electionen0_.constituency electionen0_.election_id constituency ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ElectionEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ElectionEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionId
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionId
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | path: s.constituency
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: constituency
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ElectionEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ElectionEntity' {originalText=ElectionEntity}
    |     +-[DOT] DotNode: 'electionen0_.election_id' {propertyName=electionId,dereferenceType=PRIMITIVE,getPropertyPath=electionId,path=s.electionId,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionId' {originalText=electionId}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=s.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=s.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=s.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=s.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.constituency=?1
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as col_0_0_, electionen0_.election_name as col_1_0_, electionen0_.state as col_2_0_, electionen0_.constituency as col_3_0_, electionen0_.date as col_4_0_ from election electionen0_ where electionen0_.constituency=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getAllDate
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select distinct e.date from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'Select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} distinct ( electionen0_.date electionen0_.election_id date ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.date
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: date
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select distinct e.date from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.date as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getAllElectionName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: Select distinct e.electionName from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'Select'
          +-[DISTINCT] Node: 'distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'electionName'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} distinct ( electionen0_.election_name electionen0_.election_id electionName ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.electionName
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: electionName
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'distinct'
    |  +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: Select distinct e.electionName from com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.election_name as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllByDate
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.date=:date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ElectionEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionId'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'constituency'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 's'
    |           \-[IDENT] Node: 'date'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'date'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (s) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionId -> org.hibernate.type.LongType@5d5574c7
2021-01-17 17:06:03 DEBUG Resolved : s.electionId -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : s.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : s.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ElectionEntity ) ( electionen0_.election_id electionen0_.election_id electionId ) ( electionen0_.election_name electionen0_.election_id electionName ) ( electionen0_.state electionen0_.election_id state ) ( electionen0_.constituency electionen0_.election_id constituency ) ( electionen0_.date electionen0_.election_id date ) ) ) ( FromClause{level=1} election electionen0_ ) ( where ( = ( electionen0_.date electionen0_.election_id date ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ElectionEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ElectionEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionId
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionId
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | path: s.date
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: date
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ElectionEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ElectionEntity' {originalText=ElectionEntity}
    |     +-[DOT] DotNode: 'electionen0_.election_id' {propertyName=electionId,dereferenceType=PRIMITIVE,getPropertyPath=electionId,path=s.electionId,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionId' {originalText=electionId}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=s.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=s.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=s.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=s.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  \-[IDENT] IdentNode: 'date' {originalText=date}
          \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.LocalDateType@5fb44964}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.date=:date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as col_0_0_, electionen0_.election_name as col_1_0_, electionen0_.state as col_2_0_, electionen0_.constituency as col_3_0_, electionen0_.date as col_4_0_ from election electionen0_ where electionen0_.date=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllByState
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.state=?1
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ElectionEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionId'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'constituency'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 's'
    |           \-[IDENT] Node: 'date'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'state'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (s) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionId -> org.hibernate.type.LongType@5d5574c7
2021-01-17 17:06:03 DEBUG Resolved : s.electionId -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : s.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : s -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ElectionEntity ) ( electionen0_.election_id electionen0_.election_id electionId ) ( electionen0_.election_name electionen0_.election_id electionName ) ( electionen0_.state electionen0_.election_id state ) ( electionen0_.constituency electionen0_.election_id constituency ) ( electionen0_.date electionen0_.election_id date ) ) ) ( FromClause{level=1} election electionen0_ ) ( where ( = ( electionen0_.state electionen0_.election_id state ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ElectionEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ElectionEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionId
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionId
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: s.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: s
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | path: s.state
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  | originalText: s
          |  \-IdentNode
          |    persister: null
          |    originalText: state
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ElectionEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ElectionEntity' {originalText=ElectionEntity}
    |     +-[DOT] DotNode: 'electionen0_.election_id' {propertyName=electionId,dereferenceType=PRIMITIVE,getPropertyPath=electionId,path=s.electionId,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionId' {originalText=electionId}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=s.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=s.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=s.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=s, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  \-[IDENT] IdentNode: 'state' {originalText=state}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select new com.spring.cg.entity.ElectionEntity(s.electionId,s.electionName,s.state,s.constituency,s.date) from com.spring.cg.entity.ElectionEntity s where s.state=?1
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as col_0_0_, electionen0_.election_name as col_1_0_, electionen0_.state as col_2_0_, electionen0_.constituency as col_3_0_, electionen0_.date as col_4_0_ from election electionen0_ where electionen0_.state=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'partyController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'partyServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'partyRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.PartyRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'registerUserController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'registerUserServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'registerUserRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.RegisterUserRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByEmailId
2021-01-17 17:06:03 DEBUG Looking up named query RegisterUserEntity.findByEmailId
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query RegisterUserEntity.findByEmailId
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'resultController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'resultServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'resultRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.ResultRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByPartyName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select r from com.spring.cg.entity.ResultEntity r where party_name=?1
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ResultEntity'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'party_name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (r) -> resultenti0_
2021-01-17 17:06:03 DEBUG Resolved : r -> resultenti0_.result_id
2021-01-17 17:06:03 DEBUG Resolved : {synthetic-alias} -> {synthetic-alias}
2021-01-17 17:06:03 DEBUG getDataType() : party_name -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : {synthetic-alias}.party_name -> resultenti0_.party_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} resultenti0_.result_id ) ( FromClause{level=1} result resultenti0_ ) ( where ( = ( resultenti0_.party_name {synthetic-alias} party_name ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResultEntity): [result]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | originalText: r
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          | path: {synthetic-alias}.party_name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: party_name
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id as result_i1_9_' {alias=r, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'resultenti0_.party_name' {propertyName=party_name,dereferenceType=PRIMITIVE,getPropertyPath=party_name,path={synthetic-alias}.party_name,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=r}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'party_name' {originalText=party_name}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select r from com.spring.cg.entity.ResultEntity r where party_name=?1
2021-01-17 17:06:03 DEBUG SQL: select resultenti0_.result_id as result_i1_9_, resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_ from result resultenti0_ where resultenti0_.party_name=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findDistinctState
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT Distinct s.state FROM  com.spring.cg.entity.ResultEntity s
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ResultEntity'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'Distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 's'
             \-[IDENT] Node: 'state'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (s) -> resultenti0_
2021-01-17 17:06:03 DEBUG Resolved : s -> resultenti0_.result_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : s.state -> resultenti0_.state
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} Distinct ( resultenti0_.state resultenti0_.result_id state ) ) ( FromClause{level=1} result resultenti0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | path: s.state
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  |  | originalText: s
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: state
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'Distinct'
    |  +-[DOT] DotNode: 'resultenti0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=s.state,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=s}
    |  |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id' {alias=s, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT Distinct s.state FROM  com.spring.cg.entity.ResultEntity s
2021-01-17 17:06:03 DEBUG SQL: select distinct resultenti0_.state as col_0_0_ from result resultenti0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getElectionByCast
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT Distinct c.electionName FROM  com.spring.cg.entity.CastVoteEntity c
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'CastVoteEntity'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'Distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'c'
             \-[IDENT] Node: 'electionName'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.CastVoteEntity (c) -> castvoteen0_
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} Distinct ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ) ( FromClause{level=1} castvote castvoteen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |  | path: c.electionName
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |  |  | originalText: c
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: electionName
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [castvote castvoteen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (castvote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'Distinct'
    |  +-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=c.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |  |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |  |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[castvoteen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'castvote castvoteen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=castvote,tableAlias=castvoteen0_,origin=null,columns={,className=com.spring.cg.entity.CastVoteEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT Distinct c.electionName FROM  com.spring.cg.entity.CastVoteEntity c
2021-01-17 17:06:03 DEBUG SQL: select distinct castvoteen0_.election_name as col_0_0_ from castvote castvoteen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findDistinctParty
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT Distinct p.party_name FROM  com.spring.cg.entity.ResultEntity p
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ResultEntity'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'Distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'p'
             \-[IDENT] Node: 'party_name'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (p) -> resultenti0_
2021-01-17 17:06:03 DEBUG Resolved : p -> resultenti0_.result_id
2021-01-17 17:06:03 DEBUG getDataType() : party_name -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : p.party_name -> resultenti0_.party_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} Distinct ( resultenti0_.party_name resultenti0_.result_id party_name ) ) ( FromClause{level=1} result resultenti0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | path: p.party_name
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  |  | originalText: p
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: party_name
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'Distinct'
    |  +-[DOT] DotNode: 'resultenti0_.party_name' {propertyName=party_name,dereferenceType=PRIMITIVE,getPropertyPath=party_name,path=p.party_name,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id' {alias=p, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  |  \-[IDENT] IdentNode: 'party_name' {originalText=party_name}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT Distinct p.party_name FROM  com.spring.cg.entity.ResultEntity p
2021-01-17 17:06:03 DEBUG SQL: select distinct resultenti0_.party_name as col_0_0_ from result resultenti0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByState
2021-01-17 17:06:03 DEBUG Looking up named query ResultEntity.findByState
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query ResultEntity.findByState
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByElectionName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: select r from com.spring.cg.entity.ResultEntity r where election_name=?1
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ResultEntity'
    |  |     \-[ALIAS] Node: 'r'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'r'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'election_name'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (r) -> resultenti0_
2021-01-17 17:06:03 DEBUG Resolved : r -> resultenti0_.result_id
2021-01-17 17:06:03 DEBUG Resolved : {synthetic-alias} -> {synthetic-alias}
2021-01-17 17:06:03 DEBUG getDataType() : election_name -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : {synthetic-alias}.election_name -> resultenti0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} resultenti0_.result_id ) ( FromClause{level=1} result resultenti0_ ) ( where ( = ( resultenti0_.election_name {synthetic-alias} election_name ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResultEntity): [result]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | originalText: r
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          | path: {synthetic-alias}.election_name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          |  | originalText: {synthetic-alias}
          |  \-IdentNode
          |    persister: null
          |    originalText: election_name
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id as result_i1_9_' {alias=r, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[r], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=r,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'resultenti0_.election_name' {propertyName=election_name,dereferenceType=PRIMITIVE,getPropertyPath=election_name,path={synthetic-alias}.election_name,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=r}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'election_name' {originalText=election_name}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: select r from com.spring.cg.entity.ResultEntity r where election_name=?1
2021-01-17 17:06:03 DEBUG SQL: select resultenti0_.result_id as result_i1_9_, resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_ from result resultenti0_ where resultenti0_.election_name=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findDistinctElection
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT Distinct e.election_name FROM  com.spring.cg.entity.ResultEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ResultEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'Distinct'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'election_name'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (e) -> resultenti0_
2021-01-17 17:06:03 DEBUG Resolved : e -> resultenti0_.result_id
2021-01-17 17:06:03 DEBUG getDataType() : election_name -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.election_name -> resultenti0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} Distinct ( resultenti0_.election_name resultenti0_.result_id election_name ) ) ( FromClause{level=1} result resultenti0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | path: e.election_name
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: election_name
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'Distinct'
    |  +-[DOT] DotNode: 'resultenti0_.election_name' {propertyName=election_name,dereferenceType=PRIMITIVE,getPropertyPath=election_name,path=e.election_name,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id' {alias=e, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  |  \-[IDENT] IdentNode: 'election_name' {originalText=election_name}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT Distinct e.election_name FROM  com.spring.cg.entity.ResultEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct resultenti0_.election_name as col_0_0_ from result resultenti0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method getAllResult
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT new com.spring.cg.entity.ResultEntity(c.electionName,c.state,c.date,c.constituency,c.candidateName,c.partyName,count(c.voterId)) from com.spring.cg.entity.CastVoteEntity c GROUP BY c.electionName,c.state,c.date,c.constituency,c.candidateName,c.partyName having c.electionName=:election_name AND c.state=:state
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'CastVoteEntity'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'spring'
    |        |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  \-[IDENT] Node: 'entity'
    |        |  \-[IDENT] Node: 'ResultEntity'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'electionName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'state'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'date'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'constituency'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'candidateName'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'partyName'
    |        \-[COUNT] Node: 'count'
    |           \-[DOT] Node: '.'
    |              +-[IDENT] Node: 'c'
    |              \-[IDENT] Node: 'voterId'
    \-[GROUP] Node: 'GROUP'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'electionName'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'state'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'date'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'constituency'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'candidateName'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'partyName'
       \-[HAVING] Node: 'having'
          \-[AND] Node: 'AND'
             +-[EQ] Node: '='
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'c'
             |  |  \-[IDENT] Node: 'electionName'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'election_name'
             \-[EQ] Node: '='
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'c'
                |  \-[IDENT] Node: 'state'
                \-[COLON] Node: ':'
                   \-[IDENT] Node: 'state'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.CastVoteEntity (c) -> castvoteen0_
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.state -> castvoteen0_.state
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : c.date -> castvoteen0_.date
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.constituency -> castvoteen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : candidateName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.candidateName -> castvoteen0_.candidate_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : partyName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.partyName -> castvoteen0_.party_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : voterId -> org.hibernate.type.IntegerType@6fd9dbe6
2021-01-17 17:06:03 DEBUG Resolved : c.voterId -> castvoteen0_.voter_id
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.state -> castvoteen0_.state
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : c.date -> castvoteen0_.date
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.constituency -> castvoteen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : candidateName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.candidateName -> castvoteen0_.candidate_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : partyName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.partyName -> castvoteen0_.party_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.electionName -> castvoteen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : c -> castvoteen0_.cast_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : c.state -> castvoteen0_.state
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} ( ( ( . ( . ( . ( . com spring ) cg ) entity ) ResultEntity ) ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ( castvoteen0_.state castvoteen0_.cast_id state ) ( castvoteen0_.date castvoteen0_.cast_id date ) ( castvoteen0_.constituency castvoteen0_.cast_id constituency ) ( castvoteen0_.candidate_name castvoteen0_.cast_id candidateName ) ( castvoteen0_.party_name castvoteen0_.cast_id partyName ) ( count ( castvoteen0_.voter_id castvoteen0_.cast_id voterId ) ) ) ) ( FromClause{level=1} castvote castvoteen0_ ) ( GROUP ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ( castvoteen0_.state castvoteen0_.cast_id state ) ( castvoteen0_.date castvoteen0_.cast_id date ) ( castvoteen0_.constituency castvoteen0_.cast_id constituency ) ( castvoteen0_.candidate_name castvoteen0_.cast_id candidateName ) ( castvoteen0_.party_name castvoteen0_.cast_id partyName ) ( having ( AND ( = ( castvoteen0_.election_name castvoteen0_.cast_id electionName ) ? ) ( = ( castvoteen0_.state castvoteen0_.cast_id state ) ? ) ) ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  \-ConstructorNode
    |     +-DotNode
    |     | persister: null
    |     | path: com.spring.cg.entity.ResultEntity
    |     |  +-DotNode
    |     |  | persister: null
    |     |  | path: com.spring.cg.entity
    |     |  |  +-DotNode
    |     |  |  | persister: null
    |     |  |  | path: com.spring.cg
    |     |  |  |  +-DotNode
    |     |  |  |  | persister: null
    |     |  |  |  | path: com.spring
    |     |  |  |  |  +-IdentNode
    |     |  |  |  |  | persister: null
    |     |  |  |  |  | originalText: com
    |     |  |  |  |  \-IdentNode
    |     |  |  |  |    persister: null
    |     |  |  |  |    originalText: spring
    |     |  |  |  \-IdentNode
    |     |  |  |    persister: null
    |     |  |  |    originalText: cg
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: entity
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: ResultEntity
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.electionName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: electionName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.state
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: state
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.constituency
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: constituency
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.candidateName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: candidateName
    |     +-SqlNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     | path: c.partyName
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |  | originalText: c
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: partyName
    |     +-SqlNode
    |     +-CountNode
    |     |  \-DotNode
    |     |    persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |    path: c.voterId
    |     |     +-IdentNode
    |     |     | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
    |     |     | originalText: c
    |     |     \-IdentNode
    |     |       persister: null
    |     |       originalText: voterId
    |     \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.electionName
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: electionName
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.state
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: state
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.date
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: date
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.constituency
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: constituency
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.candidateName
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: candidateName
       +-DotNode
       | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       | path: c.partyName
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
       |  | originalText: c
       |  \-IdentNode
       |    persister: null
       |    originalText: partyName
       \-SqlNode
          \-SqlNode
             +-BinaryLogicOperatorNode
             |  +-DotNode
             |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
             |  | path: c.electionName
             |  |  +-IdentNode
             |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
             |  |  | originalText: c
             |  |  \-IdentNode
             |  |    persister: null
             |  |    originalText: electionName
             |  \-ParameterNode
             \-BinaryLogicOperatorNode
                +-DotNode
                | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
                | path: c.state
                |  +-IdentNode
                |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CastVoteEntity)
                |  | originalText: c
                |  \-IdentNode
                |    persister: null
                |    originalText: state
                \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [castvote castvoteen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (castvote)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity.ResultEntity,no from element}
    |     |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg.entity,no from element}
    |     |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring.cg,no from element}
    |     |  |  |  +-[DOT] DotNode: '.' {propertyName=null,dereferenceType=UNKNOWN,getPropertyPath=null,path=com.spring,no from element}
    |     |  |  |  |  +-[IDENT] IdentNode: 'com' {originalText=com}
    |     |  |  |  |  \-[IDENT] IdentNode: 'spring' {originalText=spring}
    |     |  |  |  \-[IDENT] IdentNode: 'cg' {originalText=cg}
    |     |  |  \-[IDENT] IdentNode: 'entity' {originalText=entity}
    |     |  \-[IDENT] IdentNode: 'ResultEntity' {originalText=ResultEntity}
    |     +-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=c.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=c.state,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=c.date,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=c.constituency,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_3_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.candidate_name' {propertyName=candidateName,dereferenceType=PRIMITIVE,getPropertyPath=candidateName,path=c.candidateName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'candidateName' {originalText=candidateName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_4_0_'
    |     +-[DOT] DotNode: 'castvoteen0_.party_name' {propertyName=partyName,dereferenceType=PRIMITIVE,getPropertyPath=partyName,path=c.partyName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |  \-[IDENT] IdentNode: 'partyName' {originalText=partyName}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_5_0_'
    |     +-[COUNT] CountNode: 'count'
    |     |  \-[DOT] DotNode: 'castvoteen0_.voter_id' {propertyName=voterId,dereferenceType=PRIMITIVE,getPropertyPath=voterId,path=c.voterId,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
    |     |     +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
    |     |     \-[IDENT] IdentNode: 'voterId' {originalText=voterId}
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[castvoteen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'castvote castvoteen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=castvote,tableAlias=castvoteen0_,origin=null,columns={,className=com.spring.cg.entity.CastVoteEntity}}
    \-[GROUP] SqlNode: 'GROUP'
       +-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=c.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
       +-[DOT] DotNode: 'castvoteen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=c.state,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'state' {originalText=state}
       +-[DOT] DotNode: 'castvoteen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=c.date,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'date' {originalText=date}
       +-[DOT] DotNode: 'castvoteen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=c.constituency,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
       +-[DOT] DotNode: 'castvoteen0_.candidate_name' {propertyName=candidateName,dereferenceType=PRIMITIVE,getPropertyPath=candidateName,path=c.candidateName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'candidateName' {originalText=candidateName}
       +-[DOT] DotNode: 'castvoteen0_.party_name' {propertyName=partyName,dereferenceType=PRIMITIVE,getPropertyPath=partyName,path=c.partyName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
       |  \-[IDENT] IdentNode: 'partyName' {originalText=partyName}
       \-[HAVING] SqlNode: 'having'
          \-[AND] SqlNode: 'AND'
             +-[EQ] BinaryLogicOperatorNode: '='
             |  +-[DOT] DotNode: 'castvoteen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=c.electionName,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
             |  |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
             |  |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=election_name, expectedType=org.hibernate.type.StringType@72a34537}
             \-[EQ] BinaryLogicOperatorNode: '='
                +-[DOT] DotNode: 'castvoteen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=c.state,tableAlias=castvoteen0_,className=com.spring.cg.entity.CastVoteEntity,classAlias=c}
                |  +-[ALIAS_REF] IdentNode: 'castvoteen0_.cast_id' {alias=c, className=com.spring.cg.entity.CastVoteEntity, tableAlias=castvoteen0_}
                |  \-[IDENT] IdentNode: 'state' {originalText=state}
                \-[NAMED_PARAM] ParameterNode: '?' {name=state, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT new com.spring.cg.entity.ResultEntity(c.electionName,c.state,c.date,c.constituency,c.candidateName,c.partyName,count(c.voterId)) from com.spring.cg.entity.CastVoteEntity c GROUP BY c.electionName,c.state,c.date,c.constituency,c.candidateName,c.partyName having c.electionName=:election_name AND c.state=:state
2021-01-17 17:06:03 DEBUG SQL: select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.date as col_2_0_, castvoteen0_.constituency as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, count(castvoteen0_.voter_id) as col_6_0_ from castvote castvoteen0_ group by castvoteen0_.election_name , castvoteen0_.state , castvoteen0_.date , castvoteen0_.constituency , castvoteen0_.candidate_name , castvoteen0_.party_name having castvoteen0_.election_name=? and castvoteen0_.state=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'scheduleController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'scheduleServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'scheduleRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.ScheduleRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findAllDate
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT(e.date) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( electionen0_.date electionen0_.election_id date ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.date
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: date
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT(e.date) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.date as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByState
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.state=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'e'
    |     |  |  \-[IDENT] Node: 'state'
    |     |  \-[PARAM] Node: '?'
    |     |     \-[NUM_INT] Node: '1'
    |     \-[GT] Node: '>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'date'
    |        \-[PARAM] Node: '?'
    |           \-[NUM_INT] Node: '2'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'e'
          \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( AND ( = ( electionen0_.state electionen0_.election_id state ) ? ) ( > ( electionen0_.date electionen0_.election_id date ) ? ) ) ) ( ORDER ( electionen0_.date electionen0_.election_id date ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-BinaryLogicOperatorNode
    |     |  +-DotNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | path: e.state
    |     |  |  +-IdentNode
    |     |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  |  | originalText: e
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: state
    |     |  \-ParameterNode
    |     \-BinaryLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        | path: e.date
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        |  | originalText: e
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: date
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
         path: e.date
          +-IdentNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | originalText: e
          \-IdentNode
            persister: null
            originalText: date

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'AND'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=e.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |     |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |     |  \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}
    |     \-[GT] BinaryLogicOperatorNode: '>'
    |        +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |        |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |        |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |        \-[PARAM] ParameterNode: '?' {label=2, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          \-[IDENT] IdentNode: 'date' {originalText=date}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.state=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.state=? and electionen0_.date>? order by electionen0_.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByElectionName
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.electionName=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'e'
    |     |  |  \-[IDENT] Node: 'electionName'
    |     |  \-[PARAM] Node: '?'
    |     |     \-[NUM_INT] Node: '1'
    |     \-[GT] Node: '>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'date'
    |        \-[PARAM] Node: '?'
    |           \-[NUM_INT] Node: '2'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'e'
          \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( AND ( = ( electionen0_.election_name electionen0_.election_id electionName ) ? ) ( > ( electionen0_.date electionen0_.election_id date ) ? ) ) ) ( ORDER ( electionen0_.date electionen0_.election_id date ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-BinaryLogicOperatorNode
    |     |  +-DotNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | path: e.electionName
    |     |  |  +-IdentNode
    |     |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  |  | originalText: e
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: electionName
    |     |  \-ParameterNode
    |     \-BinaryLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        | path: e.date
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        |  | originalText: e
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: date
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
         path: e.date
          +-IdentNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | originalText: e
          \-IdentNode
            persister: null
            originalText: date

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'AND'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |     |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |     |  \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}
    |     \-[GT] BinaryLogicOperatorNode: '>'
    |        +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |        |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |        |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |        \-[PARAM] ParameterNode: '?' {label=2, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          \-[IDENT] IdentNode: 'date' {originalText=date}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.electionName=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.election_name=? and electionen0_.date>? order by electionen0_.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllconstituency
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT(e.constituency) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'constituency'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( electionen0_.constituency electionen0_.election_id constituency ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.constituency
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: constituency
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=e.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT(e.constituency) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.constituency as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByConstituency
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.constituency=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    +-[WHERE] Node: 'WHERE'
    |  \-[AND] Node: 'AND'
    |     +-[EQ] Node: '='
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'e'
    |     |  |  \-[IDENT] Node: 'constituency'
    |     |  \-[PARAM] Node: '?'
    |     |     \-[NUM_INT] Node: '1'
    |     \-[GT] Node: '>'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'e'
    |        |  \-[IDENT] Node: 'date'
    |        \-[PARAM] Node: '?'
    |           \-[NUM_INT] Node: '2'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'e'
          \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : constituency -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.constituency -> electionen0_.constituency
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( AND ( = ( electionen0_.constituency electionen0_.election_id constituency ) ? ) ( > ( electionen0_.date electionen0_.election_id date ) ? ) ) ) ( ORDER ( electionen0_.date electionen0_.election_id date ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-SqlNode
    |     +-BinaryLogicOperatorNode
    |     |  +-DotNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | path: e.constituency
    |     |  |  +-IdentNode
    |     |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  |  | originalText: e
    |     |  |  \-IdentNode
    |     |  |    persister: null
    |     |  |    originalText: constituency
    |     |  \-ParameterNode
    |     \-BinaryLogicOperatorNode
    |        +-DotNode
    |        | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        | path: e.date
    |        |  +-IdentNode
    |        |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |        |  | originalText: e
    |        |  \-IdentNode
    |        |    persister: null
    |        |    originalText: date
    |        \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
         path: e.date
          +-IdentNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | originalText: e
          \-IdentNode
            persister: null
            originalText: date

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[AND] SqlNode: 'AND'
    |     +-[EQ] BinaryLogicOperatorNode: '='
    |     |  +-[DOT] DotNode: 'electionen0_.constituency' {propertyName=constituency,dereferenceType=PRIMITIVE,getPropertyPath=constituency,path=e.constituency,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |     |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  |  \-[IDENT] IdentNode: 'constituency' {originalText=constituency}
    |     |  \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}
    |     \-[GT] BinaryLogicOperatorNode: '>'
    |        +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |        |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |        |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |        \-[PARAM] ParameterNode: '?' {label=2, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          \-[IDENT] IdentNode: 'date' {originalText=date}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.constituency=?1 AND e.date>?2 ORDER BY e.date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.constituency=? and electionen0_.date>? order by electionen0_.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAll
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date>?1 ORDER BY e.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    +-[WHERE] Node: 'WHERE'
    |  \-[GT] Node: '>'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'e'
    |     |  \-[IDENT] Node: 'date'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'e'
          \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( > ( electionen0_.date electionen0_.election_id date ) ? ) ) ( ORDER ( electionen0_.date electionen0_.election_id date ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: e.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
         path: e.date
          +-IdentNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | originalText: e
          \-IdentNode
            persister: null
            originalText: date

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[GT] BinaryLogicOperatorNode: '>'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          \-[IDENT] IdentNode: 'date' {originalText=date}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date>?1 ORDER BY e.date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.date>? order by electionen0_.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllElectionNames
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT(e.electionName) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'electionName'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : electionName -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.electionName -> electionen0_.election_name
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( electionen0_.election_name electionen0_.election_id electionName ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.electionName
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: electionName
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'electionen0_.election_name' {propertyName=electionName,dereferenceType=PRIMITIVE,getPropertyPath=electionName,path=e.electionName,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'electionName' {originalText=electionName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT(e.electionName) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.election_name as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByMonth
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE TRIM(to_char(e.date,'MONTH'))=?1 AND e.date>?2
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[AND] Node: 'AND'
          +-[EQ] Node: '='
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'TRIM'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[METHOD_CALL] Node: '('
          |  |        +-[IDENT] Node: 'to_char'
          |  |        \-[EXPR_LIST] Node: 'exprList'
          |  |           +-[DOT] Node: '.'
          |  |           |  +-[IDENT] Node: 'e'
          |  |           |  \-[IDENT] Node: 'date'
          |  |           \-[QUOTED_STRING] Node: ''MONTH''
          |  \-[PARAM] Node: '?'
          |     \-[NUM_INT] Node: '1'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'e'
             |  \-[IDENT] Node: 'date'
             \-[PARAM] Node: '?'
                \-[NUM_INT] Node: '2'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( AND ( = ( ( TRIM ( exprList ( ( to_char ( exprList ( electionen0_.date electionen0_.election_id date ) 'MONTH' ) ) ) ) ? ) ( > ( electionen0_.date electionen0_.election_id date ) ? ) ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-MethodNode
          |  |  +-IdentNode
          |  |  | persister: null
          |  |  | originalText: TRIM
          |  |  \-SqlNode
          |  |     \-MethodNode
          |  |        +-IdentNode
          |  |        | persister: null
          |  |        | originalText: to_char
          |  |        \-SqlNode
          |  |           +-DotNode
          |  |           | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  |           | path: e.date
          |  |           |  +-IdentNode
          |  |           |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  |           |  | originalText: e
          |  |           |  \-IdentNode
          |  |           |    persister: null
          |  |           |    originalText: date
          |  |           \-LiteralNode
          |  \-ParameterNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
             | path: e.date
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
             |  | originalText: e
             |  \-IdentNode
             |    persister: null
             |    originalText: date
             \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[AND] SqlNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[METHOD_CALL] MethodNode: '('
          |  |  +-[METHOD_NAME] IdentNode: 'TRIM' {originalText=TRIM}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[METHOD_CALL] MethodNode: '('
          |  |        +-[METHOD_NAME] IdentNode: 'to_char' {originalText=to_char}
          |  |        \-[EXPR_LIST] SqlNode: 'exprList'
          |  |           +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          |  |           |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  |           |  \-[IDENT] IdentNode: 'date' {originalText=date}
          |  |           \-[QUOTED_STRING] LiteralNode: ''MONTH''
          |  \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
             |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
             |  \-[IDENT] IdentNode: 'date' {originalText=date}
             \-[PARAM] ParameterNode: '?' {label=2, expectedType=org.hibernate.type.LocalDateType@5fb44964}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE TRIM(to_char(e.date,'MONTH'))=?1 AND e.date>?2
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where trim(to_char(electionen0_.date, 'MONTH'))=? and electionen0_.date>?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllStates
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT(e.state) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'state'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.state -> electionen0_.state
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( electionen0_.state electionen0_.election_id state ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | path: e.state
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: state
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'electionen0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=e.state,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |  \-[IDENT] IdentNode: 'state' {originalText=state}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT(e.state) FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct electionen0_.state as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByDate
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date=:date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'date'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( = ( electionen0_.date electionen0_.election_id date ) ? ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | path: e.date
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: date
          \-ParameterNode

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          |  \-[IDENT] IdentNode: 'date' {originalText=date}
          \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.LocalDateType@5fb44964}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date=:date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.date=?
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findByDateRange
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date BETWEEN :startdate AND :enddate ORDER BY e.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ElectionEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'e'
    +-[WHERE] Node: 'WHERE'
    |  \-[BETWEEN] Node: 'between'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'e'
    |     |  \-[IDENT] Node: 'date'
    |     +-[COLON] Node: ':'
    |     |  \-[IDENT] Node: 'startdate'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'enddate'
    \-[ORDER] Node: 'ORDER'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'e'
          \-[IDENT] Node: 'date'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} electionen0_.election_id ) ( FromClause{level=1} election electionen0_ ) ( WHERE ( between ( electionen0_.date electionen0_.election_id date ) ? ? ) ) ( ORDER ( electionen0_.date electionen0_.election_id date ) ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ElectionEntity): [election]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  | originalText: e
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BetweenOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     | path: e.date
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |     |  | originalText: e
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: date
    |     +-ParameterNode
    |     \-ParameterNode
    \-OrderByClause
       \-DotNode
         persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
         path: e.date
          +-IdentNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
          | originalText: e
          \-IdentNode
            persister: null
            originalText: date

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id as election1_5_' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  \-[SQL_TOKEN] SqlFragment: 'electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[BETWEEN] BetweenOperatorNode: 'between'
    |     +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |     |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |     +-[NAMED_PARAM] ParameterNode: '?' {name=startdate, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=enddate, expectedType=org.hibernate.type.LocalDateType@5fb44964}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
          +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
          \-[IDENT] IdentNode: 'date' {originalText=date}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT e FROM com.spring.cg.entity.ElectionEntity e WHERE e.date BETWEEN :startdate AND :enddate ORDER BY e.date
2021-01-17 17:06:03 DEBUG SQL: select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.date between ? and ? order by electionen0_.date
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllMonth
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT(TRIM(to_char(e.date,'MONTH') ))  FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'ElectionEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[METHOD_CALL] Node: '('
             +-[IDENT] Node: 'TRIM'
             \-[EXPR_LIST] Node: 'exprList'
                \-[METHOD_CALL] Node: '('
                   +-[IDENT] Node: 'to_char'
                   \-[EXPR_LIST] Node: 'exprList'
                      +-[DOT] Node: '.'
                      |  +-[IDENT] Node: 'e'
                      |  \-[IDENT] Node: 'date'
                      \-[QUOTED_STRING] Node: ''MONTH''

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.ElectionEntity (e) -> electionen0_
2021-01-17 17:06:03 DEBUG Resolved : e -> electionen0_.election_id
2021-01-17 17:06:03 DEBUG getDataType() : date -> org.hibernate.type.LocalDateType@5fb44964
2021-01-17 17:06:03 DEBUG Resolved : e.date -> electionen0_.date
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( ( TRIM ( exprList ( ( to_char ( exprList ( electionen0_.date electionen0_.election_id date ) 'MONTH' ) ) ) ) ) ( FromClause{level=1} election electionen0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-MethodNode
    |  |  +-IdentNode
    |  |  | persister: null
    |  |  | originalText: TRIM
    |  |  \-SqlNode
    |  |     \-MethodNode
    |  |        +-IdentNode
    |  |        | persister: null
    |  |        | originalText: to_char
    |  |        \-SqlNode
    |  |           +-DotNode
    |  |           | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |           | path: e.date
    |  |           |  +-IdentNode
    |  |           |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ElectionEntity)
    |  |           |  | originalText: e
    |  |           |  \-IdentNode
    |  |           |    persister: null
    |  |           |    originalText: date
    |  |           \-LiteralNode
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [election electionen0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (election)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[METHOD_CALL] MethodNode: '('
    |  |  +-[METHOD_NAME] IdentNode: 'TRIM' {originalText=TRIM}
    |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |  |     \-[METHOD_CALL] MethodNode: '('
    |  |        +-[METHOD_NAME] IdentNode: 'to_char' {originalText=to_char}
    |  |        \-[EXPR_LIST] SqlNode: 'exprList'
    |  |           +-[DOT] DotNode: 'electionen0_.date' {propertyName=date,dereferenceType=PRIMITIVE,getPropertyPath=date,path=e.date,tableAlias=electionen0_,className=com.spring.cg.entity.ElectionEntity,classAlias=e}
    |  |           |  +-[ALIAS_REF] IdentNode: 'electionen0_.election_id' {alias=e, className=com.spring.cg.entity.ElectionEntity, tableAlias=electionen0_}
    |  |           |  \-[IDENT] IdentNode: 'date' {originalText=date}
    |  |           \-[QUOTED_STRING] LiteralNode: ''MONTH''
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[electionen0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'election electionen0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=election,tableAlias=electionen0_,origin=null,columns={,className=com.spring.cg.entity.ElectionEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT(TRIM(to_char(e.date,'MONTH') ))  FROM com.spring.cg.entity.ElectionEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct trim(to_char(electionen0_.date, 'MONTH')) as col_0_0_ from election electionen0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'updateAndDeleteCandidateController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'updateAndDeleteCandidateServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'updateAndDeleteCandidateRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.UpdateAndDeleteCandidateRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByEmail
2021-01-17 17:06:03 DEBUG Looking up named query CandidateEntity.findByEmail
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query CandidateEntity.findByEmail
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method deleteByEmail
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: DELETE  FROM com.spring.cg.entity.CandidateEntity q  WHERE q.email = ?1  
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[DELETE] Node: 'DELETE'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'spring'
    |     |  |  |  \-[IDENT] Node: 'cg'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'CandidateEntity'
    |     \-[ALIAS] Node: 'q'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'q'
          |  \-[IDENT] Node: 'email'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '1'

2021-01-17 17:06:03 DEBUG delete << begin [level=1, statement=delete]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.CandidateEntity (q) -> candidatee0_
2021-01-17 17:06:03 DEBUG Resolved : q -> candidate_id
2021-01-17 17:06:03 DEBUG getDataType() : email -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : q.email -> email
2021-01-17 17:06:03 DEBUG delete : finishing up [level=1, statement=delete]
2021-01-17 17:06:03 DEBUG delete >> end [level=1, statement=delete]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[DELETE] DeleteStatement: 'DELETE'  querySpaces (candidate)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[q], fromElementByTableAlias=[candidatee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'candidate' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=q,role=null,tableName=candidate,tableAlias=candidatee0_,origin=null,columns={,className=com.spring.cg.entity.CandidateEntity}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=q.email,tableAlias=candidatee0_,className=com.spring.cg.entity.CandidateEntity,classAlias=q}
          |  +-[ALIAS_REF] IdentNode: 'candidate_id' {alias=q, className=com.spring.cg.entity.CandidateEntity, tableAlias=candidatee0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[PARAM] ParameterNode: '?' {label=1, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'userController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'userServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'userRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.UserRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByEmailId
2021-01-17 17:06:03 DEBUG Looking up named query UserEntity.findByEmailId
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query UserEntity.findByEmailId
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterIdController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterIdServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterIdRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.VoterIdRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByEmailId
2021-01-17 17:06:03 DEBUG Looking up named query VoterIdEntity.findByEmailId
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query VoterIdEntity.findByEmailId
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByDistrict
2021-01-17 17:06:03 DEBUG Looking up named query VoterIdEntity.findByDistrict
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query VoterIdEntity.findByDistrict
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByStatus
2021-01-17 17:06:03 DEBUG Looking up named query VoterIdEntity.findByStatus
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query VoterIdEntity.findByStatus
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findAllStatus
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT (e.status) from com.spring.cg.entity.VoterIdEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'VoterIdEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'status'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.VoterIdEntity (e) -> voterident0_
2021-01-17 17:06:03 DEBUG Resolved : e -> voterident0_.voter_id
2021-01-17 17:06:03 DEBUG getDataType() : status -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.status -> voterident0_.application_status
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( voterident0_.application_status voterident0_.voter_id status ) ) ( FromClause{level=1} voter_request voterident0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  | path: e.status
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: status
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [voter_request voterident0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voter_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'voterident0_.application_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=e.status,tableAlias=voterident0_,className=com.spring.cg.entity.VoterIdEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id' {alias=e, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
    |  |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[voterident0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'voter_request voterident0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=voter_request,tableAlias=voterident0_,origin=null,columns={,className=com.spring.cg.entity.VoterIdEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT (e.status) from com.spring.cg.entity.VoterIdEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct voterident0_.application_status as col_0_0_ from voter_request voterident0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Looking up query for method findAllDistricts
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG parse() - HQL: SELECT DISTINCT (e.district) from com.spring.cg.entity.VoterIdEntity e
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'VoterIdEntity'
       |     \-[ALIAS] Node: 'e'
       \-[SELECT] Node: 'SELECT'
          +-[DISTINCT] Node: 'DISTINCT'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'e'
             \-[IDENT] Node: 'district'

2021-01-17 17:06:03 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:03 DEBUG FromClause{level=1} : com.spring.cg.entity.VoterIdEntity (e) -> voterident0_
2021-01-17 17:06:03 DEBUG Resolved : e -> voterident0_.voter_id
2021-01-17 17:06:03 DEBUG getDataType() : district -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:03 DEBUG Resolved : e.district -> voterident0_.district
2021-01-17 17:06:03 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:03 DEBUG processQuery() :  ( SELECT ( {select clause} DISTINCT ( voterident0_.district voterident0_.voter_id district ) ) ( FromClause{level=1} voter_request voterident0_ ) )
2021-01-17 17:06:03 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-SqlNode
    |  +-DotNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  | path: e.district
    |  |  +-IdentNode
    |  |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  |  | originalText: e
    |  |  \-IdentNode
    |  |    persister: null
    |  |    originalText: district
    |  \-SqlNode
    \-FromClause
       \-FromElement

2021-01-17 17:06:03 DEBUG Using FROM fragment [voter_request voterident0_]
2021-01-17 17:06:03 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:03 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voter_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DISTINCT] SqlNode: 'DISTINCT'
    |  +-[DOT] DotNode: 'voterident0_.district' {propertyName=district,dereferenceType=PRIMITIVE,getPropertyPath=district,path=e.district,tableAlias=voterident0_,className=com.spring.cg.entity.VoterIdEntity,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id' {alias=e, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
    |  |  \-[IDENT] IdentNode: 'district' {originalText=district}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[voterident0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'voter_request voterident0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=voter_request,tableAlias=voterident0_,origin=null,columns={,className=com.spring.cg.entity.VoterIdEntity}}

2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG HQL: SELECT DISTINCT (e.district) from com.spring.cg.entity.VoterIdEntity e
2021-01-17 17:06:03 DEBUG SQL: select distinct voterident0_.district as col_0_0_ from voter_request voterident0_
2021-01-17 17:06:03 DEBUG throwQueryException() : no errors
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterRequestController'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterRequestServiceImpl'
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'voterRequestRepo'
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Initializing repository instance for com.spring.cg.repo.VoterRequestRepo…
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Looking up query for method findByEmailId
2021-01-17 17:06:03 DEBUG Looking up named query VoterRequestEntity.findByEmailId
2021-01-17 17:06:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:03 DEBUG Did not find named query VoterRequestEntity.findByEmailId
2021-01-17 17:06:03 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:03 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:03 DEBUG Creating shared instance of singleton bean 'globalExceptionHandler'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swagger2Controller'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'resourceGroupCache'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'springfox.documentation.spring.web.SpringfoxWebMvcConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'serviceModelToSwagger2MapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'modelMapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterMapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'securityMapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'licenseMapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'vendorExtensionsMapperImpl'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'jsonSerializer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swagger2Module'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jsonSerializer' via factory method to bean named 'swagger2Module'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiDescriptionLookup'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiDescriptionReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'cachingOperationReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiOperationReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'documentationPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiListingBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'expandedParameterBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'resourceGroupingStrategyRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationModelsProviderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultsProviderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'pathDecoratorRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'cachingOperationNameGenerator'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiOperationReader' via constructor to bean named 'cachingOperationNameGenerator'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'cachingOperationReader' via constructor to bean named 'apiOperationReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'cachingOperationReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiDescriptionReader' via constructor to bean named 'apiDescriptionLookup'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiDocumentationScanner'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiListingReferenceScanner'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiListingScanner'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiModelReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'cachingModelProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultModelProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'springfox.documentation.schema.configuration.ModelsConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'cachingModelPropertiesProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'optimized'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'accessorsProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'accessorsProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'fieldProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'fieldProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'factoryMethodProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'factoryMethodProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'objectMapperBeanPropertyNamingStrategy'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'schemaPluginsManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'modelPropertyBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'modelBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelPropertyBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'schemaPluginsManager' via constructor to bean named 'modelBuilderPluginRegistry'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'typeNameProviderPluginRegistry'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'typeNameExtractor' via constructor to bean named 'typeNameProviderPluginRegistry'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'accessorsProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'fieldProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'factoryMethodProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'objectMapperBeanPropertyNamingStrategy'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'schemaPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'optimized' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'cachingModelPropertiesProvider' via constructor to bean named 'optimized'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'cachingModelDependencyProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultModelDependencyProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'cachingModelPropertiesProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelDependencyProvider' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'cachingModelDependencyProvider' via constructor to bean named 'defaultModelDependencyProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelPropertiesProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'cachingModelDependencyProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'schemaPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'defaultModelProvider' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'cachingModelProvider' via constructor to bean named 'defaultModelProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'cachingModelProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiModelReader' via constructor to bean named 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiDescriptionReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'apiModelReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiListingScanner' via constructor to bean named 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingReferenceScanner'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiDocumentationScanner' via constructor to bean named 'apiListingScanner'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiListingReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mediaTypeReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'mediaTypeReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultOperationReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultTagsProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationDeprecatedReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationModelsProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationModelsProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationParameterHeadersConditionReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationParameterHeadersConditionReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationParameterReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'modelAttributeParameterExpander'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'modelAttributeParameterExpander' via constructor to bean named 'fieldProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationParameterReader' via constructor to bean named 'modelAttributeParameterExpander'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationParameterRequestConditionReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationParameterRequestConditionReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationResponseClassReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationResponseClassReader' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationTagsReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'operationTagsReader' via constructor to bean named 'defaultTagsProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'responseMessagesReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'responseMessagesReader' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'expandedParameterBuilder'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'expandedParameterBuilder' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterDataTypeReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'parameterDataTypeReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterDefaultReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterMultiplesReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterNameReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterRequiredReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterTypeReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'documentationPluginsBootstrapper'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'webMvcRequestHandlerProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6079cf5'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6079cf5'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'openEntityManagerInViewInterceptorConfigurer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration' via constructor to bean named 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'openEntityManagerInViewInterceptor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'openEntityManagerInViewInterceptorConfigurer' via factory method to bean named 'openEntityManagerInViewInterceptor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'pageableCustomizer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'sortCustomizer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG 80 mappings in 'requestMappingHandlerMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'webMvcRequestHandlerProvider' via constructor to bean named 'requestMappingHandlerMapping'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaults'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'documentationPluginsManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'webMvcRequestHandlerProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'resourceGroupCache'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'apiDocumentationScanner'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'defaults'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'documentationPluginsBootstrapper' via constructor to bean named 'servletContext'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationPathDecorator'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'pathMappingDecorator'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'pathSanitizer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'queryStringUriTemplateDecorator'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiModelBuilder'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiModelBuilder' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiModelPropertyPropertyBuilder'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiModelTypeNameProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationAuthReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationHiddenReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationHttpMethodReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationImplicitParameterReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationImplicitParametersReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationNicknameIntoUniqueIdReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationNotesReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationPositionReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'operationSummaryReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerMediaTypeReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerOperationModelsProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerOperationModelsProvider' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerOperationResponseClassReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerOperationResponseClassReader' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerOperationTagsReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerOperationTagsReader' via constructor to bean named 'defaultTagsProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerResponseMessageReader'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeNameExtractor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'swaggerResponseMessageReader' via constructor to bean named 'typeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'vendorExtensionsReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerParameterDescriptionReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerExpandedParameterBuilder'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'apiResourceController'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'inMemorySwaggerResourcesProvider'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'inMemorySwaggerResourcesProvider' via constructor to bean named 'resourceGroupCache'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'apiResourceController' via constructor to bean named 'inMemorySwaggerResourcesProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'classOrApiAnnotationResourceGrouping'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'swaggerApiListingReader'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'springfox.documentation.swagger.configuration.SwaggerCommonConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'evsModule'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'taskExecutorBuilder'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultValidator'
2021-01-17 17:06:04 DEBUG Loaded expression factory via original TCCL
2021-01-17 17:06:04 DEBUG Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2021-01-17 17:06:04 DEBUG Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2021-01-17 17:06:04 DEBUG Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2021-01-17 17:06:04 DEBUG Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-17 17:06:04 DEBUG Trying to load META-INF/validation.xml via user class loader
2021-01-17 17:06:04 DEBUG Trying to load META-INF/validation.xml via TCCL
2021-01-17 17:06:04 DEBUG Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-17 17:06:04 DEBUG No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-17 17:06:04 DEBUG Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-17 17:06:04 DEBUG Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-17 17:06:04 DEBUG HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-17 17:06:04 DEBUG HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-17 17:06:04 DEBUG HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-17 17:06:04 DEBUG HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-17 17:06:04 DEBUG HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-17 17:06:04 DEBUG HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'error'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'beanNameViewResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'conventionErrorViewResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'errorAttributes'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'basicErrorController'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcValidator'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'messageConverters'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'stringHttpMessageConverter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'jacksonObjectMapper'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'parameterNamesModule'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'jsonComponentModule'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'jacksonGeoModule'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'sortResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'pageableResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'applicationTaskExecutor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2021-01-17 17:06:04 DEBUG ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'localeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcUrlPathHelper'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcPathMatcher'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'beanNameHandlerMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'routerFunctionMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'resourceHandlerMapping'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2021-01-17 17:06:04 DEBUG Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'handlerFunctionAdapter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'handlerExceptionResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'mvcViewResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'themeResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'flashMapManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'viewNameTranslator'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'defaultViewResolver'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'viewResolver'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@6079cf5'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'applicationAvailability'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'transactionManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$DataSourceInitializationCompletionListener'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'lifecycleProcessor'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.data.jpa.util.JpaMetamodelCacheCleanup'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'partyRepository'
2021-01-17 17:06:04 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:04 DEBUG Initializing repository instance for com.spring.cg.repo.PartyRepository…
2021-01-17 17:06:04 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:04 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'candidateRepository'
2021-01-17 17:06:04 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:04 DEBUG Initializing repository instance for com.spring.cg.repo.CandidateRepository…
2021-01-17 17:06:04 DEBUG Creating new EntityManager for shared EntityManager invocation
2021-01-17 17:06:04 DEBUG Finished creation of repository instance for {}.
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'jdbcTemplate'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'taskSchedulerBuilder'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'transactionTemplate'
2021-01-17 17:06:04 DEBUG Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2021-01-17 17:06:04 DEBUG Creating shared instance of singleton bean 'multipartResolver'
2021-01-17 17:06:04 DEBUG Registering beans for JMX exposure on startup
2021-01-17 17:06:04 DEBUG Autodetecting user-defined JMX MBeans
2021-01-17 17:06:04 DEBUG Bean with name 'dataSource' has been autodetected for JMX exposure
2021-01-17 17:06:04 DEBUG Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2021-01-17 17:06:04 DEBUG Starting beans in phase 2147483646
2021-01-17 17:06:04 DEBUG Successfully started bean 'webServerStartStop'
2021-01-17 17:06:04 DEBUG Starting beans in phase 2147483647
2021-01-17 17:06:04 DEBUG Adding return parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |createNewCandidate|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |createNewCandidate|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |createNewCandidate|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Reading property candidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Name 'candidateId' renamed to 'candidateId'
2021-01-17 17:06:04 DEBUG Adding property candidateId to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Reading property candidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:04 DEBUG Adding property candidateName to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Reading property address
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:04 DEBUG Adding property address to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Reading property age
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Name 'age' renamed to 'age'
2021-01-17 17:06:04 DEBUG Adding property age to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Reading property contactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Name 'contactNumber' renamed to 'contactNumber'
2021-01-17 17:06:04 DEBUG Adding property contactNumber to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Reading property email
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Name 'email' renamed to 'email'
2021-01-17 17:06:04 DEBUG Adding property email to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Reading property party
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Name 'party' renamed to 'party'
2021-01-17 17:06:04 DEBUG Adding property party to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:04 DEBUG Adding a new model with key Candidate
2021-01-17 17:06:04 DEBUG Adding type Lcom/spring/cg/json/Party; for parameter party
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for type Lcom/spring/cg/json/Party;
2021-01-17 17:06:04 DEBUG Reading property partyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:04 DEBUG Name 'partyName' renamed to 'partyName'
2021-01-17 17:06:04 DEBUG Adding property partyName to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:04 DEBUG Reading property leader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:04 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:04 DEBUG Adding property leader to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:04 DEBUG Reading property symbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:04 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:04 DEBUG Adding property symbol to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Adding a new model with key Party
2021-01-17 17:06:04 DEBUG Skipping model of type Ljava/lang/Void; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Reading property candidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateId
2021-01-17 17:06:04 DEBUG Name 'candidateId' renamed to 'candidateId'
2021-01-17 17:06:04 DEBUG Adding property candidateId to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateId
2021-01-17 17:06:04 DEBUG Reading property candidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:04 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:04 DEBUG Adding property candidateName to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:04 DEBUG Reading property address
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:04 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:04 DEBUG Adding property address to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:04 DEBUG Reading property age
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAge
2021-01-17 17:06:04 DEBUG Name 'age' renamed to 'age'
2021-01-17 17:06:04 DEBUG Adding property age to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setAge
2021-01-17 17:06:04 DEBUG Reading property contactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:04 DEBUG Name 'contactNumber' renamed to 'contactNumber'
2021-01-17 17:06:04 DEBUG Adding property contactNumber to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:04 DEBUG Reading property email
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setEmail
2021-01-17 17:06:04 DEBUG Name 'email' renamed to 'email'
2021-01-17 17:06:04 DEBUG Adding property email to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setEmail
2021-01-17 17:06:04 DEBUG Reading property party
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setParty
2021-01-17 17:06:04 DEBUG Name 'party' renamed to 'party'
2021-01-17 17:06:04 DEBUG Adding property party to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setParty
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:04 DEBUG Adding type Lcom/spring/cg/json/Party; for parameter party
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for type Lcom/spring/cg/json/Party;
2021-01-17 17:06:04 DEBUG Reading property partyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:04 DEBUG Name 'partyName' renamed to 'partyName'
2021-01-17 17:06:04 DEBUG Adding property partyName to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:04 DEBUG Reading property leader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:04 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:04 DEBUG Adding property leader to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:04 DEBUG Reading property symbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:04 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:04 DEBUG Adding property symbol to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:04 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:Candidate
2021-01-17 17:06:04 DEBUG Authorization count 0 for method createNewCandidate
2021-01-17 17:06:04 DEBUG Setting response class to:Candidate
2021-01-17 17:06:04 DEBUG Extension count 1 for method createNewCandidate
2021-01-17 17:06:04 DEBUG Adding return parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Setting spring response class to:Candidate
2021-01-17 17:06:04 DEBUG Authorization count 0 for method deleteById
2021-01-17 17:06:04 DEBUG Setting response class to:Candidate
2021-01-17 17:06:04 DEBUG Extension count 1 for method deleteById
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |deleteCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |deleteCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |deleteCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Adding type for parameter Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:04 DEBUG Reading property candidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Name 'candidateId' renamed to 'candidateId'
2021-01-17 17:06:04 DEBUG Adding property candidateId to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateId
2021-01-17 17:06:04 DEBUG Reading property candidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:04 DEBUG Adding property candidateName to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:04 DEBUG Reading property address
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:04 DEBUG Adding property address to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:04 DEBUG Reading property age
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Name 'age' renamed to 'age'
2021-01-17 17:06:04 DEBUG Adding property age to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getAge
2021-01-17 17:06:04 DEBUG Reading property contactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Name 'contactNumber' renamed to 'contactNumber'
2021-01-17 17:06:04 DEBUG Adding property contactNumber to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:04 DEBUG Reading property email
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Name 'email' renamed to 'email'
2021-01-17 17:06:04 DEBUG Adding property email to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getEmail
2021-01-17 17:06:04 DEBUG Reading property party
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Name 'party' renamed to 'party'
2021-01-17 17:06:04 DEBUG Adding property party to model
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Evaluating unwrapped getter for member getParty
2021-01-17 17:06:04 DEBUG Adding type Lcom/spring/cg/json/Party; for parameter party
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for type Lcom/spring/cg/json/Party;
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method deleteCandidateByCandidateName
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method deleteCandidateByCandidateName
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getAllCandidates|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getAllCandidates|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getAllCandidates|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getAllCandidates
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getAllCandidates
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Party;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getAllPartys|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getAllPartys|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getAllPartys|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Party;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Party>
2021-01-17 17:06:04 DEBUG Adding type for parameter Lcom/spring/cg/json/Party;
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Party;
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getAllPartys
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getAllPartys
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByCandidateName|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getCandidateByCandidateName
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getCandidateByCandidateName
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getCandidateByEmail
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getCandidateByEmail
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByNumber|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getCandidateByNumber|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByNumber|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getCandidateByNumber
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getCandidateByNumber
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByPartyName|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getCandidateByPartyName|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateByPartyName|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:04 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:04 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getCandidateByPartyName
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getCandidateByPartyName
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateName|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getCandidateName|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getCandidateName|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Skipping model of type Ljava/util/List<Ljava/lang/String;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:04 DEBUG Adding type for parameter Ljava/lang/String;
2021-01-17 17:06:04 DEBUG Recursively resolving dependencies for parameter Ljava/lang/String;
2021-01-17 17:06:04 DEBUG Marking base type Ljava/lang/String; as seen
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getCandidateName
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getCandidateName
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getEmail|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getEmail|
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getEmail|
2021-01-17 17:06:04 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:04 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:04 DEBUG Setting spring response class to:List
2021-01-17 17:06:04 DEBUG Authorization count 0 for method getEmail
2021-01-17 17:06:04 DEBUG Setting response class to:List
2021-01-17 17:06:04 DEBUG Extension count 1 for method getEmail
2021-01-17 17:06:04 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:04 DEBUG Reading parameters models for handlerMethod |getNumber|
2021-01-17 17:06:04 DEBUG Finished reading parameters models for handlerMethod |getNumber|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getNumber|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getNumber
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getNumber
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getPartyName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getPartyName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getPartyName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getPartyName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getPartyName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/CastVote;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |createNewCastVote|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/CastVote;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |createNewCastVote|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |createNewCastVote|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Reading property castId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCastId
2021-01-17 17:06:05 DEBUG Name 'castId' renamed to 'castId'
2021-01-17 17:06:05 DEBUG Adding property castId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCastId
2021-01-17 17:06:05 DEBUG Reading property electionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionName
2021-01-17 17:06:05 DEBUG Name 'electionName' renamed to 'electionName'
2021-01-17 17:06:05 DEBUG Adding property electionName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionName
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Reading property candidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:05 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:05 DEBUG Adding property candidateName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setCandidateName
2021-01-17 17:06:05 DEBUG Reading property partyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:05 DEBUG Name 'partyName' renamed to 'partyName'
2021-01-17 17:06:05 DEBUG Adding property partyName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPartyName
2021-01-17 17:06:05 DEBUG Reading property voterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setVoterId
2021-01-17 17:06:05 DEBUG Name 'voterId' renamed to 'voterId'
2021-01-17 17:06:05 DEBUG Adding property voterId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setVoterId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidateName, castId, constituency, date, electionName, partyName, state, voterId
2021-01-17 17:06:05 DEBUG Generated parameter model id: CastVote, name: CastVote, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key CastVote
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property castId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Name 'castId' renamed to 'castId'
2021-01-17 17:06:05 DEBUG Adding property castId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Reading property electionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Name 'electionName' renamed to 'electionName'
2021-01-17 17:06:05 DEBUG Adding property electionName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Reading property candidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:05 DEBUG Adding property candidateName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Reading property partyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Name 'partyName' renamed to 'partyName'
2021-01-17 17:06:05 DEBUG Adding property partyName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Reading property voterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Name 'voterId' renamed to 'voterId'
2021-01-17 17:06:05 DEBUG Adding property voterId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidateName, castId, constituency, date, electionName, partyName, state, voterId
2021-01-17 17:06:05 DEBUG Generated parameter model id: CastVote, name: CastVote, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:CastVote
2021-01-17 17:06:05 DEBUG Authorization count 0 for method createNewCastVote
2021-01-17 17:06:05 DEBUG Setting response class to:CastVote
2021-01-17 17:06:05 DEBUG Extension count 1 for method createNewCastVote
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/State;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/State;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.State>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/State;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/State;
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Inferred 1 properties. Properties found state
2021-01-17 17:06:05 DEBUG Adding a new model with key State
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllStatesName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/CastVote;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getCandidateList|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getCandidateList|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getCandidateList|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/CastVote;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.CastVote>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/CastVote;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/CastVote;
2021-01-17 17:06:05 DEBUG Reading property castId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Name 'castId' renamed to 'castId'
2021-01-17 17:06:05 DEBUG Adding property castId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCastId
2021-01-17 17:06:05 DEBUG Reading property electionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Name 'electionName' renamed to 'electionName'
2021-01-17 17:06:05 DEBUG Adding property electionName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionName
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Reading property candidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Name 'candidateName' renamed to 'candidateName'
2021-01-17 17:06:05 DEBUG Adding property candidateName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidateName
2021-01-17 17:06:05 DEBUG Reading property partyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Name 'partyName' renamed to 'partyName'
2021-01-17 17:06:05 DEBUG Adding property partyName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPartyName
2021-01-17 17:06:05 DEBUG Reading property voterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Name 'voterId' renamed to 'voterId'
2021-01-17 17:06:05 DEBUG Adding property voterId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoterId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidateName, castId, constituency, date, electionName, partyName, state, voterId
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getCandidateList
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getCandidateList
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/entity/DistrictEntity;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllDistrcits|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllDistrcits|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllDistrcits|
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/entity/DistrictEntity;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.entity.DistrictEntity>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/entity/DistrictEntity;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/entity/DistrictEntity;
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Inferred 1 properties. Properties found district
2021-01-17 17:06:05 DEBUG Adding a new model with key DistrictEntity
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllDistrcits
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllDistrcits
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewElection|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |addNewElection|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewElection|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Reading property electionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Name 'electionId' renamed to 'electionId'
2021-01-17 17:06:05 DEBUG Adding property electionId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Reading property parties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Name 'parties' renamed to 'parties'
2021-01-17 17:06:05 DEBUG Adding property parties to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Generated parameter model id: Election, name: Election, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key Election
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Reading property party_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Name 'party_name' renamed to 'party_name'
2021-01-17 17:06:05 DEBUG Adding property party_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Reading property leader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:05 DEBUG Adding property leader to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Reading property symbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:05 DEBUG Adding property symbol to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Reading property elections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Name 'elections' renamed to 'elections'
2021-01-17 17:06:05 DEBUG Adding property elections to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Adding a new model with key Partys
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property electionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Name 'electionId' renamed to 'electionId'
2021-01-17 17:06:05 DEBUG Adding property electionId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Reading property parties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Name 'parties' renamed to 'parties'
2021-01-17 17:06:05 DEBUG Adding property parties to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Generated parameter model id: Election, name: Election, schema: {} models
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Reading property party_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Name 'party_name' renamed to 'party_name'
2021-01-17 17:06:05 DEBUG Adding property party_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Reading property leader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:05 DEBUG Adding property leader to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Reading property symbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:05 DEBUG Adding property symbol to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Reading property elections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Name 'elections' renamed to 'elections'
2021-01-17 17:06:05 DEBUG Adding property elections to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Setting spring response class to:Election
2021-01-17 17:06:05 DEBUG Authorization count 0 for method addNewElection
2021-01-17 17:06:05 DEBUG Setting response class to:Election
2021-01-17 17:06:05 DEBUG Extension count 1 for method addNewElection
2021-01-17 17:06:05 DEBUG Adding return parameter of type Z
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteElectionById|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |deleteElectionById|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteElectionById|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Skipping model of type Z as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for boolean
2021-01-17 17:06:05 DEBUG Marking base type Z as seen
2021-01-17 17:06:05 DEBUG Setting spring response class to:boolean
2021-01-17 17:06:05 DEBUG Authorization count 0 for method deleteElectionById
2021-01-17 17:06:05 DEBUG Setting response class to:boolean
2021-01-17 17:06:05 DEBUG Extension count 1 for method deleteElectionById
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllConstituency|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllConstituency|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllConstituency|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllConstituency
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllConstituency
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/time/LocalDate;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllDate|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllDate|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllDate|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Ljava/time/LocalDate;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.time.LocalDate>
2021-01-17 17:06:05 DEBUG Adding type for parameter Ljava/time/LocalDate;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Ljava/time/LocalDate;
2021-01-17 17:06:05 DEBUG Marking base type Ljava/sql/Date; as seen
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllDate
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllDate
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElection|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElection|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElection|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Reading property electionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Name 'electionId' renamed to 'electionId'
2021-01-17 17:06:05 DEBUG Adding property electionId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Reading property parties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Name 'parties' renamed to 'parties'
2021-01-17 17:06:05 DEBUG Adding property parties to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParties
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElection
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElection
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByConstituency|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionByConstituency|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByConstituency|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionByConstituency
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionByConstituency
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByDate|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionByDate|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByDate|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionByDate
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionByDate
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByElectionName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionByElectionName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByElectionName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionByElectionName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionByElectionName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByState|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionByState|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionByState|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionByState
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionByState
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionState|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllElectionState|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllElectionState|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllElectionState
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllElectionState
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/State;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStates|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllStates|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStates|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.State>
2021-01-17 17:06:05 DEBUG Inferred 1 properties. Properties found state
2021-01-17 17:06:05 DEBUG Adding a new model with key State
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllStates
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllStates
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Election;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |UpdateElection|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |UpdateElection|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |UpdateElection|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Election>
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Adding a new model with key Election
2021-01-17 17:06:05 DEBUG Adding a new model with key Partys
2021-01-17 17:06:05 DEBUG Reading property party_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Name 'party_name' renamed to 'party_name'
2021-01-17 17:06:05 DEBUG Adding property party_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParty_name
2021-01-17 17:06:05 DEBUG Reading property leader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:05 DEBUG Adding property leader to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setLeader
2021-01-17 17:06:05 DEBUG Reading property symbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:05 DEBUG Adding property symbol to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setSymbol
2021-01-17 17:06:05 DEBUG Reading property elections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Name 'elections' renamed to 'elections'
2021-01-17 17:06:05 DEBUG Adding property elections to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElections
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Generated parameter model id: Partys, name: Partys, schema: {} models
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Reading property electionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Name 'electionId' renamed to 'electionId'
2021-01-17 17:06:05 DEBUG Adding property electionId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElectionId
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDate
2021-01-17 17:06:05 DEBUG Reading property parties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Name 'parties' renamed to 'parties'
2021-01-17 17:06:05 DEBUG Adding property parties to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setParties
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setElection_name
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method UpdateElection
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method UpdateElection
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewParty|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |addNewParty|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewParty|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Reading property party_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Name 'party_name' renamed to 'party_name'
2021-01-17 17:06:05 DEBUG Adding property party_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Reading property leader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Name 'leader' renamed to 'leader'
2021-01-17 17:06:05 DEBUG Adding property leader to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getLeader
2021-01-17 17:06:05 DEBUG Reading property symbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Name 'symbol' renamed to 'symbol'
2021-01-17 17:06:05 DEBUG Adding property symbol to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getSymbol
2021-01-17 17:06:05 DEBUG Reading property elections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Name 'elections' renamed to 'elections'
2021-01-17 17:06:05 DEBUG Adding property elections to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElections
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Generated parameter model id: Partys, name: Partys, schema: {} models
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Generated parameter model id: Partys, name: Partys, schema: {} models
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:Partys
2021-01-17 17:06:05 DEBUG Authorization count 0 for method addNewParty
2021-01-17 17:06:05 DEBUG Setting response class to:Partys
2021-01-17 17:06:05 DEBUG Extension count 1 for method addNewParty
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Partys;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllParties|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllParties|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllParties|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Partys>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Election;>; for parameter elections
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Election;
2021-01-17 17:06:05 DEBUG Adding type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; for parameter parties
2021-01-17 17:06:05 DEBUG Adding collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for collectionElement type Lcom/spring/cg/json/Partys;
2021-01-17 17:06:05 DEBUG Inferred 4 properties. Properties found elections, leader, party_name, symbol
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Election;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Inferred 6 properties. Properties found constituency, date, electionId, election_name, parties, state
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/Set<Lcom/spring/cg/json/Partys;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllParties
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllParties
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/RegisterUser;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewUser|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/RegisterUser;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |addNewUser|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addNewUser|
2021-01-17 17:06:05 DEBUG Reading property application_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplication_id
2021-01-17 17:06:05 DEBUG Name 'application_id' renamed to 'application_id'
2021-01-17 17:06:05 DEBUG Adding property application_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplication_id
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Reading property password
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Name 'password' renamed to 'password'
2021-01-17 17:06:05 DEBUG Adding property password to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Reading property gender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getGender
2021-01-17 17:06:05 DEBUG Name 'gender' renamed to 'gender'
2021-01-17 17:06:05 DEBUG Adding property gender to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getGender
2021-01-17 17:06:05 DEBUG Reading property mobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getMobile_number
2021-01-17 17:06:05 DEBUG Name 'mobile_number' renamed to 'mobile_number'
2021-01-17 17:06:05 DEBUG Adding property mobile_number to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getMobile_number
2021-01-17 17:06:05 DEBUG Reading property address
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:05 DEBUG Adding property address to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Inferred 9 properties. Properties found address, application_id, district, dob, emailId, gender, mobile_number, name, password
2021-01-17 17:06:05 DEBUG Generated parameter model id: RegisterUser, name: RegisterUser, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key RegisterUser
2021-01-17 17:06:05 DEBUG Reading property application_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplication_id
2021-01-17 17:06:05 DEBUG Name 'application_id' renamed to 'application_id'
2021-01-17 17:06:05 DEBUG Adding property application_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplication_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplication_id
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Reading property password
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Name 'password' renamed to 'password'
2021-01-17 17:06:05 DEBUG Adding property password to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Reading property gender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setGender
2021-01-17 17:06:05 DEBUG Name 'gender' renamed to 'gender'
2021-01-17 17:06:05 DEBUG Adding property gender to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setGender
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setGender
2021-01-17 17:06:05 DEBUG Reading property mobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setMobile_number
2021-01-17 17:06:05 DEBUG Name 'mobile_number' renamed to 'mobile_number'
2021-01-17 17:06:05 DEBUG Adding property mobile_number to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setMobile_number
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setMobile_number
2021-01-17 17:06:05 DEBUG Reading property address
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:05 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:05 DEBUG Adding property address to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setAddress
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Inferred 9 properties. Properties found address, application_id, district, dob, emailId, gender, mobile_number, name, password
2021-01-17 17:06:05 DEBUG Generated parameter model id: RegisterUser, name: RegisterUser, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:RegisterUser
2021-01-17 17:06:05 DEBUG Authorization count 0 for method addNewUser
2021-01-17 17:06:05 DEBUG Setting response class to:RegisterUser
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/RegisterUser;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Generated parameter model id: RegisterUser, name: RegisterUser, schema: {} models
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:RegisterUser
2021-01-17 17:06:05 DEBUG Authorization count 0 for method userLogin
2021-01-17 17:06:05 DEBUG Setting response class to:RegisterUser
2021-01-17 17:06:05 DEBUG Extension count 1 for method userLogin
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteResultById|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |deleteResultById|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteResultById|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Result;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/Result;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Result;
2021-01-17 17:06:05 DEBUG Reading property result_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getResult_id
2021-01-17 17:06:05 DEBUG Name 'result_id' renamed to 'result_id'
2021-01-17 17:06:05 DEBUG Adding property result_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getResult_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getResult_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getResult_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getResult_id
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property candidate_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidate_name
2021-01-17 17:06:05 DEBUG Name 'candidate_name' renamed to 'candidate_name'
2021-01-17 17:06:05 DEBUG Adding property candidate_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidate_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidate_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidate_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getCandidate_name
2021-01-17 17:06:05 DEBUG Reading property party_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Name 'party_name' renamed to 'party_name'
2021-01-17 17:06:05 DEBUG Adding property party_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getParty_name
2021-01-17 17:06:05 DEBUG Reading property votes
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVotes
2021-01-17 17:06:05 DEBUG Name 'votes' renamed to 'votes'
2021-01-17 17:06:05 DEBUG Adding property votes to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVotes
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVotes
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVotes
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVotes
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Adding a new model with key Result
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method deleteResultById
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method deleteResultById
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/State;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getAllStatesName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.State>
2021-01-17 17:06:05 DEBUG Inferred 1 properties. Properties found state
2021-01-17 17:06:05 DEBUG Adding a new model with key State
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getAllStatesName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getAllStatesName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getResult|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getResult|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getResult|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getResult
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method getResult
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |insertIntoResult|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |insertIntoResult|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |insertIntoResult|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method insertIntoResult
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method insertIntoResult
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllResult|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewAllResult|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllResult|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewAllResult
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewAllResult
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByElectionName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewResultByElectionName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByElectionName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewResultByElectionName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewResultByElectionName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByPartyName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewResultByPartyName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByPartyName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewResultByPartyName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewResultByPartyName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Result;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByStateName|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewResultByStateName|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewResultByStateName|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Result>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found candidate_name, constituency, date, election_name, party_name, result_id, state, votes
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewResultByStateName
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewResultByStateName
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewcastelectionname|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewcastelectionname|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewcastelectionname|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewcastelectionname
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewelectionwise|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewelectionwise|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewelectionwise|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewelectionwise
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewpartywise|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewpartywise|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewpartywise|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewpartywise
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewstatewise|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewstatewise|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewstatewise|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewstatewise
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAll|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAll|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAll|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/Schedule;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/Schedule;
2021-01-17 17:06:05 DEBUG Reading property electionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Name 'electionId' renamed to 'electionId'
2021-01-17 17:06:05 DEBUG Adding property electionId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElectionId
2021-01-17 17:06:05 DEBUG Reading property election_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Name 'election_name' renamed to 'election_name'
2021-01-17 17:06:05 DEBUG Adding property election_name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getElection_name
2021-01-17 17:06:05 DEBUG Reading property state
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Name 'state' renamed to 'state'
2021-01-17 17:06:05 DEBUG Adding property state to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getState
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property date
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Name 'date' renamed to 'date'
2021-01-17 17:06:05 DEBUG Adding property date to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDate
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Adding a new model with key Schedule
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAll
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method findAll
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllByDateRange|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllByDateRange|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllByDateRange|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllByDateRange
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method findAllByDateRange
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllByState|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllByState|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllByState|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllByState
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method findAllByState
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/time/LocalDate;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllDates|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllDates|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllDates|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.time.LocalDate>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllDates
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllElectionNames|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllElectionNames|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllElectionNames|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllElectionNames
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method findAllElectionNames
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllMonth|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllMonth|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllMonth|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllMonth
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllconstituency|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findAllconstituency|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findAllconstituency|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findAllconstituency
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method findAllconstituency
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findByDate|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |findByDate|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |findByDate|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method findByDate
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewSchedule|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewSchedule|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewSchedule|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewSchedule
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewSchedule
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleByConstituency|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewScheduleByConstituency|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleByConstituency|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewScheduleByConstituency
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewScheduleByConstituency
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleById|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewScheduleById|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleById|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewScheduleById
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewScheduleById
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Schedule;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleByState|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewScheduleByState|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewScheduleByState|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Schedule>
2021-01-17 17:06:05 DEBUG Inferred 5 properties. Properties found constituency, date, electionId, election_name, state
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewScheduleByState
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewScheduleByState
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/Candidate;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |deleteById|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.Candidate>
2021-01-17 17:06:05 DEBUG Inferred 7 properties. Properties found address, age, candidateId, candidateName, contactNumber, email, party
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:05 DEBUG Adding a new model with key Candidate
2021-01-17 17:06:05 DEBUG Adding a new model with key Party
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method deleteById
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method deleteById
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getCandidateByEmail|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:Candidate
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getCandidateByEmail
2021-01-17 17:06:05 DEBUG Setting response class to:Candidate
2021-01-17 17:06:05 DEBUG Extension count 1 for method getCandidateByEmail
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |updateCandidate|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/Candidate;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |updateCandidate|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |updateCandidate|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Generated parameter model id: Candidate, name: Candidate, schema: {} models
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found leader, partyName, symbol
2021-01-17 17:06:05 DEBUG Setting spring response class to:Candidate
2021-01-17 17:06:05 DEBUG Authorization count 0 for method updateCandidate
2021-01-17 17:06:05 DEBUG Setting response class to:Candidate
2021-01-17 17:06:05 DEBUG Extension count 1 for method updateCandidate
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/User;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |updatePassword|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/String;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |updatePassword|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |updatePassword|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/lang/String; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.String
2021-01-17 17:06:05 DEBUG Marking base type Ljava/lang/String; as seen
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Reading property password
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Name 'password' renamed to 'password'
2021-01-17 17:06:05 DEBUG Adding property password to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Reading property phoneNo
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPhoneNo
2021-01-17 17:06:05 DEBUG Name 'phoneNo' renamed to 'phoneNo'
2021-01-17 17:06:05 DEBUG Adding property phoneNo to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPhoneNo
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPhoneNo
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPhoneNo
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPhoneNo
2021-01-17 17:06:05 DEBUG Reading property address
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Name 'address' renamed to 'address'
2021-01-17 17:06:05 DEBUG Adding property address to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getAddress
2021-01-17 17:06:05 DEBUG Reading property univName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUnivName
2021-01-17 17:06:05 DEBUG Name 'univName' renamed to 'univName'
2021-01-17 17:06:05 DEBUG Adding property univName to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUnivName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUnivName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUnivName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUnivName
2021-01-17 17:06:05 DEBUG Reading property role
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Name 'role' renamed to 'role'
2021-01-17 17:06:05 DEBUG Adding property role to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found address, dob, emailId, name, password, phoneNo, role, univName
2021-01-17 17:06:05 DEBUG Generated parameter model id: User, name: User, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key User
2021-01-17 17:06:05 DEBUG Setting spring response class to:User
2021-01-17 17:06:05 DEBUG Authorization count 0 for method updatePassword
2021-01-17 17:06:05 DEBUG Setting response class to:User
2021-01-17 17:06:05 DEBUG Extension count 1 for method updatePassword
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/Login;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/Login;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |userLogin|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Reading property password
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Name 'password' renamed to 'password'
2021-01-17 17:06:05 DEBUG Adding property password to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setPassword
2021-01-17 17:06:05 DEBUG Reading property role
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setRole
2021-01-17 17:06:05 DEBUG Name 'role' renamed to 'role'
2021-01-17 17:06:05 DEBUG Adding property role to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setRole
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found emailId, password, role
2021-01-17 17:06:05 DEBUG Generated parameter model id: Login, name: Login, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key Login
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Reading property password
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Name 'password' renamed to 'password'
2021-01-17 17:06:05 DEBUG Adding property password to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getPassword
2021-01-17 17:06:05 DEBUG Reading property role
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Name 'role' renamed to 'role'
2021-01-17 17:06:05 DEBUG Adding property role to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getRole
2021-01-17 17:06:05 DEBUG Inferred 3 properties. Properties found emailId, password, role
2021-01-17 17:06:05 DEBUG Generated parameter model id: Login, name: Login, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:Login
2021-01-17 17:06:05 DEBUG Authorization count 0 for method userLogin
2021-01-17 17:06:05 DEBUG Setting response class to:Login
2021-01-17 17:06:05 DEBUG Extension count 1 for method userLogin
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/VoterId;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getByUserId|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |getByUserId|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |getByUserId|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property voter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Name 'voter_id' renamed to 'voter_id'
2021-01-17 17:06:05 DEBUG Adding property voter_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Reading property contact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Name 'contact_no' renamed to 'contact_no'
2021-01-17 17:06:05 DEBUG Adding property contact_no to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Reading property status
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Name 'status' renamed to 'status'
2021-01-17 17:06:05 DEBUG Adding property status to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found constituency, contact_no, district, dob, emailId, name, status, voter_id
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterId, name: VoterId, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key VoterId
2021-01-17 17:06:05 DEBUG Setting spring response class to:VoterId
2021-01-17 17:06:05 DEBUG Authorization count 0 for method getByUserId
2021-01-17 17:06:05 DEBUG Setting response class to:VoterId
2021-01-17 17:06:05 DEBUG Extension count 1 for method getByUserId
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllDistricts|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewAllDistricts|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllDistricts|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewAllDistricts
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/entity/VoterIdEntity;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllRequests|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewAllRequests|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllRequests|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/entity/VoterIdEntity;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.entity.VoterIdEntity>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/entity/VoterIdEntity;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/entity/VoterIdEntity;
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property voter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Name 'voter_id' renamed to 'voter_id'
2021-01-17 17:06:05 DEBUG Adding property voter_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Reading property contact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Name 'contact_no' renamed to 'contact_no'
2021-01-17 17:06:05 DEBUG Adding property contact_no to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Reading property status
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Name 'status' renamed to 'status'
2021-01-17 17:06:05 DEBUG Adding property status to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found constituency, contact_no, district, dob, emailId, name, status, voter_id
2021-01-17 17:06:05 DEBUG Adding a new model with key VoterIdEntity
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewAllRequests
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewAllRequests
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Ljava/lang/String;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllStatus|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewAllStatus|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewAllStatus|
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<java.lang.String>
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewAllStatus
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/json/VoterId;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByDistrict|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewByDistrict|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByDistrict|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Skipping model of type Ljava/util/List<Lcom/spring/cg/json/VoterId;>; as its either a container type, map, enum or base type, or its already been handled
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.json.VoterId>
2021-01-17 17:06:05 DEBUG Adding type for parameter Lcom/spring/cg/json/VoterId;
2021-01-17 17:06:05 DEBUG Recursively resolving dependencies for parameter Lcom/spring/cg/json/VoterId;
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property voter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Name 'voter_id' renamed to 'voter_id'
2021-01-17 17:06:05 DEBUG Adding property voter_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Reading property contact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Name 'contact_no' renamed to 'contact_no'
2021-01-17 17:06:05 DEBUG Adding property contact_no to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Reading property status
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Name 'status' renamed to 'status'
2021-01-17 17:06:05 DEBUG Adding property status to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found constituency, contact_no, district, dob, emailId, name, status, voter_id
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewByDistrict
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewByDistrict
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/entity/VoterIdEntity;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByEmailId|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewByEmailId|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByEmailId|
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property voter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Name 'voter_id' renamed to 'voter_id'
2021-01-17 17:06:05 DEBUG Adding property voter_id to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getVoter_id
2021-01-17 17:06:05 DEBUG Reading property contact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Name 'contact_no' renamed to 'contact_no'
2021-01-17 17:06:05 DEBUG Adding property contact_no to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContact_no
2021-01-17 17:06:05 DEBUG Reading property status
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Name 'status' renamed to 'status'
2021-01-17 17:06:05 DEBUG Adding property status to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getStatus
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found constituency, contact_no, district, dob, emailId, name, status, voter_id
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterIdEntity, name: VoterIdEntity, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:VoterIdEntity
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewByEmailId
2021-01-17 17:06:05 DEBUG Setting response class to:VoterIdEntity
2021-01-17 17:06:05 DEBUG Adding return parameter of type Ljava/util/List<Lcom/spring/cg/entity/VoterIdEntity;>;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByStatus|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |viewByStatus|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |viewByStatus|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.util.List<com.spring.cg.entity.VoterIdEntity>
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found constituency, contact_no, district, dob, emailId, name, status, voter_id
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:List
2021-01-17 17:06:05 DEBUG Authorization count 0 for method viewByStatus
2021-01-17 17:06:05 DEBUG Setting response class to:List
2021-01-17 17:06:05 DEBUG Extension count 1 for method viewByStatus
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/VoterRequest;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addVoterRequest|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/VoterRequest;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |addVoterRequest|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |addVoterRequest|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Reading property userId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUserId
2021-01-17 17:06:05 DEBUG Name 'userId' renamed to 'userId'
2021-01-17 17:06:05 DEBUG Adding property userId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getUserId
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getName
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getEmailId
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDob
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getConstituency
2021-01-17 17:06:05 DEBUG Reading property applicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplicationStatus
2021-01-17 17:06:05 DEBUG Name 'applicationStatus' renamed to 'applicationStatus'
2021-01-17 17:06:05 DEBUG Adding property applicationStatus to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getApplicationStatus
2021-01-17 17:06:05 DEBUG Reading property contactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:05 DEBUG Name 'contactNumber' renamed to 'contactNumber'
2021-01-17 17:06:05 DEBUG Adding property contactNumber to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped getter for member getContactNumber
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found applicationStatus, constituency, contactNumber, district, dob, emailId, name, userId
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterRequest, name: VoterRequest, schema: {} models
2021-01-17 17:06:05 DEBUG Adding a new model with key VoterRequest
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Reading property userId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setUserId
2021-01-17 17:06:05 DEBUG Name 'userId' renamed to 'userId'
2021-01-17 17:06:05 DEBUG Adding property userId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setUserId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setUserId
2021-01-17 17:06:05 DEBUG Reading property name
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Name 'name' renamed to 'name'
2021-01-17 17:06:05 DEBUG Adding property name to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setName
2021-01-17 17:06:05 DEBUG Reading property emailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Name 'emailId' renamed to 'emailId'
2021-01-17 17:06:05 DEBUG Adding property emailId to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setEmailId
2021-01-17 17:06:05 DEBUG Reading property dob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Name 'dob' renamed to 'dob'
2021-01-17 17:06:05 DEBUG Adding property dob to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDob
2021-01-17 17:06:05 DEBUG Reading property district
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Name 'district' renamed to 'district'
2021-01-17 17:06:05 DEBUG Adding property district to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setDistrict
2021-01-17 17:06:05 DEBUG Reading property constituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Name 'constituency' renamed to 'constituency'
2021-01-17 17:06:05 DEBUG Adding property constituency to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setConstituency
2021-01-17 17:06:05 DEBUG Reading property applicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplicationStatus
2021-01-17 17:06:05 DEBUG Name 'applicationStatus' renamed to 'applicationStatus'
2021-01-17 17:06:05 DEBUG Adding property applicationStatus to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplicationStatus
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setApplicationStatus
2021-01-17 17:06:05 DEBUG Reading property contactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:05 DEBUG Name 'contactNumber' renamed to 'contactNumber'
2021-01-17 17:06:05 DEBUG Adding property contactNumber to model
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:05 DEBUG Evaluating unwrapped setter for member setContactNumber
2021-01-17 17:06:05 DEBUG Inferred 8 properties. Properties found applicationStatus, constituency, contactNumber, district, dob, emailId, name, userId
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterRequest, name: VoterRequest, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Authorization count 0 for method addVoterRequest
2021-01-17 17:06:05 DEBUG Setting response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Extension count 1 for method addVoterRequest
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/VoterRequest;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |approveRejectVoterRequest|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Lcom/spring/cg/json/VoterRequest;
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |approveRejectVoterRequest|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |approveRejectVoterRequest|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterRequest, name: VoterRequest, schema: {} models
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterRequest, name: VoterRequest, schema: {} models
2021-01-17 17:06:05 DEBUG Setting spring response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Authorization count 0 for method approveRejectVoterRequest
2021-01-17 17:06:05 DEBUG Setting response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Extension count 1 for method approveRejectVoterRequest
2021-01-17 17:06:05 DEBUG Adding return parameter of type Lcom/spring/cg/json/VoterRequest;
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |approveRejectVoterRequestt|
2021-01-17 17:06:05 DEBUG Finished reading parameters models for handlerMethod |approveRejectVoterRequestt|
2021-01-17 17:06:05 DEBUG Reading parameters models for handlerMethod |approveRejectVoterRequestt|
2021-01-17 17:06:05 DEBUG Adding input parameter of type Ljava/lang/Void;
2021-01-17 17:06:05 DEBUG Generated parameter model id: VoterRequest, name: VoterRequest, schema: {} models
2021-01-17 17:06:05 DEBUG Did not find any parameter models for java.lang.Void
2021-01-17 17:06:05 DEBUG Setting spring response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Authorization count 0 for method approveRejectVoterRequestt
2021-01-17 17:06:05 DEBUG Setting response class to:VoterRequest
2021-01-17 17:06:05 DEBUG Extension count 1 for method approveRejectVoterRequestt
2021-01-17 17:06:05 DEBUG Successfully started bean 'documentationPluginsBootstrapper'
2021-01-17 17:06:05 DEBUG Successfully started bean 'webServerGracefulShutdown'
2021-01-17 17:06:05 DEBUG 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HibernateJpaAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean', 'javax.persistence.EntityManager', 'org.hibernate.engine.spi.SessionImplementor' (OnClassCondition)

   HibernateJpaConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean,javax.persistence.EntityManagerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#entityManagerFactoryBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#jpaVendorAdapter matched:
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.JpaVendorAdapter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaBaseConfiguration.JpaWebConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.jpa.open-in-view=true) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor,org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JpaRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.jpa.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found bean 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JtaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.transaction.Transaction' (OnClassCondition)
      - @ConditionalOnProperty (spring.jta.enabled) matched (OnPropertyCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'transactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtomikosJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.atomikos.icatch.jta.UserTransactionManager' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   BitronixJtaConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'bitronix.tm.jndi.BitronixContext' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found beans of type 'org.springframework.transaction.TransactionManager' transactionManager (OnBeanCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JndiJtaConfiguration:
      Did not match:
         - @ConditionalOnJndi JNDI environment is not available (OnJndiCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.transaction.jta.JtaTransactionManager' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration#entityManagerFactoryBootstrapExecutorCustomizer:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.LazyBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=lazy) did not find property 'bootstrap-mode'; NestedCondition on JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition.DeferredBootstrapMode @ConditionalOnProperty (spring.data.jpa.repositories.bootstrap-mode=deferred) did not find property 'bootstrap-mode' (JpaRepositoriesAutoConfiguration.BootstrapExecutorCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.mail.internet.MimeMessage' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate did not find required type 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnBeanCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.netty.buffer.PooledByteBufAllocator' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)

   RedisReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.oxm.Marshaller' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.XADataSourceWrapper; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.XADataSourceWrapper (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'javax.transaction.TransactionManager', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2021-01-17 17:06:23 DEBUG Detected StandardServletMultipartResolver
2021-01-17 17:06:23 DEBUG Detected AcceptHeaderLocaleResolver
2021-01-17 17:06:23 DEBUG Detected FixedThemeResolver
2021-01-17 17:06:23 DEBUG Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@329cef32
2021-01-17 17:06:23 DEBUG Detected org.springframework.web.servlet.support.SessionFlashMapManager@6d398b6c
2021-01-17 17:06:23 DEBUG enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2021-01-17 17:06:24 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:06:24 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:06:24 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:06:24 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=soumya@gmail.com, password=Offier@123, Role=officer]]
2021-01-17 17:06:24 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:06:24 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:06:24 DEBUG throwQueryException() : no errors
2021-01-17 17:06:24 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'UserEntity'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'emailId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-17 17:06:24 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:06:24 DEBUG FromClause{level=1} : com.spring.cg.entity.UserEntity (generatedAlias0) -> userentity0_
2021-01-17 17:06:24 DEBUG Resolved : generatedAlias0 -> userentity0_.userid
2021-01-17 17:06:24 DEBUG Resolved : generatedAlias0 -> userentity0_.userid
2021-01-17 17:06:24 DEBUG getDataType() : emailId -> org.hibernate.type.StringType@72a34537
2021-01-17 17:06:24 DEBUG Resolved : generatedAlias0.emailId -> userentity0_.email
2021-01-17 17:06:24 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:06:24 DEBUG processQuery() :  ( SELECT ( {select clause} userentity0_.userid ) ( FromClause{level=1} public.user userentity0_ ) ( where ( = ( userentity0_.email userentity0_.userid emailId ) ? ) ) )
2021-01-17 17:06:24 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserEntity): [public.user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.UserEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.UserEntity)
          | path: generatedAlias0.emailId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.UserEntity)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: emailId
          \-ParameterNode

2021-01-17 17:06:24 DEBUG Using FROM fragment [public.user userentity0_]
2021-01-17 17:06:24 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:06:24 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (public.user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userentity0_.userid as userid1_1_' {alias=generatedAlias0, className=com.spring.cg.entity.UserEntity, tableAlias=userentity0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[userentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'public.user userentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=public.user,tableAlias=userentity0_,origin=null,columns={,className=com.spring.cg.entity.UserEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userentity0_.email' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=generatedAlias0.emailId,tableAlias=userentity0_,className=com.spring.cg.entity.UserEntity,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'userentity0_.userid' {alias=generatedAlias0, className=com.spring.cg.entity.UserEntity, tableAlias=userentity0_}
          |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:06:24 DEBUG throwQueryException() : no errors
2021-01-17 17:06:24 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:06:24 DEBUG SQL: select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:06:24 DEBUG throwQueryException() : no errors
2021-01-17 17:06:24 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:06:24 DEBUG Result set row: 0
2021-01-17 17:06:24 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#2]
2021-01-17 17:06:24 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#2]
2021-01-17 17:06:24 DEBUG Processing attribute `Role` : value = officer
2021-01-17 17:06:24 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `address` : value = nagpur
2021-01-17 17:06:24 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `attempts` : value = 0
2021-01-17 17:06:24 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `dob` : value = 1998-05-12
2021-01-17 17:06:24 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:06:24 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:06:24 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `password` : value = Officer@123
2021-01-17 17:06:24 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `phoneNo` : value = 8805765639
2021-01-17 17:06:24 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Processing attribute `univName` : value = soumya
2021-01-17 17:06:24 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:06:24 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#2]
2021-01-17 17:06:24 DEBUG Found thread-bound EntityManager [SessionImpl(1888883830<open>)] for JPA transaction
2021-01-17 17:06:24 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2021-01-17 17:06:24 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:06:24 DEBUG begin
2021-01-17 17:06:24 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@11bbcf7c]
2021-01-17 17:06:24 DEBUG Configured EntityCopyObserver strategy: disallow
2021-01-17 17:06:24 DEBUG Initiating transaction commit
2021-01-17 17:06:24 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1888883830<open>)]
2021-01-17 17:06:24 DEBUG committing
2021-01-17 17:06:24 DEBUG Processing flush-time cascades
2021-01-17 17:06:24 DEBUG Dirty checking collections
2021-01-17 17:06:24 DEBUG Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2021-01-17 17:06:24 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-17 17:06:24 DEBUG Listing entities:
2021-01-17 17:06:24 DEBUG com.spring.cg.entity.UserEntity{Role=officer, password=Officer@123, address=nagpur, dob=1998-05-12, univName=soumya, name=soumya, emailId=soumya@gmail.com, userId=2, phoneNo=8805765639, attempts=1}
2021-01-17 17:06:24 DEBUG update public.user set role=?, address=?, login_attempts=?, dob=?, email=?, name=?, password=?, phone=?, univ_name=? where userid=?
2021-01-17 17:06:24 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:06:24 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleInvalidDataException(InvalidDataException)
2021-01-17 17:06:24 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:06:24 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=Invalid Password, errors=[Data is Inavalid]]]
2021-01-17 17:06:24 DEBUG Resolved [InvalidDataException [message=Invalid Password]]
2021-01-17 17:06:24 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:06:24 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:06:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:06:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:06:59 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:06:59 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:06:59 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:06:59 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:07:00 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:07:00 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:07:00 DEBUG Result set row: 0
2021-01-17 17:07:00 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#362]
2021-01-17 17:07:00 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:07:00 DEBUG Processing attribute `Role` : value = admin
2021-01-17 17:07:00 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `address` : value = wardha
2021-01-17 17:07:00 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:07:00 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `dob` : value = 1998-08-16
2021-01-17 17:07:00 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `emailId` : value = neha@gmail.com
2021-01-17 17:07:00 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `name` : value = neha
2021-01-17 17:07:00 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `password` : value = Admin@123
2021-01-17 17:07:00 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `phoneNo` : value = 9665212702
2021-01-17 17:07:00 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Processing attribute `univName` : value = nehas
2021-01-17 17:07:00 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:07:00 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:07:00 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:07:00 DEBUG Writing [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:07:00 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:07:00 DEBUG Completed 201 CREATED
2021-01-17 17:07:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:07:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:07:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:07:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:08:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:08:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:08:02 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:08:02 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:08:02 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:02 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=soumya@gmail.com, password=Officer@123, Role=officer]]
2021-01-17 17:08:02 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:08:02 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:08:02 DEBUG Result set row: 0
2021-01-17 17:08:02 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#2]
2021-01-17 17:08:02 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#2]
2021-01-17 17:08:02 DEBUG Processing attribute `Role` : value = officer
2021-01-17 17:08:02 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `address` : value = nagpur
2021-01-17 17:08:02 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:08:02 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `dob` : value = 1998-05-12
2021-01-17 17:08:02 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:08:02 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:08:02 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `password` : value = Officer@123
2021-01-17 17:08:02 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `phoneNo` : value = 8805765639
2021-01-17 17:08:02 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Processing attribute `univName` : value = soumya
2021-01-17 17:08:02 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:02 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#2]
2021-01-17 17:08:02 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:08:02 DEBUG Writing [Login [emailId=soumya@gmail.com, password=Officer@123, Role=officer]]
2021-01-17 17:08:02 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:02 DEBUG Completed 201 CREATED
2021-01-17 17:08:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:08:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:08:36 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:08:36 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:08:36 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:36 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:08:36 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:08:36 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:08:36 DEBUG Result set row: 0
2021-01-17 17:08:36 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#362]
2021-01-17 17:08:36 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:08:36 DEBUG Processing attribute `Role` : value = admin
2021-01-17 17:08:36 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `address` : value = wardha
2021-01-17 17:08:36 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:08:36 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `dob` : value = 1998-08-16
2021-01-17 17:08:36 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `emailId` : value = neha@gmail.com
2021-01-17 17:08:36 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `name` : value = neha
2021-01-17 17:08:36 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `password` : value = Admin@123
2021-01-17 17:08:36 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `phoneNo` : value = 9665212702
2021-01-17 17:08:36 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Processing attribute `univName` : value = nehas
2021-01-17 17:08:36 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:36 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:08:36 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:08:36 DEBUG Writing [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:08:36 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:36 DEBUG Completed 201 CREATED
2021-01-17 17:08:57 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:08:57 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:08:57 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:57 DEBUG Found thread-bound EntityManager [SessionImpl(1226742387<open>)] for JPA transaction
2021-01-17 17:08:57 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:08:57 DEBUG Setting JDBC Connection [HikariProxyConnection@719887574 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:08:57 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:08:57 DEBUG begin
2021-01-17 17:08:57 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@369b0931]
2021-01-17 17:08:57 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:08:57 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0
2021-01-17 17:08:57 DEBUG throwQueryException() : no errors
2021-01-17 17:08:57 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'VoterIdEntity'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-17 17:08:57 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:08:57 DEBUG FromClause{level=1} : com.spring.cg.entity.VoterIdEntity (generatedAlias0) -> voterident0_
2021-01-17 17:08:57 DEBUG Resolved : generatedAlias0 -> voterident0_.voter_id
2021-01-17 17:08:57 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:08:57 DEBUG processQuery() :  ( SELECT ( {select clause} voterident0_.voter_id ) ( FromClause{level=1} voter_request voterident0_ ) )
2021-01-17 17:08:57 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity VoterIdEntity): [voter_request]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-17 17:08:57 DEBUG Using FROM fragment [voter_request voterident0_]
2021-01-17 17:08:57 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:08:57 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voter_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id as voter_id1_11_' {alias=generatedAlias0, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
    |  \-[SQL_TOKEN] SqlFragment: 'voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[voterident0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'voter_request voterident0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=voter_request,tableAlias=voterident0_,origin=null,columns={,className=com.spring.cg.entity.VoterIdEntity}}

2021-01-17 17:08:57 DEBUG throwQueryException() : no errors
2021-01-17 17:08:57 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0
2021-01-17 17:08:57 DEBUG SQL: select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:08:57 DEBUG throwQueryException() : no errors
2021-01-17 17:08:57 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:08:57 DEBUG Result set row: 0
2021-01-17 17:08:57 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:08:57 DEBUG Result set row: 1
2021-01-17 17:08:57 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:08:57 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:08:57 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:08:57 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:08:57 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:08:57 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:08:57 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:08:57 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:08:57 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:08:57 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:08:57 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:08:57 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:08:57 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:08:57 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:08:57 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:08:57 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:08:57 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:08:57 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:08:57 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:08:57 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:08:57 DEBUG Initiating transaction commit
2021-01-17 17:08:57 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1226742387<open>)]
2021-01-17 17:08:57 DEBUG committing
2021-01-17 17:08:57 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@719887574 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:08:57 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:08:57 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:08:57 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:08:57 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:08:57 DEBUG Completed 200 OK
2021-01-17 17:09:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:09:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:09:06 DEBUG OPTIONS "/evs/voter_request/5", parameters={}
2021-01-17 17:09:06 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#approveRejectVoterRequestt(Integer)
2021-01-17 17:09:06 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:06 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:06 DEBUG Completed 200 OK
2021-01-17 17:09:06 DEBUG PUT "/evs/voter_request/5", parameters={}
2021-01-17 17:09:06 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#approveRejectVoterRequestt(Integer)
2021-01-17 17:09:06 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:06 DEBUG Found thread-bound EntityManager [SessionImpl(477037818<open>)] for JPA transaction
2021-01-17 17:09:06 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:06 DEBUG Setting JDBC Connection [HikariProxyConnection@1669634418 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:06 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:06 DEBUG begin
2021-01-17 17:09:06 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@52a2c520]
2021-01-17 17:09:06 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3343) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362) ~[spring-orm-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy123.find(Unknown Source) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy123.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:282) ~[spring-data-jpa-2.4.2.jar:2.4.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289) ~[spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174) [spring-data-jpa-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215) [spring-aop-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy147.findById(Unknown Source) [?:?]
	at com.spring.cg.service.VoterRequestServiceImpl.approveVoterRequestt(VoterRequestServiceImpl.java:79) [classes/:?]
	at com.spring.cg.controller.VoterRequestController.approveRejectVoterRequestt(VoterRequestController.java:68) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920) [spring-webmvc-5.3.2.jar:5.3.2]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) [tomcat-embed-core-9.0.41.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.3.2.jar:5.3.2]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.41.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2021-01-17 17:09:06 DEBUG Initiating transaction rollback
2021-01-17 17:09:06 DEBUG Rolling back JPA transaction on EntityManager [SessionImpl(477037818<open>)]
2021-01-17 17:09:06 DEBUG rolling back
2021-01-17 17:09:06 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1669634418 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:06 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:06 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleInvalidUserDetails(Exception)
2021-01-17 17:09:06 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:09:06 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=Provided id of the wrong type for class com.spring.cg. (truncated)...]
2021-01-17 17:09:06 DEBUG Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Provided id of the wrong type for class com.spring.cg.entity.VoterRequestEntity. Expected: class java.lang.Long, got class java.lang.Integer; nested exception is java.lang.IllegalArgumentException: Provided id of the wrong type for class com.spring.cg.entity.VoterRequestEntity. Expected: class java.lang.Long, got class java.lang.Integer]
2021-01-17 17:09:06 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:06 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:09:13 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:09:13 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:09:13 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:13 DEBUG Found thread-bound EntityManager [SessionImpl(782724252<open>)] for JPA transaction
2021-01-17 17:09:13 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:13 DEBUG Setting JDBC Connection [HikariProxyConnection@543196984 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:13 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:13 DEBUG begin
2021-01-17 17:09:13 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@245f07ec]
2021-01-17 17:09:13 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:09:13 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:09:13 DEBUG Result set row: 0
2021-01-17 17:09:13 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:13 DEBUG Result set row: 1
2021-01-17 17:09:13 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:13 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:13 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:13 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:13 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:13 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:13 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:13 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:13 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:13 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:13 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:13 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:09:13 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:09:13 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:09:13 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:09:13 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:09:13 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:09:13 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:09:13 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:13 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:13 DEBUG Initiating transaction commit
2021-01-17 17:09:13 DEBUG Committing JPA transaction on EntityManager [SessionImpl(782724252<open>)]
2021-01-17 17:09:13 DEBUG committing
2021-01-17 17:09:13 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@543196984 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:13 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:13 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:13 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:13 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:13 DEBUG Completed 200 OK
2021-01-17 17:09:15 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:09:15 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:09:15 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Found thread-bound EntityManager [SessionImpl(1330132498<open>)] for JPA transaction
2021-01-17 17:09:15 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:15 DEBUG Setting JDBC Connection [HikariProxyConnection@1099944331 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:15 DEBUG begin
2021-01-17 17:09:15 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@45b05d62]
2021-01-17 17:09:15 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:09:15 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:09:15 DEBUG Result set row: 0
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Result set row: 1
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Initiating transaction commit
2021-01-17 17:09:15 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1330132498<open>)]
2021-01-17 17:09:15 DEBUG committing
2021-01-17 17:09:15 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1099944331 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:15 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:15 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:15 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:15 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Completed 200 OK
2021-01-17 17:09:15 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:09:15 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:09:15 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Found thread-bound EntityManager [SessionImpl(100656226<open>)] for JPA transaction
2021-01-17 17:09:15 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:15 DEBUG Setting JDBC Connection [HikariProxyConnection@982138391 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:15 DEBUG begin
2021-01-17 17:09:15 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@419cab2b]
2021-01-17 17:09:15 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:09:15 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:09:15 DEBUG Result set row: 0
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Result set row: 1
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Initiating transaction commit
2021-01-17 17:09:15 DEBUG Committing JPA transaction on EntityManager [SessionImpl(100656226<open>)]
2021-01-17 17:09:15 DEBUG committing
2021-01-17 17:09:15 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@982138391 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:15 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:15 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:15 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:15 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Completed 200 OK
2021-01-17 17:09:15 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:09:15 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:09:15 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Found thread-bound EntityManager [SessionImpl(1534665880<open>)] for JPA transaction
2021-01-17 17:09:15 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:15 DEBUG Setting JDBC Connection [HikariProxyConnection@2039179134 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:15 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:15 DEBUG begin
2021-01-17 17:09:15 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@10f8966e]
2021-01-17 17:09:15 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:09:15 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:09:15 DEBUG Result set row: 0
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Result set row: 1
2021-01-17 17:09:15 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:15 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:09:15 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:09:15 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:09:15 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:09:15 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:09:15 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:09:15 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:15 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:15 DEBUG Initiating transaction commit
2021-01-17 17:09:15 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1534665880<open>)]
2021-01-17 17:09:15 DEBUG committing
2021-01-17 17:09:15 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@2039179134 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:15 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:15 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:15 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:15 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:15 DEBUG Completed 200 OK
2021-01-17 17:09:20 DEBUG GET "/evs/voterRequest/status", parameters={}
2021-01-17 17:09:20 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllStatus()
2021-01-17 17:09:20 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:20 DEBUG select distinct voterident0_.application_status as col_0_0_ from voter_request voterident0_
2021-01-17 17:09:20 DEBUG Result set row: 0
2021-01-17 17:09:20 DEBUG Result row: 
2021-01-17 17:09:20 DEBUG Result set row: 1
2021-01-17 17:09:20 DEBUG Result row: 
2021-01-17 17:09:20 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:20 DEBUG Writing [[approved, pending]]
2021-01-17 17:09:20 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:20 DEBUG Completed 200 OK
2021-01-17 17:09:22 DEBUG OPTIONS "/evs/admin/voterRequestbystatus/undefined", parameters={}
2021-01-17 17:09:22 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByStatus(String)
2021-01-17 17:09:22 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:22 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:22 DEBUG Completed 200 OK
2021-01-17 17:09:22 DEBUG GET "/evs/admin/voterRequestbystatus/undefined", parameters={}
2021-01-17 17:09:22 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByStatus(String)
2021-01-17 17:09:22 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:22 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0 where generatedAlias0.status=:param0
2021-01-17 17:09:22 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0 where generatedAlias0.status=:param0
2021-01-17 17:09:22 DEBUG throwQueryException() : no errors
2021-01-17 17:09:22 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'VoterIdEntity'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-17 17:09:22 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:09:22 DEBUG FromClause{level=1} : com.spring.cg.entity.VoterIdEntity (generatedAlias0) -> voterident0_
2021-01-17 17:09:22 DEBUG Resolved : generatedAlias0 -> voterident0_.voter_id
2021-01-17 17:09:22 DEBUG Resolved : generatedAlias0 -> voterident0_.voter_id
2021-01-17 17:09:22 DEBUG getDataType() : status -> org.hibernate.type.StringType@72a34537
2021-01-17 17:09:22 DEBUG Resolved : generatedAlias0.status -> voterident0_.application_status
2021-01-17 17:09:22 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:09:22 DEBUG processQuery() :  ( SELECT ( {select clause} voterident0_.voter_id ) ( FromClause{level=1} voter_request voterident0_ ) ( where ( = ( voterident0_.application_status voterident0_.voter_id status ) ? ) ) )
2021-01-17 17:09:22 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity VoterIdEntity): [voter_request]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
          | path: generatedAlias0.status
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: status
          \-ParameterNode

2021-01-17 17:09:22 DEBUG Using FROM fragment [voter_request voterident0_]
2021-01-17 17:09:22 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:09:22 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voter_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id as voter_id1_11_' {alias=generatedAlias0, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
    |  \-[SQL_TOKEN] SqlFragment: 'voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[voterident0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'voter_request voterident0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=voter_request,tableAlias=voterident0_,origin=null,columns={,className=com.spring.cg.entity.VoterIdEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'voterident0_.application_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=voterident0_,className=com.spring.cg.entity.VoterIdEntity,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id' {alias=generatedAlias0, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:09:22 DEBUG throwQueryException() : no errors
2021-01-17 17:09:22 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0 where generatedAlias0.status=:param0
2021-01-17 17:09:22 DEBUG SQL: select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.application_status=?
2021-01-17 17:09:22 DEBUG throwQueryException() : no errors
2021-01-17 17:09:22 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.application_status=?
2021-01-17 17:09:22 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleUserException(UserNotFoundException)
2021-01-17 17:09:22 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:09:22 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=No requests found for the Status, errors=[Not Found]]]
2021-01-17 17:09:22 DEBUG Resolved [No requests found for the Status]
2021-01-17 17:09:22 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:22 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:09:27 DEBUG OPTIONS "/evs/admin/voterRequestbystatus/approved", parameters={}
2021-01-17 17:09:27 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByStatus(String)
2021-01-17 17:09:27 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:27 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:27 DEBUG Completed 200 OK
2021-01-17 17:09:27 DEBUG GET "/evs/admin/voterRequestbystatus/approved", parameters={}
2021-01-17 17:09:27 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByStatus(String)
2021-01-17 17:09:27 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:27 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0 where generatedAlias0.status=:param0
2021-01-17 17:09:27 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.application_status=?
2021-01-17 17:09:27 DEBUG Result set row: 0
2021-01-17 17:09:27 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:27 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:27 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:27 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:27 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:27 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:27 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:27 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:27 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:27 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:27 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:27 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:27 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:27 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:27 DEBUG Completed 200 OK
2021-01-17 17:09:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:09:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:09:34 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:09:34 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:09:34 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:34 DEBUG Found thread-bound EntityManager [SessionImpl(1843350951<open>)] for JPA transaction
2021-01-17 17:09:34 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:09:34 DEBUG Setting JDBC Connection [HikariProxyConnection@1234170149 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:09:34 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:09:34 DEBUG begin
2021-01-17 17:09:34 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@122cd1fa]
2021-01-17 17:09:34 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:09:34 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:09:34 DEBUG Result set row: 0
2021-01-17 17:09:34 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:34 DEBUG Result set row: 1
2021-01-17 17:09:34 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:34 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:34 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:09:34 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:09:34 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:09:34 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:09:34 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:09:34 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:09:34 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:09:34 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:09:34 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:34 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:09:34 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:09:34 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:09:34 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:09:34 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:09:34 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:09:34 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:09:34 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:09:34 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:09:34 DEBUG Initiating transaction commit
2021-01-17 17:09:34 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1843350951<open>)]
2021-01-17 17:09:34 DEBUG committing
2021-01-17 17:09:34 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1234170149 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:09:34 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:09:34 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:09:34 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:09:34 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:09:34 DEBUG Completed 200 OK
2021-01-17 17:10:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:10:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:10:19 DEBUG PUT "/evs/voter_request/5", parameters={}
2021-01-17 17:10:19 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#approveRejectVoterRequestt(Integer)
2021-01-17 17:10:19 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:19 DEBUG Found thread-bound EntityManager [SessionImpl(732042836<open>)] for JPA transaction
2021-01-17 17:10:19 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:10:19 DEBUG Setting JDBC Connection [HikariProxyConnection@1304751384 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:10:19 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:10:19 DEBUG begin
2021-01-17 17:10:19 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@17ce7f28]
2021-01-17 17:10:19 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:396) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3343) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:3289) ~[hibernate-core-5.4.25.Final.jar:5.4.25.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362) ~[spring-orm-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy123.find(Unknown Source) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311) ~[spring-orm-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy123.find(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:282) ~[spring-data-jpa-2.4.2.jar:2.4.2]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289) ~[spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:524) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:531) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:156) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:131) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) [spring-data-commons-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137) [spring-tx-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174) [spring-data-jpa-2.4.2.jar:2.4.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.3.2.jar:5.3.2]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215) [spring-aop-5.3.2.jar:5.3.2]
	at com.sun.proxy.$Proxy147.findById(Unknown Source) [?:?]
	at com.spring.cg.service.VoterRequestServiceImpl.approveVoterRequestt(VoterRequestServiceImpl.java:79) [classes/:?]
	at com.spring.cg.controller.VoterRequestController.approveRejectVoterRequestt(VoterRequestController.java:68) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:564) ~[?:?]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:894) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.3.2.jar:5.3.2]
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920) [spring-webmvc-5.3.2.jar:5.3.2]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) [tomcat-embed-core-9.0.41.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.3.2.jar:5.3.2]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.41.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.3.2.jar:5.3.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.2.jar:5.3.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:832) [?:?]
2021-01-17 17:10:19 DEBUG Initiating transaction rollback
2021-01-17 17:10:19 DEBUG Rolling back JPA transaction on EntityManager [SessionImpl(732042836<open>)]
2021-01-17 17:10:19 DEBUG rolling back
2021-01-17 17:10:19 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1304751384 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:10:19 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:10:19 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleInvalidUserDetails(Exception)
2021-01-17 17:10:19 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:10:19 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=Provided id of the wrong type for class com.spring.cg. (truncated)...]
2021-01-17 17:10:19 DEBUG Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: Provided id of the wrong type for class com.spring.cg.entity.VoterRequestEntity. Expected: class java.lang.Long, got class java.lang.Integer; nested exception is java.lang.IllegalArgumentException: Provided id of the wrong type for class com.spring.cg.entity.VoterRequestEntity. Expected: class java.lang.Long, got class java.lang.Integer]
2021-01-17 17:10:19 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:19 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:10:24 DEBUG GET "/evs/voterRequest/status", parameters={}
2021-01-17 17:10:24 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllStatus()
2021-01-17 17:10:24 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:24 DEBUG select distinct voterident0_.application_status as col_0_0_ from voter_request voterident0_
2021-01-17 17:10:24 DEBUG Result set row: 0
2021-01-17 17:10:24 DEBUG Result row: 
2021-01-17 17:10:24 DEBUG Result set row: 1
2021-01-17 17:10:24 DEBUG Result row: 
2021-01-17 17:10:24 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:10:24 DEBUG Writing [[approved, pending]]
2021-01-17 17:10:24 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:24 DEBUG Completed 200 OK
2021-01-17 17:10:26 DEBUG GET "/evs/admin/voterRequestbystatus/approved", parameters={}
2021-01-17 17:10:26 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByStatus(String)
2021-01-17 17:10:26 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:26 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0 where generatedAlias0.status=:param0
2021-01-17 17:10:26 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.application_status=?
2021-01-17 17:10:26 DEBUG Result set row: 0
2021-01-17 17:10:26 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:10:26 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:10:26 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:10:26 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:10:26 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:10:26 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:10:26 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:10:26 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:10:26 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:10:26 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:10:26 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:10:26 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:10:26 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:10:26 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:10:26 DEBUG Completed 200 OK
2021-01-17 17:10:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:10:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:11:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:11:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:11:13 DEBUG GET "/evs/user/rishabh@gmail.com/Rishabh@123", parameters={}
2021-01-17 17:11:13 DEBUG Mapped to com.spring.cg.controller.RegisterUserController#userLogin(String, String)
2021-01-17 17:11:13 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:11:13 DEBUG Rendered criteria query -> select generatedAlias0 from RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:11:13 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:11:13 DEBUG throwQueryException() : no errors
2021-01-17 17:11:13 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'RegisterUserEntity'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'emailId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-17 17:11:13 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:11:13 DEBUG FromClause{level=1} : com.spring.cg.entity.RegisterUserEntity (generatedAlias0) -> registerus0_
2021-01-17 17:11:13 DEBUG Resolved : generatedAlias0 -> registerus0_.application_id
2021-01-17 17:11:13 DEBUG Resolved : generatedAlias0 -> registerus0_.application_id
2021-01-17 17:11:13 DEBUG getDataType() : emailId -> org.hibernate.type.StringType@72a34537
2021-01-17 17:11:13 DEBUG Resolved : generatedAlias0.emailId -> registerus0_.email_id
2021-01-17 17:11:13 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:11:13 DEBUG processQuery() :  ( SELECT ( {select clause} registerus0_.application_id ) ( FromClause{level=1} register_user registerus0_ ) ( where ( = ( registerus0_.email_id registerus0_.application_id emailId ) ? ) ) )
2021-01-17 17:11:13 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity RegisterUserEntity): [register_user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.RegisterUserEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.RegisterUserEntity)
          | path: generatedAlias0.emailId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.RegisterUserEntity)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: emailId
          \-ParameterNode

2021-01-17 17:11:13 DEBUG Using FROM fragment [register_user registerus0_]
2021-01-17 17:11:13 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:11:13 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (register_user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'registerus0_.application_id as applicat1_8_' {alias=generatedAlias0, className=com.spring.cg.entity.RegisterUserEntity, tableAlias=registerus0_}
    |  \-[SQL_TOKEN] SqlFragment: 'registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[registerus0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'register_user registerus0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=register_user,tableAlias=registerus0_,origin=null,columns={,className=com.spring.cg.entity.RegisterUserEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'registerus0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=generatedAlias0.emailId,tableAlias=registerus0_,className=com.spring.cg.entity.RegisterUserEntity,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'registerus0_.application_id' {alias=generatedAlias0, className=com.spring.cg.entity.RegisterUserEntity, tableAlias=registerus0_}
          |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:11:13 DEBUG throwQueryException() : no errors
2021-01-17 17:11:13 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:11:13 DEBUG SQL: select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:11:13 DEBUG throwQueryException() : no errors
2021-01-17 17:11:13 DEBUG select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:11:13 DEBUG Result set row: 0
2021-01-17 17:11:13 DEBUG Result row: EntityKey[com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:11:13 DEBUG Resolving attributes for [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:11:13 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:11:13 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `district` : value = mumbai
2021-01-17 17:11:13 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `dob` : value = 1998-07-17
2021-01-17 17:11:13 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `emailId` : value = rishabh@gmail.com
2021-01-17 17:11:13 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `gender` : value = Male
2021-01-17 17:11:13 DEBUG Attribute (`gender`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `mobile_number` : value = 9004143938
2021-01-17 17:11:13 DEBUG Attribute (`mobile_number`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `name` : value = Rishabh
2021-01-17 17:11:13 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Processing attribute `password` : value = Rishabh@123
2021-01-17 17:11:13 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:11:13 DEBUG Done materializing entity [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:11:13 DEBUG user login
2021-01-17 17:11:13 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:11:13 DEBUG Writing [RegisterUser [application_id=365, name=Rishabh, dob=1998-07-17, emailId=rishabh@gmail.com, password= (truncated)...]
2021-01-17 17:11:13 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:11:13 DEBUG Completed 201 CREATED
2021-01-17 17:11:17 DEBUG GET "/evs/districts", parameters={}
2021-01-17 17:11:17 DEBUG Mapped to com.spring.cg.controller.DistrictController#getAllDistrcits()
2021-01-17 17:11:17 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:11:17 DEBUG Found thread-bound EntityManager [SessionImpl(815071321<open>)] for JPA transaction
2021-01-17 17:11:17 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:11:17 DEBUG Setting JDBC Connection [HikariProxyConnection@2046580399 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:11:17 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:11:17 DEBUG begin
2021-01-17 17:11:17 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@1becc1ba]
2021-01-17 17:11:17 DEBUG Rendered criteria query -> select generatedAlias0 from DistrictEntity as generatedAlias0
2021-01-17 17:11:17 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.DistrictEntity as generatedAlias0
2021-01-17 17:11:17 DEBUG throwQueryException() : no errors
2021-01-17 17:11:17 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'DistrictEntity'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-17 17:11:17 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:11:17 DEBUG FromClause{level=1} : com.spring.cg.entity.DistrictEntity (generatedAlias0) -> districten0_
2021-01-17 17:11:17 DEBUG Resolved : generatedAlias0 -> districten0_.district
2021-01-17 17:11:17 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:11:17 DEBUG processQuery() :  ( SELECT ( {select clause} districten0_.district ) ( FromClause{level=1} districts districten0_ ) )
2021-01-17 17:11:17 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity DistrictEntity): [districts]
    |  \-IdentNode
    |    persister: SingleTableEntityPersister(com.spring.cg.entity.DistrictEntity)
    |    originalText: generatedAlias0
    \-FromClause
       \-FromElement

2021-01-17 17:11:17 DEBUG Using FROM fragment [districts districten0_]
2021-01-17 17:11:17 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:11:17 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (districts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'districten0_.district as district1_4_' {alias=generatedAlias0, className=com.spring.cg.entity.DistrictEntity, tableAlias=districten0_}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[districten0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'districts districten0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=districts,tableAlias=districten0_,origin=null,columns={,className=com.spring.cg.entity.DistrictEntity}}

2021-01-17 17:11:17 DEBUG throwQueryException() : no errors
2021-01-17 17:11:17 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.DistrictEntity as generatedAlias0
2021-01-17 17:11:17 DEBUG SQL: select districten0_.district as district1_4_ from districts districten0_
2021-01-17 17:11:17 DEBUG throwQueryException() : no errors
2021-01-17 17:11:17 DEBUG select districten0_.district as district1_4_ from districts districten0_
2021-01-17 17:11:17 DEBUG Result set row: 0
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:11:17 DEBUG Result set row: 1
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:11:17 DEBUG Result set row: 2
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:11:17 DEBUG Result set row: 3
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:11:17 DEBUG Result set row: 4
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:11:17 DEBUG Result set row: 5
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:11:17 DEBUG Result set row: 6
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:11:17 DEBUG Result set row: 7
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:11:17 DEBUG Result set row: 8
2021-01-17 17:11:17 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:11:17 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:11:17 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:11:17 DEBUG Initiating transaction commit
2021-01-17 17:11:17 DEBUG Committing JPA transaction on EntityManager [SessionImpl(815071321<open>)]
2021-01-17 17:11:17 DEBUG committing
2021-01-17 17:11:17 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@2046580399 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:11:17 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:11:17 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:11:17 DEBUG Writing [[DistrictEntity [district=pune], DistrictEntity [district=mumbai], DistrictEntity [district=wardha], (truncated)...]
2021-01-17 17:11:17 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:11:17 DEBUG Completed 200 OK
2021-01-17 17:11:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:11:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:12:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:12:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:12:04 DEBUG OPTIONS "/evs/user/voter_request", parameters={}
2021-01-17 17:12:04 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#addVoterRequest(VoterRequest)
2021-01-17 17:12:04 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:04 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:04 DEBUG Completed 200 OK
2021-01-17 17:12:04 DEBUG POST "/evs/user/voter_request", parameters={}
2021-01-17 17:12:04 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#addVoterRequest(VoterRequest)
2021-01-17 17:12:04 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:04 DEBUG Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.spring.cg.json.VoterRequest> com.spring.cg.controller.VoterRequestController.addVoterRequest(com.spring.cg.json.VoterRequest) throws com.spring.cg.exception.UserNotFoundException: JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "2005-03-17": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "2005-03-17": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 83] (through reference chain: com.spring.cg.json.VoterRequest["contactNumber"])
2021-01-17 17:12:04 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleException(Exception, WebRequest)
2021-01-17 17:12:04 DEBUG No match for [application/json, text/plain, */*], supported: []
2021-01-17 17:12:04 DEBUG Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "2005-03-17": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "2005-03-17": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 83] (through reference chain: com.spring.cg.json.VoterRequest["contactNumber"])]
2021-01-17 17:12:04 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:04 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:12:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:12:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:12:36 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:12:36 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:12:36 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:36 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:12:36 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:12:36 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:12:36 DEBUG Result set row: 0
2021-01-17 17:12:36 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#362]
2021-01-17 17:12:36 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:12:36 DEBUG Processing attribute `Role` : value = admin
2021-01-17 17:12:36 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `address` : value = wardha
2021-01-17 17:12:36 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:12:36 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `dob` : value = 1998-08-16
2021-01-17 17:12:36 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `emailId` : value = neha@gmail.com
2021-01-17 17:12:36 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `name` : value = neha
2021-01-17 17:12:36 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `password` : value = Admin@123
2021-01-17 17:12:36 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `phoneNo` : value = 9665212702
2021-01-17 17:12:36 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Processing attribute `univName` : value = nehas
2021-01-17 17:12:36 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:36 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:12:36 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:12:36 DEBUG Writing [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:12:36 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:36 DEBUG Completed 201 CREATED
2021-01-17 17:12:45 DEBUG GET "/evs/admin/voterRequest", parameters={}
2021-01-17 17:12:45 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewAllRequests()
2021-01-17 17:12:45 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:45 DEBUG Found thread-bound EntityManager [SessionImpl(535597529<open>)] for JPA transaction
2021-01-17 17:12:45 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:12:45 DEBUG Setting JDBC Connection [HikariProxyConnection@1340350151 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:12:45 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:12:45 DEBUG begin
2021-01-17 17:12:45 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@49ce0718]
2021-01-17 17:12:45 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0
2021-01-17 17:12:45 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_
2021-01-17 17:12:45 DEBUG Result set row: 0
2021-01-17 17:12:45 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:12:45 DEBUG Result set row: 1
2021-01-17 17:12:45 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:12:45 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:12:45 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:12:45 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:12:45 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:12:45 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:12:45 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:12:45 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:12:45 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:12:45 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:12:45 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:12:45 DEBUG Processing attribute `constituency` : value = wardha
2021-01-17 17:12:45 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `contact_no` : value = 9.556453723E9
2021-01-17 17:12:45 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `district` : value = wardha
2021-01-17 17:12:45 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `dob` : value = 1998-06-12
2021-01-17 17:12:45 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `emailId` : value = rahul@gmail.com
2021-01-17 17:12:45 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `name` : value = rahul
2021-01-17 17:12:45 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Processing attribute `status` : value = pending
2021-01-17 17:12:45 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:12:45 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#5]
2021-01-17 17:12:45 DEBUG Initiating transaction commit
2021-01-17 17:12:45 DEBUG Committing JPA transaction on EntityManager [SessionImpl(535597529<open>)]
2021-01-17 17:12:45 DEBUG committing
2021-01-17 17:12:45 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1340350151 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:12:45 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:12:45 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:12:45 DEBUG Writing [[VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.65786 (truncated)...]
2021-01-17 17:12:45 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:12:45 DEBUG Completed 200 OK
2021-01-17 17:13:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:13:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:13:29 DEBUG GET "/evs/user/rishabh@gmail.com/Rishabh@123", parameters={}
2021-01-17 17:13:29 DEBUG Mapped to com.spring.cg.controller.RegisterUserController#userLogin(String, String)
2021-01-17 17:13:29 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:13:29 DEBUG Rendered criteria query -> select generatedAlias0 from RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:13:29 DEBUG select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:13:29 DEBUG Result set row: 0
2021-01-17 17:13:29 DEBUG Result row: EntityKey[com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:13:29 DEBUG Resolving attributes for [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:13:29 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:13:29 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `district` : value = mumbai
2021-01-17 17:13:29 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `dob` : value = 1998-07-17
2021-01-17 17:13:29 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `emailId` : value = rishabh@gmail.com
2021-01-17 17:13:29 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `gender` : value = Male
2021-01-17 17:13:29 DEBUG Attribute (`gender`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `mobile_number` : value = 9004143938
2021-01-17 17:13:29 DEBUG Attribute (`mobile_number`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `name` : value = Rishabh
2021-01-17 17:13:29 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Processing attribute `password` : value = Rishabh@123
2021-01-17 17:13:29 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:13:29 DEBUG Done materializing entity [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:13:29 DEBUG user login
2021-01-17 17:13:29 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:13:29 DEBUG Writing [RegisterUser [application_id=365, name=Rishabh, dob=1998-07-17, emailId=rishabh@gmail.com, password= (truncated)...]
2021-01-17 17:13:29 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:13:29 DEBUG Completed 201 CREATED
2021-01-17 17:13:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:13:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:13:36 DEBUG GET "/evs/districts", parameters={}
2021-01-17 17:13:36 DEBUG Mapped to com.spring.cg.controller.DistrictController#getAllDistrcits()
2021-01-17 17:13:36 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:13:36 DEBUG Found thread-bound EntityManager [SessionImpl(87854991<open>)] for JPA transaction
2021-01-17 17:13:36 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:13:36 DEBUG Setting JDBC Connection [HikariProxyConnection@1041705418 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:13:36 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:13:36 DEBUG begin
2021-01-17 17:13:36 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@54d1af3d]
2021-01-17 17:13:36 DEBUG Rendered criteria query -> select generatedAlias0 from DistrictEntity as generatedAlias0
2021-01-17 17:13:36 DEBUG select districten0_.district as district1_4_ from districts districten0_
2021-01-17 17:13:36 DEBUG Result set row: 0
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:13:36 DEBUG Result set row: 1
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:13:36 DEBUG Result set row: 2
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:13:36 DEBUG Result set row: 3
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:13:36 DEBUG Result set row: 4
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:13:36 DEBUG Result set row: 5
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:13:36 DEBUG Result set row: 6
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:13:36 DEBUG Result set row: 7
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:13:36 DEBUG Result set row: 8
2021-01-17 17:13:36 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:13:36 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:13:36 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:13:36 DEBUG Initiating transaction commit
2021-01-17 17:13:36 DEBUG Committing JPA transaction on EntityManager [SessionImpl(87854991<open>)]
2021-01-17 17:13:36 DEBUG committing
2021-01-17 17:13:36 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1041705418 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:13:36 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:13:36 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:13:36 DEBUG Writing [[DistrictEntity [district=pune], DistrictEntity [district=mumbai], DistrictEntity [district=wardha], (truncated)...]
2021-01-17 17:13:36 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:13:36 DEBUG Completed 200 OK
2021-01-17 17:14:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:14:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:14:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:14:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:14:45 DEBUG POST "/evs/user/voter_request", parameters={}
2021-01-17 17:14:45 DEBUG Mapped to com.spring.cg.controller.VoterRequestController#addVoterRequest(VoterRequest)
2021-01-17 17:14:45 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:14:45 DEBUG Could not resolve parameter [0] in public org.springframework.http.ResponseEntity<com.spring.cg.json.VoterRequest> com.spring.cg.controller.VoterRequestController.addVoterRequest(com.spring.cg.json.VoterRequest) throws com.spring.cg.exception.UserNotFoundException: JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "2004-07-17": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "2004-07-17": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 84] (through reference chain: com.spring.cg.json.VoterRequest["contactNumber"])
2021-01-17 17:14:45 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleException(Exception, WebRequest)
2021-01-17 17:14:45 DEBUG No match for [application/json, text/plain, */*], supported: []
2021-01-17 17:14:45 DEBUG Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.lang.Long` from String "2004-07-17": not a valid Long value; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.lang.Long` from String "2004-07-17": not a valid Long value
 at [Source: (PushbackInputStream); line: 1, column: 84] (through reference chain: com.spring.cg.json.VoterRequest["contactNumber"])]
2021-01-17 17:14:45 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:14:45 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:15:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:15:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:15:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:15:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:16:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:16:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:16:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:16:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:17:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:17:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:17:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:17:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:18:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:18:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:18:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:18:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:19:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:19:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:19:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:19:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:20:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:20:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:20:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:20:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:21:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:21:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:21:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:21:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:22:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:22:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:22:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:22:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:22:59 DEBUG GET "/evs/districts", parameters={}
2021-01-17 17:22:59 DEBUG Mapped to com.spring.cg.controller.DistrictController#getAllDistrcits()
2021-01-17 17:22:59 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:22:59 DEBUG Found thread-bound EntityManager [SessionImpl(1955149879<open>)] for JPA transaction
2021-01-17 17:22:59 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:22:59 DEBUG Setting JDBC Connection [HikariProxyConnection@233207952 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:22:59 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:22:59 DEBUG begin
2021-01-17 17:22:59 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@925a5ee]
2021-01-17 17:22:59 DEBUG Rendered criteria query -> select generatedAlias0 from DistrictEntity as generatedAlias0
2021-01-17 17:22:59 DEBUG select districten0_.district as district1_4_ from districts districten0_
2021-01-17 17:22:59 DEBUG Result set row: 0
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:22:59 DEBUG Result set row: 1
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:22:59 DEBUG Result set row: 2
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:22:59 DEBUG Result set row: 3
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:22:59 DEBUG Result set row: 4
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:22:59 DEBUG Result set row: 5
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:22:59 DEBUG Result set row: 6
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:22:59 DEBUG Result set row: 7
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:22:59 DEBUG Result set row: 8
2021-01-17 17:22:59 DEBUG Result row: EntityKey[com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#pune]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#mumbai]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#wardha]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#nagpur]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#akola]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#solapur]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#satara]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#amravati]
2021-01-17 17:22:59 DEBUG Resolving attributes for [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:22:59 DEBUG Done materializing entity [com.spring.cg.entity.DistrictEntity#thane]
2021-01-17 17:22:59 DEBUG Initiating transaction commit
2021-01-17 17:22:59 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1955149879<open>)]
2021-01-17 17:22:59 DEBUG committing
2021-01-17 17:22:59 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@233207952 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:22:59 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:22:59 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:22:59 DEBUG Writing [[DistrictEntity [district=pune], DistrictEntity [district=mumbai], DistrictEntity [district=wardha], (truncated)...]
2021-01-17 17:22:59 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:22:59 DEBUG Completed 200 OK
2021-01-17 17:23:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:23:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:23:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:23:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:24:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:24:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:24:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:24:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:24:38 DEBUG GET "/evs/user/rishabh@gmail.com/Rishabh@123", parameters={}
2021-01-17 17:24:38 DEBUG Mapped to com.spring.cg.controller.RegisterUserController#userLogin(String, String)
2021-01-17 17:24:38 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:38 DEBUG Rendered criteria query -> select generatedAlias0 from RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:24:38 DEBUG select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:24:38 DEBUG Result set row: 0
2021-01-17 17:24:38 DEBUG Result row: EntityKey[com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:24:38 DEBUG Resolving attributes for [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:24:38 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:24:38 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `district` : value = mumbai
2021-01-17 17:24:38 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `dob` : value = 1998-07-17
2021-01-17 17:24:38 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `emailId` : value = rishabh@gmail.com
2021-01-17 17:24:38 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `gender` : value = Male
2021-01-17 17:24:38 DEBUG Attribute (`gender`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `mobile_number` : value = 9004143938
2021-01-17 17:24:38 DEBUG Attribute (`mobile_number`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `name` : value = Rishabh
2021-01-17 17:24:38 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Processing attribute `password` : value = Rishabh@123
2021-01-17 17:24:38 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:38 DEBUG Done materializing entity [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:24:38 DEBUG user login
2021-01-17 17:24:38 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:24:38 DEBUG Writing [RegisterUser [application_id=365, name=Rishabh, dob=1998-07-17, emailId=rishabh@gmail.com, password= (truncated)...]
2021-01-17 17:24:38 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:38 DEBUG Completed 201 CREATED
2021-01-17 17:24:48 DEBUG OPTIONS "/evs/user/voterIdbyemail/soumya@gmail.com", parameters={}
2021-01-17 17:24:48 DEBUG Mapped to org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler#handle()
2021-01-17 17:24:48 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:48 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:48 DEBUG Completed 200 OK
2021-01-17 17:24:48 DEBUG GET "/evs/user/voterIdbyemail/soumya@gmail.com", parameters={}
2021-01-17 17:24:48 DEBUG Mapped to com.spring.cg.controller.VoterIdController#viewByEmailId(String)
2021-01-17 17:24:48 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:48 DEBUG Rendered criteria query -> select generatedAlias0 from VoterIdEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:24:48 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:24:48 DEBUG throwQueryException() : no errors
2021-01-17 17:24:48 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'VoterIdEntity'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'emailId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-17 17:24:48 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:24:48 DEBUG FromClause{level=1} : com.spring.cg.entity.VoterIdEntity (generatedAlias0) -> voterident0_
2021-01-17 17:24:48 DEBUG Resolved : generatedAlias0 -> voterident0_.voter_id
2021-01-17 17:24:48 DEBUG Resolved : generatedAlias0 -> voterident0_.voter_id
2021-01-17 17:24:48 DEBUG getDataType() : emailId -> org.hibernate.type.StringType@72a34537
2021-01-17 17:24:48 DEBUG Resolved : generatedAlias0.emailId -> voterident0_.email_id
2021-01-17 17:24:48 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:24:48 DEBUG processQuery() :  ( SELECT ( {select clause} voterident0_.voter_id ) ( FromClause{level=1} voter_request voterident0_ ) ( where ( = ( voterident0_.email_id voterident0_.voter_id emailId ) ? ) ) )
2021-01-17 17:24:48 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity VoterIdEntity): [voter_request]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
          | path: generatedAlias0.emailId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.VoterIdEntity)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: emailId
          \-ParameterNode

2021-01-17 17:24:48 DEBUG Using FROM fragment [voter_request voterident0_]
2021-01-17 17:24:48 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:24:48 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (voter_request)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id as voter_id1_11_' {alias=generatedAlias0, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
    |  \-[SQL_TOKEN] SqlFragment: 'voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[voterident0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'voter_request voterident0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=voter_request,tableAlias=voterident0_,origin=null,columns={,className=com.spring.cg.entity.VoterIdEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'voterident0_.email_id' {propertyName=emailId,dereferenceType=PRIMITIVE,getPropertyPath=emailId,path=generatedAlias0.emailId,tableAlias=voterident0_,className=com.spring.cg.entity.VoterIdEntity,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'voterident0_.voter_id' {alias=generatedAlias0, className=com.spring.cg.entity.VoterIdEntity, tableAlias=voterident0_}
          |  \-[IDENT] IdentNode: 'emailId' {originalText=emailId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:24:48 DEBUG throwQueryException() : no errors
2021-01-17 17:24:48 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.VoterIdEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:24:48 DEBUG SQL: select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.email_id=?
2021-01-17 17:24:48 DEBUG throwQueryException() : no errors
2021-01-17 17:24:48 DEBUG select voterident0_.voter_id as voter_id1_11_, voterident0_.constituency as constitu2_11_, voterident0_.contact_no as contact_3_11_, voterident0_.district as district4_11_, voterident0_.dob as dob5_11_, voterident0_.email_id as email_id6_11_, voterident0_.name as name7_11_, voterident0_.application_status as applicat8_11_ from voter_request voterident0_ where voterident0_.email_id=?
2021-01-17 17:24:48 DEBUG Result set row: 0
2021-01-17 17:24:48 DEBUG Result row: EntityKey[com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:24:48 DEBUG Resolving attributes for [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:24:48 DEBUG Processing attribute `constituency` : value = nagpur
2021-01-17 17:24:48 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `contact_no` : value = 7.657866788E9
2021-01-17 17:24:48 DEBUG Attribute (`contact_no`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `district` : value = nagpur
2021-01-17 17:24:48 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `dob` : value = 2001-01-02
2021-01-17 17:24:48 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `emailId` : value = soumya@gmail.com
2021-01-17 17:24:48 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `name` : value = soumya
2021-01-17 17:24:48 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Processing attribute `status` : value = approved
2021-01-17 17:24:48 DEBUG Attribute (`status`)  - enhanced for lazy-loading? - false
2021-01-17 17:24:48 DEBUG Done materializing entity [com.spring.cg.entity.VoterIdEntity#1234]
2021-01-17 17:24:48 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:24:48 DEBUG Writing [VoterIdEntity [ name=soumya, district=nagpur, constituency=nagpur, voterId=1234, contact_no=7.657866 (truncated)...]
2021-01-17 17:24:49 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:49 DEBUG Completed 200 OK
2021-01-17 17:24:59 DEBUG GET "/evs/schedule/statelist", parameters={}
2021-01-17 17:24:59 DEBUG Mapped to com.spring.cg.controller.ScheduleController#findAllByState()
2021-01-17 17:24:59 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:59 DEBUG select distinct electionen0_.state as col_0_0_ from election electionen0_
2021-01-17 17:24:59 DEBUG Result set row: 0
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 1
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 2
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 3
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 4
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 5
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 6
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Result set row: 7
2021-01-17 17:24:59 DEBUG Result row: 
2021-01-17 17:24:59 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:24:59 DEBUG Writing [[Gujarat, Goa, Punjab, Madhya Pradesh, Rajasthan, Karnataka, Maharashtra, Chhattisgarh]]
2021-01-17 17:24:59 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:24:59 DEBUG Completed 200 OK
2021-01-17 17:25:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:25:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:25:05 DEBUG OPTIONS "/evs/schedule/state/Madhya%20Pradesh", parameters={}
2021-01-17 17:25:05 DEBUG Mapped to com.spring.cg.controller.ScheduleController#viewScheduleByState(String)
2021-01-17 17:25:05 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:05 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:05 DEBUG Completed 200 OK
2021-01-17 17:25:05 DEBUG GET "/evs/schedule/state/Madhya%20Pradesh", parameters={}
2021-01-17 17:25:05 DEBUG Mapped to com.spring.cg.controller.ScheduleController#viewScheduleByState(String)
2021-01-17 17:25:05 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:05 DEBUG select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.state=? and electionen0_.date>? order by electionen0_.date
2021-01-17 17:25:05 DEBUG Result set row: 0
2021-01-17 17:25:05 DEBUG Result row: EntityKey[com.spring.cg.entity.ElectionEntity#325]
2021-01-17 17:25:05 DEBUG Result set row: 1
2021-01-17 17:25:05 DEBUG Result row: EntityKey[com.spring.cg.entity.ElectionEntity#346]
2021-01-17 17:25:05 DEBUG Resolving attributes for [com.spring.cg.entity.ElectionEntity#325]
2021-01-17 17:25:05 DEBUG Processing attribute `constituency` : value = jabalpur
2021-01-17 17:25:05 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `date` : value = 2021-01-23
2021-01-17 17:25:05 DEBUG Attribute (`date`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `electionName` : value = loksabha
2021-01-17 17:25:05 DEBUG Attribute (`electionName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `party` : value = NOT NULL COLLECTION
2021-01-17 17:25:05 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `state` : value = Madhya Pradesh
2021-01-17 17:25:05 DEBUG Attribute (`state`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Done materializing entity [com.spring.cg.entity.ElectionEntity#325]
2021-01-17 17:25:05 DEBUG Resolving attributes for [com.spring.cg.entity.ElectionEntity#346]
2021-01-17 17:25:05 DEBUG Processing attribute `constituency` : value = bhopal
2021-01-17 17:25:05 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `date` : value = 2021-01-30
2021-01-17 17:25:05 DEBUG Attribute (`date`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `electionName` : value = loksabha
2021-01-17 17:25:05 DEBUG Attribute (`electionName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `party` : value = NOT NULL COLLECTION
2021-01-17 17:25:05 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Processing attribute `state` : value = Madhya Pradesh
2021-01-17 17:25:05 DEBUG Attribute (`state`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:05 DEBUG Done materializing entity [com.spring.cg.entity.ElectionEntity#346]
2021-01-17 17:25:05 DEBUG select electionen0_.election_id as election1_5_, electionen0_.constituency as constitu2_5_, electionen0_.date as date3_5_, electionen0_.election_name as election4_5_, electionen0_.state as state5_5_ from election electionen0_ where electionen0_.state=? and electionen0_.date>? order by electionen0_.date
2021-01-17 17:25:05 DEBUG Result set row: 0
2021-01-17 17:25:05 DEBUG Result row: EntityKey[com.spring.cg.entity.ElectionEntity#325]
2021-01-17 17:25:05 DEBUG Result set row: 1
2021-01-17 17:25:05 DEBUG Result row: EntityKey[com.spring.cg.entity.ElectionEntity#346]
2021-01-17 17:25:05 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:25:05 DEBUG Writing [[Schedule [ date=2021-01-23, election_name=loksabha, state=Madhya Pradesh, constituency=jabalpur, el (truncated)...]
2021-01-17 17:25:05 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:05 DEBUG Completed 200 OK
2021-01-17 17:25:19 DEBUG GET "/evs/partyname", parameters={}
2021-01-17 17:25:19 DEBUG Mapped to com.spring.cg.controller.CandidateController#getPartyName()
2021-01-17 17:25:19 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:19 DEBUG select partyentit0_.party_name as col_0_0_ from party partyentit0_
2021-01-17 17:25:19 DEBUG Result set row: 0
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 1
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 2
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 3
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 4
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 5
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 6
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 7
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 8
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 9
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Result set row: 10
2021-01-17 17:25:19 DEBUG Result row: 
2021-01-17 17:25:19 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:25:19 DEBUG Writing [[Nehaaaa, patil, pattidar, pattidarfamily, Patil family, Janta, string, evs, BJP, aam aadmi, congres (truncated)...]
2021-01-17 17:25:19 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:19 DEBUG Completed 200 OK
2021-01-17 17:25:23 DEBUG GET "/evs/candidate/party/pattidarfamily", parameters={}
2021-01-17 17:25:23 DEBUG Mapped to com.spring.cg.controller.CandidateController#getCandidateByPartyName(String)
2021-01-17 17:25:23 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:23 DEBUG Found thread-bound EntityManager [SessionImpl(791116651<open>)] for JPA transaction
2021-01-17 17:25:23 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:25:23 DEBUG Setting JDBC Connection [HikariProxyConnection@320252032 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:25:23 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:25:23 DEBUG begin
2021-01-17 17:25:23 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@254e1ff8]
2021-01-17 17:25:23 DEBUG Rendered criteria query -> select generatedAlias0 from CandidateEntity as generatedAlias0
2021-01-17 17:25:23 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.CandidateEntity as generatedAlias0
2021-01-17 17:25:23 DEBUG throwQueryException() : no errors
2021-01-17 17:25:23 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'CandidateEntity'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-17 17:25:23 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:25:23 DEBUG FromClause{level=1} : com.spring.cg.entity.CandidateEntity (generatedAlias0) -> candidatee0_
2021-01-17 17:25:23 DEBUG Resolved : generatedAlias0 -> candidatee0_.candidate_id
2021-01-17 17:25:23 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:25:23 DEBUG processQuery() :  ( SELECT ( {select clause} candidatee0_.candidate_id ) ( FromClause{level=1} candidate candidatee0_ ) )
2021-01-17 17:25:23 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CandidateEntity): [candidate]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.CandidateEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-17 17:25:23 DEBUG Using FROM fragment [candidate candidatee0_]
2021-01-17 17:25:23 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:25:23 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (candidate)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'candidatee0_.candidate_id as candidat1_2_' {alias=generatedAlias0, className=com.spring.cg.entity.CandidateEntity, tableAlias=candidatee0_}
    |  \-[SQL_TOKEN] SqlFragment: 'candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[candidatee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'candidate candidatee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=candidate,tableAlias=candidatee0_,origin=null,columns={,className=com.spring.cg.entity.CandidateEntity}}

2021-01-17 17:25:23 DEBUG throwQueryException() : no errors
2021-01-17 17:25:23 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.CandidateEntity as generatedAlias0
2021-01-17 17:25:23 DEBUG SQL: select candidatee0_.candidate_id as candidat1_2_, candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_ from candidate candidatee0_
2021-01-17 17:25:23 DEBUG throwQueryException() : no errors
2021-01-17 17:25:23 DEBUG select candidatee0_.candidate_id as candidat1_2_, candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_ from candidate candidatee0_
2021-01-17 17:25:23 DEBUG Result set row: 0
2021-01-17 17:25:23 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:23 DEBUG Result set row: 1
2021-01-17 17:25:23 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:23 DEBUG Result set row: 2
2021-01-17 17:25:23 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:23 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:23 DEBUG Processing attribute `address` : value = jharkhand
2021-01-17 17:25:23 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `age` : value = 27
2021-01-17 17:25:23 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `candidateName` : value = damini
2021-01-17 17:25:23 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `contactNumber` : value = 9665212702
2021-01-17 17:25:23 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `email` : value = damin@gmail.com
2021-01-17 17:25:23 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `party` : value = congress
2021-01-17 17:25:23 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:25:23 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:25:23 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:25:23 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:25:23 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `leader` : value = rahul
2021-01-17 17:25:23 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:25:23 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:25:23 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#congress
2021-01-17 17:25:23 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:23 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:23 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:25:23 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:25:23 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `candidateName` : value = rishabh
2021-01-17 17:25:23 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:25:23 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `email` : value = rishabh@gmail.com
2021-01-17 17:25:23 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:25:23 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:25:23 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:25:23 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:25:23 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:25:23 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `leader` : value = evs lead
2021-01-17 17:25:23 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:25:23 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:25:23 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#evs
2021-01-17 17:25:23 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:23 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:23 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:25:23 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:25:23 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `candidateName` : value = priya
2021-01-17 17:25:23 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:25:23 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `email` : value = priya@gmail.com
2021-01-17 17:25:23 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:25:23 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:23 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:23 DEBUG Initiating transaction commit
2021-01-17 17:25:23 DEBUG Committing JPA transaction on EntityManager [SessionImpl(791116651<open>)]
2021-01-17 17:25:23 DEBUG committing
2021-01-17 17:25:23 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@320252032 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:25:23 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:25:23 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleCandidateNotFoundException(CandidateNotFoundException)
2021-01-17 17:25:23 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:25:23 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=Candidate Not Found  Party_Name: pattidarfamily, error (truncated)...]
2021-01-17 17:25:23 DEBUG Resolved [Candidate Not Found  Party_Name: pattidarfamily]
2021-01-17 17:25:23 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:23 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:25:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:25:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:25:41 DEBUG GET "/evs/candidate/party/BJP", parameters={}
2021-01-17 17:25:41 DEBUG Mapped to com.spring.cg.controller.CandidateController#getCandidateByPartyName(String)
2021-01-17 17:25:41 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:41 DEBUG Found thread-bound EntityManager [SessionImpl(1633683649<open>)] for JPA transaction
2021-01-17 17:25:41 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:25:41 DEBUG Setting JDBC Connection [HikariProxyConnection@441373411 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:25:41 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:25:41 DEBUG begin
2021-01-17 17:25:41 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@5e971799]
2021-01-17 17:25:41 DEBUG Rendered criteria query -> select generatedAlias0 from CandidateEntity as generatedAlias0
2021-01-17 17:25:41 DEBUG select candidatee0_.candidate_id as candidat1_2_, candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_ from candidate candidatee0_
2021-01-17 17:25:41 DEBUG Result set row: 0
2021-01-17 17:25:41 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:41 DEBUG Result set row: 1
2021-01-17 17:25:41 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:41 DEBUG Result set row: 2
2021-01-17 17:25:41 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:41 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:41 DEBUG Processing attribute `address` : value = jharkhand
2021-01-17 17:25:41 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `age` : value = 27
2021-01-17 17:25:41 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `candidateName` : value = damini
2021-01-17 17:25:41 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `contactNumber` : value = 9665212702
2021-01-17 17:25:41 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `email` : value = damin@gmail.com
2021-01-17 17:25:41 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `party` : value = congress
2021-01-17 17:25:41 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:25:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:25:41 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:25:41 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:25:41 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `leader` : value = rahul
2021-01-17 17:25:41 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:25:41 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:25:41 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#congress
2021-01-17 17:25:41 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:25:41 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:41 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:25:41 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:25:41 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `candidateName` : value = rishabh
2021-01-17 17:25:41 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:25:41 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `email` : value = rishabh@gmail.com
2021-01-17 17:25:41 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:25:41 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:25:41 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:25:41 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:25:41 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:25:41 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `leader` : value = evs lead
2021-01-17 17:25:41 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:25:41 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:25:41 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#evs
2021-01-17 17:25:41 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:25:41 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:41 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:25:41 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:25:41 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `candidateName` : value = priya
2021-01-17 17:25:41 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:25:41 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `email` : value = priya@gmail.com
2021-01-17 17:25:41 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:25:41 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:25:41 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:25:41 DEBUG Initiating transaction commit
2021-01-17 17:25:41 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1633683649<open>)]
2021-01-17 17:25:41 DEBUG committing
2021-01-17 17:25:41 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@441373411 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:25:41 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:25:41 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleCandidateNotFoundException(CandidateNotFoundException)
2021-01-17 17:25:41 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:25:41 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=Candidate Not Found  Party_Name: BJP, errors=[candidat (truncated)...]
2021-01-17 17:25:41 DEBUG Resolved [Candidate Not Found  Party_Name: BJP]
2021-01-17 17:25:41 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:25:41 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:26:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:26:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:26:17 DEBUG OPTIONS "/evs/user/login", parameters={}
2021-01-17 17:26:17 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:26:17 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:17 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:17 DEBUG Completed 200 OK
2021-01-17 17:26:17 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:26:17 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:26:17 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:17 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:26:17 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:26:17 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:26:17 DEBUG Result set row: 0
2021-01-17 17:26:17 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#362]
2021-01-17 17:26:17 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:26:17 DEBUG Processing attribute `Role` : value = admin
2021-01-17 17:26:17 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `address` : value = wardha
2021-01-17 17:26:17 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:26:17 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `dob` : value = 1998-08-16
2021-01-17 17:26:17 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `emailId` : value = neha@gmail.com
2021-01-17 17:26:17 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `name` : value = neha
2021-01-17 17:26:17 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `password` : value = Admin@123
2021-01-17 17:26:17 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `phoneNo` : value = 9665212702
2021-01-17 17:26:17 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Processing attribute `univName` : value = nehas
2021-01-17 17:26:17 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:17 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:26:17 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:26:17 DEBUG Writing [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:26:17 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:17 DEBUG Completed 201 CREATED
2021-01-17 17:26:28 DEBUG GET "/evs/candidate", parameters={}
2021-01-17 17:26:28 DEBUG Mapped to com.spring.cg.controller.CandidateController#getAllCandidates()
2021-01-17 17:26:28 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:28 DEBUG Found thread-bound EntityManager [SessionImpl(1152431660<open>)] for JPA transaction
2021-01-17 17:26:28 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:26:28 DEBUG Setting JDBC Connection [HikariProxyConnection@1713472044 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:26:28 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:26:28 DEBUG begin
2021-01-17 17:26:28 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@57934953]
2021-01-17 17:26:28 DEBUG Rendered criteria query -> select generatedAlias0 from CandidateEntity as generatedAlias0
2021-01-17 17:26:28 DEBUG select candidatee0_.candidate_id as candidat1_2_, candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_ from candidate candidatee0_
2021-01-17 17:26:28 DEBUG Result set row: 0
2021-01-17 17:26:28 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:26:28 DEBUG Result set row: 1
2021-01-17 17:26:28 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:26:28 DEBUG Result set row: 2
2021-01-17 17:26:28 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:26:28 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:26:28 DEBUG Processing attribute `address` : value = jharkhand
2021-01-17 17:26:28 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `age` : value = 27
2021-01-17 17:26:28 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `candidateName` : value = damini
2021-01-17 17:26:28 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `contactNumber` : value = 9665212702
2021-01-17 17:26:28 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `email` : value = damin@gmail.com
2021-01-17 17:26:28 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `party` : value = congress
2021-01-17 17:26:28 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:26:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:26:28 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:26:28 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:26:28 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `leader` : value = rahul
2021-01-17 17:26:28 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:26:28 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:26:28 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#congress
2021-01-17 17:26:28 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:26:28 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:26:28 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:26:28 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:26:28 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `candidateName` : value = rishabh
2021-01-17 17:26:28 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:26:28 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `email` : value = rishabh@gmail.com
2021-01-17 17:26:28 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:26:28 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:26:28 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:26:28 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:26:28 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:26:28 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `leader` : value = evs lead
2021-01-17 17:26:28 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:26:28 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:26:28 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#evs
2021-01-17 17:26:28 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:26:28 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:26:28 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:26:28 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:26:28 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `candidateName` : value = priya
2021-01-17 17:26:28 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:26:28 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `email` : value = priya@gmail.com
2021-01-17 17:26:28 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:26:28 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:28 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:26:28 DEBUG Initiating transaction commit
2021-01-17 17:26:28 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1152431660<open>)]
2021-01-17 17:26:28 DEBUG committing
2021-01-17 17:26:28 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1713472044 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:26:28 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:26:28 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:26:28 DEBUG Writing [[[candidate_id = 338, candidateName = damini, address = jharkhand, age = 27, contactNumber = 9665212 (truncated)...]
2021-01-17 17:26:28 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:28 DEBUG Completed 200 OK
2021-01-17 17:26:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:26:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:26:55 DEBUG GET "/evs/user/rishabh@gmail.com/Rishabh@123", parameters={}
2021-01-17 17:26:55 DEBUG Mapped to com.spring.cg.controller.RegisterUserController#userLogin(String, String)
2021-01-17 17:26:55 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:55 DEBUG Rendered criteria query -> select generatedAlias0 from RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:26:55 DEBUG select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:26:55 DEBUG Result set row: 0
2021-01-17 17:26:55 DEBUG Result row: EntityKey[com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:26:55 DEBUG Resolving attributes for [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:26:55 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:26:55 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `district` : value = mumbai
2021-01-17 17:26:55 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `dob` : value = 1998-07-17
2021-01-17 17:26:55 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `emailId` : value = rishabh@gmail.com
2021-01-17 17:26:55 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `gender` : value = Male
2021-01-17 17:26:55 DEBUG Attribute (`gender`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `mobile_number` : value = 9004143938
2021-01-17 17:26:55 DEBUG Attribute (`mobile_number`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `name` : value = Rishabh
2021-01-17 17:26:55 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Processing attribute `password` : value = Rishabh@123
2021-01-17 17:26:55 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:26:55 DEBUG Done materializing entity [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:26:55 DEBUG user login
2021-01-17 17:26:55 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:26:55 DEBUG Writing [RegisterUser [application_id=365, name=Rishabh, dob=1998-07-17, emailId=rishabh@gmail.com, password= (truncated)...]
2021-01-17 17:26:55 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:26:55 DEBUG Completed 201 CREATED
2021-01-17 17:27:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:27:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:27:05 DEBUG GET "/evs/candidate", parameters={}
2021-01-17 17:27:05 DEBUG Mapped to com.spring.cg.controller.CandidateController#getAllCandidates()
2021-01-17 17:27:05 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:05 DEBUG Found thread-bound EntityManager [SessionImpl(946379251<open>)] for JPA transaction
2021-01-17 17:27:05 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:27:05 DEBUG Setting JDBC Connection [HikariProxyConnection@1233672711 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:27:05 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:27:05 DEBUG begin
2021-01-17 17:27:05 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@7b4422f3]
2021-01-17 17:27:05 DEBUG Rendered criteria query -> select generatedAlias0 from CandidateEntity as generatedAlias0
2021-01-17 17:27:05 DEBUG select candidatee0_.candidate_id as candidat1_2_, candidatee0_.address as address2_2_, candidatee0_.age as age3_2_, candidatee0_.candidate_name as candidat4_2_, candidatee0_.contact_number as contact_5_2_, candidatee0_.email as email6_2_, candidatee0_.party_name as party_na7_2_ from candidate candidatee0_
2021-01-17 17:27:05 DEBUG Result set row: 0
2021-01-17 17:27:05 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:27:05 DEBUG Result set row: 1
2021-01-17 17:27:05 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:27:05 DEBUG Result set row: 2
2021-01-17 17:27:05 DEBUG Result row: EntityKey[com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:27:05 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:27:05 DEBUG Processing attribute `address` : value = jharkhand
2021-01-17 17:27:05 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `age` : value = 27
2021-01-17 17:27:05 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `candidateName` : value = damini
2021-01-17 17:27:05 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `contactNumber` : value = 9665212702
2021-01-17 17:27:05 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `email` : value = damin@gmail.com
2021-01-17 17:27:05 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `party` : value = congress
2021-01-17 17:27:05 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:27:05 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:27:05 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:27:05 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:27:05 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `leader` : value = rahul
2021-01-17 17:27:05 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:27:05 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#congress]
2021-01-17 17:27:05 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#congress
2021-01-17 17:27:05 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#338]
2021-01-17 17:27:05 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:27:05 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:27:05 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:27:05 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `candidateName` : value = rishabh
2021-01-17 17:27:05 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:27:05 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `email` : value = rishabh@gmail.com
2021-01-17 17:27:05 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:27:05 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG select partyentit0_.party_name as party_na1_7_0_, partyentit0_.leader as leader2_7_0_, partyentit0_.symbol as symbol3_7_0_ from party partyentit0_ where partyentit0_.party_name=?
2021-01-17 17:27:05 DEBUG On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-17 17:27:05 DEBUG Resolving attributes for [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:27:05 DEBUG Processing attribute `candidate` : value = NOT NULL COLLECTION
2021-01-17 17:27:05 DEBUG Attribute (`candidate`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `leader` : value = evs lead
2021-01-17 17:27:05 DEBUG Attribute (`leader`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `symbol` : value = hand
2021-01-17 17:27:05 DEBUG Attribute (`symbol`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Done materializing entity [com.spring.cg.entity.PartyEntity#evs]
2021-01-17 17:27:05 DEBUG Done entity load : com.spring.cg.entity.PartyEntity#evs
2021-01-17 17:27:05 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#2]
2021-01-17 17:27:05 DEBUG Resolving attributes for [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:27:05 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:27:05 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `age` : value = 26
2021-01-17 17:27:05 DEBUG Attribute (`age`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `candidateName` : value = priya
2021-01-17 17:27:05 DEBUG Attribute (`candidateName`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `contactNumber` : value = 9856745679
2021-01-17 17:27:05 DEBUG Attribute (`contactNumber`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `email` : value = priya@gmail.com
2021-01-17 17:27:05 DEBUG Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Processing attribute `party` : value = evs
2021-01-17 17:27:05 DEBUG Attribute (`party`)  - enhanced for lazy-loading? - false
2021-01-17 17:27:05 DEBUG Done materializing entity [com.spring.cg.entity.CandidateEntity#3]
2021-01-17 17:27:05 DEBUG Initiating transaction commit
2021-01-17 17:27:05 DEBUG Committing JPA transaction on EntityManager [SessionImpl(946379251<open>)]
2021-01-17 17:27:05 DEBUG committing
2021-01-17 17:27:05 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1233672711 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:27:05 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:27:05 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:27:05 DEBUG Writing [[[candidate_id = 338, candidateName = damini, address = jharkhand, age = 27, contactNumber = 9665212 (truncated)...]
2021-01-17 17:27:05 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:05 DEBUG Completed 200 OK
2021-01-17 17:27:14 DEBUG GET "/evs/State", parameters={}
2021-01-17 17:27:14 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getAllStatesName()
2021-01-17 17:27:14 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:14 DEBUG GET "/evs/election/electionName", parameters={}
2021-01-17 17:27:14 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getAllElectionName()
2021-01-17 17:27:14 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:14 DEBUG Found thread-bound EntityManager [SessionImpl(1109835035<open>)] for JPA transaction
2021-01-17 17:27:14 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:27:14 DEBUG select distinct upper(electionse0_.election_name) as col_0_0_ from election electionse0_ order by upper(electionse0_.election_name)
2021-01-17 17:27:14 DEBUG Setting JDBC Connection [HikariProxyConnection@969883181 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:27:14 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:27:14 DEBUG begin
2021-01-17 17:27:14 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@79f85827]
2021-01-17 17:27:14 DEBUG Rendered criteria query -> select generatedAlias0 from StateEntity as generatedAlias0
2021-01-17 17:27:14 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.StateEntity as generatedAlias0
2021-01-17 17:27:14 DEBUG throwQueryException() : no errors
2021-01-17 17:27:14 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'spring'
       |     |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'StateEntity'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-17 17:27:14 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:27:14 DEBUG FromClause{level=1} : com.spring.cg.entity.StateEntity (generatedAlias0) -> stateentit0_
2021-01-17 17:27:14 DEBUG Resolved : generatedAlias0 -> stateentit0_.state
2021-01-17 17:27:14 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:27:14 DEBUG processQuery() :  ( SELECT ( {select clause} stateentit0_.state ) ( FromClause{level=1} states stateentit0_ ) )
2021-01-17 17:27:14 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity StateEntity): [states]
    |  \-IdentNode
    |    persister: SingleTableEntityPersister(com.spring.cg.entity.StateEntity)
    |    originalText: generatedAlias0
    \-FromClause
       \-FromElement

2021-01-17 17:27:14 DEBUG Using FROM fragment [states stateentit0_]
2021-01-17 17:27:14 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:27:14 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (states)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'stateentit0_.state as state1_10_' {alias=generatedAlias0, className=com.spring.cg.entity.StateEntity, tableAlias=stateentit0_}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[stateentit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'states stateentit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=states,tableAlias=stateentit0_,origin=null,columns={,className=com.spring.cg.entity.StateEntity}}

2021-01-17 17:27:14 DEBUG throwQueryException() : no errors
2021-01-17 17:27:14 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.StateEntity as generatedAlias0
2021-01-17 17:27:14 DEBUG SQL: select stateentit0_.state as state1_10_ from states stateentit0_
2021-01-17 17:27:14 DEBUG throwQueryException() : no errors
2021-01-17 17:27:14 DEBUG select stateentit0_.state as state1_10_ from states stateentit0_
2021-01-17 17:27:14 DEBUG Result set row: 0
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:27:14 DEBUG Result set row: 1
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:27:14 DEBUG Result set row: 2
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:27:14 DEBUG Result set row: 3
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:27:14 DEBUG Result set row: 4
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:27:14 DEBUG Result set row: 5
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:27:14 DEBUG Result set row: 6
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:27:14 DEBUG Result set row: 7
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:27:14 DEBUG Result set row: 8
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:27:14 DEBUG Result set row: 9
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:27:14 DEBUG Result set row: 10
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:27:14 DEBUG Result set row: 11
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:27:14 DEBUG Result set row: 12
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:27:14 DEBUG Result set row: 13
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:27:14 DEBUG Result set row: 14
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:27:14 DEBUG Result set row: 15
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:27:14 DEBUG Result set row: 16
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:27:14 DEBUG Result set row: 17
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:27:14 DEBUG Result set row: 0
2021-01-17 17:27:14 DEBUG Result row: 
2021-01-17 17:27:14 DEBUG Result set row: 18
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:27:14 DEBUG Result set row: 1
2021-01-17 17:27:14 DEBUG Result set row: 19
2021-01-17 17:27:14 DEBUG Result row: 
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:27:14 DEBUG Result set row: 2
2021-01-17 17:27:14 DEBUG Result row: 
2021-01-17 17:27:14 DEBUG Result set row: 20
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:27:14 DEBUG Result set row: 21
2021-01-17 17:27:14 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:27:14 DEBUG Writing [[LOKSABHA, RAJYASABHA, VIDHANSABHA]]
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:27:14 DEBUG Result set row: 22
2021-01-17 17:27:14 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:27:14 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:27:14 DEBUG Completed 200 OK
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:27:14 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:27:14 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:27:14 DEBUG Initiating transaction commit
2021-01-17 17:27:14 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1109835035<open>)]
2021-01-17 17:27:14 DEBUG committing
2021-01-17 17:27:14 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@969883181 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:27:14 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:27:14 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:27:14 DEBUG Writing [[StateEntity [state=Maharashtra], StateEntity [state=AndhraPradesh], StateEntity [state=ArunachalPra (truncated)...]
2021-01-17 17:27:14 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:14 DEBUG Completed 200 OK
2021-01-17 17:27:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:27:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:27:43 DEBUG GET "/evs/election/castvote/RAJYASABHA/GOA/THIVIM/2020-12-13", parameters={}
2021-01-17 17:27:43 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getCandidateList(String, String, String, LocalDate)
2021-01-17 17:27:43 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:43 DEBUG debug logger
2021-01-17 17:27:43 DEBUG select electionse0_.election_name as col_0_0_, electionse0_.state as col_1_0_, electionse0_.constituency as col_2_0_, electionse0_.date as col_3_0_ from election electionse0_ where (upper(electionse0_.election_name) like ?) and (upper(electionse0_.state) like ?) and (upper(electionse0_.constituency) like ?) and electionse0_.date=?
2021-01-17 17:27:43 DEBUG Result set row: 0
2021-01-17 17:27:43 DEBUG Result row: 
2021-01-17 17:27:43 DEBUG select candidate1_.candidate_name as col_0_0_, partyzenti0_.party_name as col_1_0_ from party partyzenti0_ inner join candidate candidate1_ on partyzenti0_.party_name=candidate1_.party_name inner join election_party election2_ on partyzenti0_.party_name=election2_.party_name inner join election electionse3_ on election2_.election_id=electionse3_.election_id where (upper(electionse3_.election_name) like ?) and (upper(electionse3_.constituency) like ?) and electionse3_.date=?
2021-01-17 17:27:43 DEBUG Result set row: 0
2021-01-17 17:27:43 DEBUG Result row: 
2021-01-17 17:27:43 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:27:43 DEBUG Writing [[CastVote [castId=0, election_name=null, state=null, constituency=null, date=null, candidate_name=da (truncated)...]
2021-01-17 17:27:43 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:43 DEBUG Completed 200 OK
2021-01-17 17:27:43 DEBUG GET "/evs/election/castvote/RAJYASABHA/GOA/THIVIM/2020-12-13", parameters={}
2021-01-17 17:27:43 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getCandidateList(String, String, String, LocalDate)
2021-01-17 17:27:43 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:43 DEBUG debug logger
2021-01-17 17:27:43 DEBUG select electionse0_.election_name as col_0_0_, electionse0_.state as col_1_0_, electionse0_.constituency as col_2_0_, electionse0_.date as col_3_0_ from election electionse0_ where (upper(electionse0_.election_name) like ?) and (upper(electionse0_.state) like ?) and (upper(electionse0_.constituency) like ?) and electionse0_.date=?
2021-01-17 17:27:43 DEBUG Result set row: 0
2021-01-17 17:27:43 DEBUG Result row: 
2021-01-17 17:27:43 DEBUG select candidate1_.candidate_name as col_0_0_, partyzenti0_.party_name as col_1_0_ from party partyzenti0_ inner join candidate candidate1_ on partyzenti0_.party_name=candidate1_.party_name inner join election_party election2_ on partyzenti0_.party_name=election2_.party_name inner join election electionse3_ on election2_.election_id=electionse3_.election_id where (upper(electionse3_.election_name) like ?) and (upper(electionse3_.constituency) like ?) and electionse3_.date=?
2021-01-17 17:27:43 DEBUG Result set row: 0
2021-01-17 17:27:43 DEBUG Result row: 
2021-01-17 17:27:43 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:27:43 DEBUG Writing [[CastVote [castId=0, election_name=null, state=null, constituency=null, date=null, candidate_name=da (truncated)...]
2021-01-17 17:27:43 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:43 DEBUG Completed 200 OK
2021-01-17 17:27:58 DEBUG OPTIONS "/evs/election/castvote", parameters={}
2021-01-17 17:27:58 DEBUG Mapped to com.spring.cg.controller.CastVoteController#createNewCastVote(CastVote)
2021-01-17 17:27:58 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:58 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:58 DEBUG Completed 200 OK
2021-01-17 17:27:58 DEBUG POST "/evs/election/castvote", parameters={}
2021-01-17 17:27:58 DEBUG Mapped to com.spring.cg.controller.CastVoteController#createNewCastVote(CastVote)
2021-01-17 17:27:58 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:58 DEBUG Read "application/json;charset=UTF-8" to [CastVote [castId=0, election_name=RAJYASABHA, state=GOA, constituency=THIVIM, date=2020-12-13, candi (truncated)...]
2021-01-17 17:27:58 DEBUG select candidate1_.candidate_name as col_0_0_, partyzenti0_.party_name as col_1_0_ from party partyzenti0_ inner join candidate candidate1_ on partyzenti0_.party_name=candidate1_.party_name inner join election_party election2_ on partyzenti0_.party_name=election2_.party_name inner join election electionse3_ on election2_.election_id=electionse3_.election_id where (upper(electionse3_.election_name) like ?) and (upper(electionse3_.constituency) like ?) and electionse3_.date=?
2021-01-17 17:27:58 DEBUG Result set row: 0
2021-01-17 17:27:58 DEBUG Result row: 
2021-01-17 17:27:58 DEBUG select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.constituency as col_2_0_, castvoteen0_.date as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, castvoteen0_.voter_id as col_6_0_ from castvote castvoteen0_ where (upper(castvoteen0_.election_name) like ?) and (upper(castvoteen0_.constituency) like ?) and castvoteen0_.date=? and castvoteen0_.voter_id=?
2021-01-17 17:27:58 DEBUG Found thread-bound EntityManager [SessionImpl(1962355004<open>)] for JPA transaction
2021-01-17 17:27:58 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.save]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2021-01-17 17:27:58 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:27:58 DEBUG begin
2021-01-17 17:27:58 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3e785d89]
2021-01-17 17:27:58 DEBUG select nextval ('hibernate_sequence')
2021-01-17 17:27:58 DEBUG Sequence value obtained: 366
2021-01-17 17:27:58 DEBUG HHH000387: ResultSet's statement was not registered
2021-01-17 17:27:58 DEBUG Generated identifier: 366, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-01-17 17:27:58 DEBUG Initiating transaction commit
2021-01-17 17:27:58 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1962355004<open>)]
2021-01-17 17:27:58 DEBUG committing
2021-01-17 17:27:58 DEBUG Processing flush-time cascades
2021-01-17 17:27:58 DEBUG Dirty checking collections
2021-01-17 17:27:58 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-01-17 17:27:58 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-17 17:27:58 DEBUG Listing entities:
2021-01-17 17:27:58 DEBUG com.spring.cg.entity.CastVoteEntity{date=2020-12-13, electionName=RAJYASABHA, candidateName=DAMINI, constituency=THIVIM, castId=366, partyName=CONGRESS, voterId=10, state=GOA}
2021-01-17 17:27:58 DEBUG insert into castvote (candidate_name, constituency, date, election_name, party_name, state, voter_id, cast_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-17 17:27:58 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:27:58 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:27:58 DEBUG Writing [CastVote [castId=366, election_name=RAJYASABHA, state=GOA, constituency=THIVIM, date=2020-12-13, can (truncated)...]
2021-01-17 17:27:58 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:27:58 DEBUG Completed 200 OK
2021-01-17 17:28:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:28:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:28:03 DEBUG GET "/evs/State", parameters={}
2021-01-17 17:28:03 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getAllStatesName()
2021-01-17 17:28:03 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:03 DEBUG Found thread-bound EntityManager [SessionImpl(389329596<open>)] for JPA transaction
2021-01-17 17:28:03 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:28:03 DEBUG GET "/evs/election/electionName", parameters={}
2021-01-17 17:28:03 DEBUG Setting JDBC Connection [HikariProxyConnection@649896004 wrapping org.postgresql.jdbc.PgConnection@bb6869a] read-only
2021-01-17 17:28:03 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:28:03 DEBUG Mapped to com.spring.cg.controller.CastVoteController#getAllElectionName()
2021-01-17 17:28:03 DEBUG begin
2021-01-17 17:28:03 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@b065da3]
2021-01-17 17:28:03 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:03 DEBUG select distinct upper(electionse0_.election_name) as col_0_0_ from election electionse0_ order by upper(electionse0_.election_name)
2021-01-17 17:28:03 DEBUG Rendered criteria query -> select generatedAlias0 from StateEntity as generatedAlias0
2021-01-17 17:28:03 DEBUG select stateentit0_.state as state1_10_ from states stateentit0_
2021-01-17 17:28:03 DEBUG Result set row: 0
2021-01-17 17:28:03 DEBUG Result set row: 0
2021-01-17 17:28:03 DEBUG Result row: 
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:03 DEBUG Result set row: 1
2021-01-17 17:28:03 DEBUG Result set row: 1
2021-01-17 17:28:03 DEBUG Result row: 
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:03 DEBUG Result set row: 2
2021-01-17 17:28:03 DEBUG Result row: 
2021-01-17 17:28:03 DEBUG Result set row: 2
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:03 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:28:03 DEBUG Result set row: 3
2021-01-17 17:28:03 DEBUG Writing [[LOKSABHA, RAJYASABHA, VIDHANSABHA]]
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:03 DEBUG Result set row: 4
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:03 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:03 DEBUG Completed 200 OK
2021-01-17 17:28:03 DEBUG Result set row: 5
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:03 DEBUG Result set row: 6
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:03 DEBUG Result set row: 7
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:03 DEBUG Result set row: 8
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:03 DEBUG Result set row: 9
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:03 DEBUG Result set row: 10
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:03 DEBUG Result set row: 11
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:03 DEBUG Result set row: 12
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:03 DEBUG Result set row: 13
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:03 DEBUG Result set row: 14
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:03 DEBUG Result set row: 15
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:03 DEBUG Result set row: 16
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:03 DEBUG Result set row: 17
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:03 DEBUG Result set row: 18
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:03 DEBUG Result set row: 19
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:03 DEBUG Result set row: 20
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:03 DEBUG Result set row: 21
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:03 DEBUG Result set row: 22
2021-01-17 17:28:03 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:03 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:03 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:03 DEBUG Initiating transaction commit
2021-01-17 17:28:03 DEBUG Committing JPA transaction on EntityManager [SessionImpl(389329596<open>)]
2021-01-17 17:28:03 DEBUG committing
2021-01-17 17:28:03 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@649896004 wrapping org.postgresql.jdbc.PgConnection@bb6869a]
2021-01-17 17:28:03 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:28:03 DEBUG Using 'application/json', given [*/*] and supported [application/json]
2021-01-17 17:28:03 DEBUG Writing [[StateEntity [state=Maharashtra], StateEntity [state=AndhraPradesh], StateEntity [state=ArunachalPra (truncated)...]
2021-01-17 17:28:03 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:03 DEBUG Completed 200 OK
2021-01-17 17:28:23 DEBUG POST "/evs/user/login", parameters={}
2021-01-17 17:28:23 DEBUG Mapped to com.spring.cg.controller.UserController#userLogin(Login)
2021-01-17 17:28:23 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:23 DEBUG Read "application/json;charset=UTF-8" to [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:28:23 DEBUG Rendered criteria query -> select generatedAlias0 from UserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:28:23 DEBUG select userentity0_.userid as userid1_1_, userentity0_.role as role2_1_, userentity0_.address as address3_1_, userentity0_.login_attempts as login_at4_1_, userentity0_.dob as dob5_1_, userentity0_.email as email6_1_, userentity0_.name as name7_1_, userentity0_.password as password8_1_, userentity0_.phone as phone9_1_, userentity0_.univ_name as univ_na10_1_ from public.user userentity0_ where userentity0_.email=?
2021-01-17 17:28:23 DEBUG Result set row: 0
2021-01-17 17:28:23 DEBUG Result row: EntityKey[com.spring.cg.entity.UserEntity#362]
2021-01-17 17:28:23 DEBUG Resolving attributes for [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:28:23 DEBUG Processing attribute `Role` : value = admin
2021-01-17 17:28:23 DEBUG Attribute (`Role`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `address` : value = wardha
2021-01-17 17:28:23 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `attempts` : value = 1
2021-01-17 17:28:23 DEBUG Attribute (`attempts`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `dob` : value = 1998-08-16
2021-01-17 17:28:23 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `emailId` : value = neha@gmail.com
2021-01-17 17:28:23 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `name` : value = neha
2021-01-17 17:28:23 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `password` : value = Admin@123
2021-01-17 17:28:23 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `phoneNo` : value = 9665212702
2021-01-17 17:28:23 DEBUG Attribute (`phoneNo`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Processing attribute `univName` : value = nehas
2021-01-17 17:28:23 DEBUG Attribute (`univName`)  - enhanced for lazy-loading? - false
2021-01-17 17:28:23 DEBUG Done materializing entity [com.spring.cg.entity.UserEntity#362]
2021-01-17 17:28:23 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:28:23 DEBUG Writing [Login [emailId=neha@gmail.com, password=Admin@123, Role=admin]]
2021-01-17 17:28:23 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:23 DEBUG Completed 201 CREATED
2021-01-17 17:28:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:28:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:28:31 DEBUG GET "/evs/castelectionname", parameters={}
2021-01-17 17:28:31 DEBUG GET "/evs/state", parameters={}
2021-01-17 17:28:31 DEBUG Mapped to com.spring.cg.controller.ResultController#viewcastelectionname()
2021-01-17 17:28:31 DEBUG Mapped to com.spring.cg.controller.ResultController#getAllStatesName()
2021-01-17 17:28:31 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:31 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:31 DEBUG Found thread-bound EntityManager [SessionImpl(1728171097<open>)] for JPA transaction
2021-01-17 17:28:31 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2021-01-17 17:28:31 DEBUG select distinct castvoteen0_.election_name as col_0_0_ from castvote castvoteen0_
2021-01-17 17:28:31 DEBUG Setting JDBC Connection [HikariProxyConnection@1255441416 wrapping org.postgresql.jdbc.PgConnection@da6fd37] read-only
2021-01-17 17:28:31 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:28:31 DEBUG begin
2021-01-17 17:28:31 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@593a5300]
2021-01-17 17:28:31 DEBUG Result set row: 0
2021-01-17 17:28:31 DEBUG Result row: 
2021-01-17 17:28:31 DEBUG Rendered criteria query -> select generatedAlias0 from StateEntity as generatedAlias0
2021-01-17 17:28:31 DEBUG Result set row: 1
2021-01-17 17:28:31 DEBUG Result row: 
2021-01-17 17:28:31 DEBUG select stateentit0_.state as state1_10_ from states stateentit0_
2021-01-17 17:28:31 DEBUG Result set row: 2
2021-01-17 17:28:31 DEBUG Result row: 
2021-01-17 17:28:31 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:28:31 DEBUG Writing [[RAJYASABHA, loksabha, rajyasabha]]
2021-01-17 17:28:31 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:31 DEBUG Completed 200 OK
2021-01-17 17:28:31 DEBUG Result set row: 0
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:31 DEBUG Result set row: 1
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:31 DEBUG Result set row: 2
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:31 DEBUG Result set row: 3
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:31 DEBUG Result set row: 4
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:31 DEBUG Result set row: 5
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:31 DEBUG Result set row: 6
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:31 DEBUG Result set row: 7
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:31 DEBUG Result set row: 8
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:31 DEBUG Result set row: 9
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:31 DEBUG Result set row: 10
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:31 DEBUG Result set row: 11
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:31 DEBUG Result set row: 12
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:31 DEBUG Result set row: 13
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:31 DEBUG Result set row: 14
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:31 DEBUG Result set row: 15
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:31 DEBUG Result set row: 16
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:31 DEBUG Result set row: 17
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:31 DEBUG Result set row: 18
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:31 DEBUG Result set row: 19
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:31 DEBUG Result set row: 20
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:31 DEBUG Result set row: 21
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:31 DEBUG Result set row: 22
2021-01-17 17:28:31 DEBUG Result row: EntityKey[com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Maharashtra]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#AndhraPradesh]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#ArunachalPradesh]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Assam]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Chhattisgarh]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Goa]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Haryana]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Himachal Pradesh]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Mizoram]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Jharkhand]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Karnataka]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Kerala]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Madhya Pradesh]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Manipur]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Meghalaya]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Nagaland]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Odisha]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Punjab]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Rajasthan]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Sikkim]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#TamilNadu]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Tripura]
2021-01-17 17:28:31 DEBUG Resolving attributes for [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:31 DEBUG Done materializing entity [com.spring.cg.entity.StateEntity#Gujarat]
2021-01-17 17:28:31 DEBUG Initiating transaction commit
2021-01-17 17:28:31 DEBUG Committing JPA transaction on EntityManager [SessionImpl(1728171097<open>)]
2021-01-17 17:28:31 DEBUG committing
2021-01-17 17:28:31 DEBUG Resetting read-only flag of JDBC Connection [HikariProxyConnection@1255441416 wrapping org.postgresql.jdbc.PgConnection@da6fd37]
2021-01-17 17:28:31 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:28:31 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:28:31 DEBUG Writing [[StateEntity [state=Maharashtra], StateEntity [state=AndhraPradesh], StateEntity [state=ArunachalPra (truncated)...]
2021-01-17 17:28:31 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:31 DEBUG Completed 200 OK
2021-01-17 17:28:44 DEBUG GET "/evs/result/RAJYASABHA/Goa", parameters={}
2021-01-17 17:28:44 DEBUG Mapped to com.spring.cg.controller.ResultController#getResult(String, String)
2021-01-17 17:28:44 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:44 DEBUG select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.date as col_2_0_, castvoteen0_.constituency as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, count(castvoteen0_.voter_id) as col_6_0_ from castvote castvoteen0_ group by castvoteen0_.election_name , castvoteen0_.state , castvoteen0_.date , castvoteen0_.constituency , castvoteen0_.candidate_name , castvoteen0_.party_name having castvoteen0_.election_name=? and castvoteen0_.state=?
2021-01-17 17:28:44 DEBUG Using @ExceptionHandler com.spring.cg.exception.GlobalExceptionHandler#handleResultNotFoundException(ResultNotFoundException)
2021-01-17 17:28:44 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2021-01-17 17:28:44 DEBUG Writing [ErrorMessage [status=400 BAD_REQUEST, message=ResultNotFoundException [message=No Result foundfor RA (truncated)...]
2021-01-17 17:28:44 DEBUG Resolved [ResultNotFoundException [message=No Result foundfor RAJYASABHA and Goa]]
2021-01-17 17:28:44 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:44 DEBUG Completed 400 BAD_REQUEST
2021-01-17 17:28:56 DEBUG GET "/evs/result/rajyasabha/Goa", parameters={}
2021-01-17 17:28:56 DEBUG Mapped to com.spring.cg.controller.ResultController#getResult(String, String)
2021-01-17 17:28:56 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:56 DEBUG select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.date as col_2_0_, castvoteen0_.constituency as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, count(castvoteen0_.voter_id) as col_6_0_ from castvote castvoteen0_ group by castvoteen0_.election_name , castvoteen0_.state , castvoteen0_.date , castvoteen0_.constituency , castvoteen0_.candidate_name , castvoteen0_.party_name having castvoteen0_.election_name=? and castvoteen0_.state=?
2021-01-17 17:28:56 DEBUG Result set row: 0
2021-01-17 17:28:56 DEBUG Result row: 
2021-01-17 17:28:56 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:28:56 DEBUG Writing [[Result [result_id=0, election_name=rajyasabha, state=Goa, date=2020-12-13, constituency=Thivim, can (truncated)...]
2021-01-17 17:28:56 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:28:56 DEBUG Completed 200 OK
2021-01-17 17:29:00 DEBUG OPTIONS "/evs/result/rajyasabha/Goa", parameters={}
2021-01-17 17:29:00 DEBUG Mapped to com.spring.cg.controller.ResultController#insertIntoResult(String, String)
2021-01-17 17:29:00 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:00 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:00 DEBUG Completed 200 OK
2021-01-17 17:29:00 DEBUG POST "/evs/result/rajyasabha/Goa", parameters={}
2021-01-17 17:29:00 DEBUG Mapped to com.spring.cg.controller.ResultController#insertIntoResult(String, String)
2021-01-17 17:29:00 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:00 DEBUG select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.date as col_2_0_, castvoteen0_.constituency as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, count(castvoteen0_.voter_id) as col_6_0_ from castvote castvoteen0_ group by castvoteen0_.election_name , castvoteen0_.state , castvoteen0_.date , castvoteen0_.constituency , castvoteen0_.candidate_name , castvoteen0_.party_name having castvoteen0_.election_name=? and castvoteen0_.state=?
2021-01-17 17:29:00 DEBUG Result set row: 0
2021-01-17 17:29:00 DEBUG Result row: 
2021-01-17 17:29:00 DEBUG select castvoteen0_.election_name as col_0_0_, castvoteen0_.state as col_1_0_, castvoteen0_.date as col_2_0_, castvoteen0_.constituency as col_3_0_, castvoteen0_.candidate_name as col_4_0_, castvoteen0_.party_name as col_5_0_, count(castvoteen0_.voter_id) as col_6_0_ from castvote castvoteen0_ group by castvoteen0_.election_name , castvoteen0_.state , castvoteen0_.date , castvoteen0_.constituency , castvoteen0_.candidate_name , castvoteen0_.party_name having castvoteen0_.election_name=? and castvoteen0_.state=?
2021-01-17 17:29:00 DEBUG Result set row: 0
2021-01-17 17:29:00 DEBUG Result row: 
2021-01-17 17:29:00 DEBUG Found thread-bound EntityManager [SessionImpl(9941586<open>)] for JPA transaction
2021-01-17 17:29:00 DEBUG Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2021-01-17 17:29:00 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-17 17:29:00 DEBUG begin
2021-01-17 17:29:00 DEBUG Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@328b3f76]
2021-01-17 17:29:00 DEBUG select nextval ('hibernate_sequence')
2021-01-17 17:29:00 DEBUG Sequence value obtained: 367
2021-01-17 17:29:00 DEBUG HHH000387: ResultSet's statement was not registered
2021-01-17 17:29:00 DEBUG Generated identifier: 367, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-01-17 17:29:00 DEBUG Initiating transaction commit
2021-01-17 17:29:00 DEBUG Committing JPA transaction on EntityManager [SessionImpl(9941586<open>)]
2021-01-17 17:29:00 DEBUG committing
2021-01-17 17:29:00 DEBUG Processing flush-time cascades
2021-01-17 17:29:00 DEBUG Dirty checking collections
2021-01-17 17:29:00 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-01-17 17:29:00 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-17 17:29:00 DEBUG Listing entities:
2021-01-17 17:29:00 DEBUG com.spring.cg.entity.ResultEntity{date=2020-12-13, constituency=Thivim, party_name=congress, result_id=367, election_name=rajyasabha, votes=1, candidate_name=damini, state=Goa}
2021-01-17 17:29:00 DEBUG insert into result (candidate_name, constituency, date, election_name, party_name, state, votes, result_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-17 17:29:00 DEBUG Not closing pre-bound JPA EntityManager after transaction
2021-01-17 17:29:00 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:29:00 DEBUG Writing [[Result [result_id=367, election_name=rajyasabha, state=Goa, date=2020-12-13, constituency=Thivim, c (truncated)...]
2021-01-17 17:29:00 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:00 DEBUG Completed 200 OK
2021-01-17 17:29:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:29:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:29:25 DEBUG GET "/evs/user/rishabh@gmail.com/Rishabh@123", parameters={}
2021-01-17 17:29:25 DEBUG Mapped to com.spring.cg.controller.RegisterUserController#userLogin(String, String)
2021-01-17 17:29:25 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:25 DEBUG Rendered criteria query -> select generatedAlias0 from RegisterUserEntity as generatedAlias0 where generatedAlias0.emailId=:param0
2021-01-17 17:29:25 DEBUG select registerus0_.application_id as applicat1_8_, registerus0_.address as address2_8_, registerus0_.district as district3_8_, registerus0_.dob as dob4_8_, registerus0_.email_id as email_id5_8_, registerus0_.gender as gender6_8_, registerus0_.mobile_number as mobile_n7_8_, registerus0_.name as name8_8_, registerus0_.password as password9_8_ from register_user registerus0_ where registerus0_.email_id=?
2021-01-17 17:29:25 DEBUG Result set row: 0
2021-01-17 17:29:25 DEBUG Result row: EntityKey[com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:29:25 DEBUG Resolving attributes for [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:29:25 DEBUG Processing attribute `address` : value = mumbai
2021-01-17 17:29:25 DEBUG Attribute (`address`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `district` : value = mumbai
2021-01-17 17:29:25 DEBUG Attribute (`district`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `dob` : value = 1998-07-17
2021-01-17 17:29:25 DEBUG Attribute (`dob`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `emailId` : value = rishabh@gmail.com
2021-01-17 17:29:25 DEBUG Attribute (`emailId`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `gender` : value = Male
2021-01-17 17:29:25 DEBUG Attribute (`gender`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `mobile_number` : value = 9004143938
2021-01-17 17:29:25 DEBUG Attribute (`mobile_number`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `name` : value = Rishabh
2021-01-17 17:29:25 DEBUG Attribute (`name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Processing attribute `password` : value = Rishabh@123
2021-01-17 17:29:25 DEBUG Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:25 DEBUG Done materializing entity [com.spring.cg.entity.RegisterUserEntity#365]
2021-01-17 17:29:25 DEBUG user login
2021-01-17 17:29:25 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:29:25 DEBUG Writing [RegisterUser [application_id=365, name=Rishabh, dob=1998-07-17, emailId=rishabh@gmail.com, password= (truncated)...]
2021-01-17 17:29:25 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:25 DEBUG Completed 201 CREATED
2021-01-17 17:29:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:29:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:29:33 DEBUG GET "/evs/statewise", parameters={}
2021-01-17 17:29:33 DEBUG Mapped to com.spring.cg.controller.ResultController#viewstatewise()
2021-01-17 17:29:33 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:33 DEBUG select distinct resultenti0_.state as col_0_0_ from result resultenti0_
2021-01-17 17:29:33 DEBUG Result set row: 0
2021-01-17 17:29:33 DEBUG Result row: 
2021-01-17 17:29:33 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:29:33 DEBUG Writing [[Goa]]
2021-01-17 17:29:33 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:33 DEBUG Completed 200 OK
2021-01-17 17:29:36 DEBUG GET "/evs/result/statename/Goa", parameters={}
2021-01-17 17:29:36 DEBUG Mapped to com.spring.cg.controller.ResultController#viewResultByStateName(String)
2021-01-17 17:29:36 DEBUG Opening JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:36 DEBUG Rendered criteria query -> select generatedAlias0 from ResultEntity as generatedAlias0 where generatedAlias0.state=:param0
2021-01-17 17:29:36 DEBUG parse() - HQL: select generatedAlias0 from com.spring.cg.entity.ResultEntity as generatedAlias0 where generatedAlias0.state=:param0
2021-01-17 17:29:36 DEBUG throwQueryException() : no errors
2021-01-17 17:29:36 DEBUG --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'spring'
    |  |     |  |  |  \-[IDENT] Node: 'cg'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'ResultEntity'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'state'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-17 17:29:36 DEBUG select << begin [level=1, statement=select]
2021-01-17 17:29:36 DEBUG FromClause{level=1} : com.spring.cg.entity.ResultEntity (generatedAlias0) -> resultenti0_
2021-01-17 17:29:36 DEBUG Resolved : generatedAlias0 -> resultenti0_.result_id
2021-01-17 17:29:36 DEBUG Resolved : generatedAlias0 -> resultenti0_.result_id
2021-01-17 17:29:36 DEBUG getDataType() : state -> org.hibernate.type.StringType@72a34537
2021-01-17 17:29:36 DEBUG Resolved : generatedAlias0.state -> resultenti0_.state
2021-01-17 17:29:36 DEBUG select : finishing up [level=1, statement=select]
2021-01-17 17:29:36 DEBUG processQuery() :  ( SELECT ( {select clause} resultenti0_.result_id ) ( FromClause{level=1} result resultenti0_ ) ( where ( = ( resultenti0_.state resultenti0_.result_id state ) ? ) ) )
2021-01-17 17:29:36 DEBUG Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity ResultEntity): [result]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          | path: generatedAlias0.state
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.spring.cg.entity.ResultEntity)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: state
          \-ParameterNode

2021-01-17 17:29:36 DEBUG Using FROM fragment [result resultenti0_]
2021-01-17 17:29:36 DEBUG select >> end [level=1, statement=select]
2021-01-17 17:29:36 DEBUG --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (result)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id as result_i1_9_' {alias=generatedAlias0, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[resultenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'result resultenti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=result,tableAlias=resultenti0_,origin=null,columns={,className=com.spring.cg.entity.ResultEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'resultenti0_.state' {propertyName=state,dereferenceType=PRIMITIVE,getPropertyPath=state,path=generatedAlias0.state,tableAlias=resultenti0_,className=com.spring.cg.entity.ResultEntity,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'resultenti0_.result_id' {alias=generatedAlias0, className=com.spring.cg.entity.ResultEntity, tableAlias=resultenti0_}
          |  \-[IDENT] IdentNode: 'state' {originalText=state}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@72a34537}

2021-01-17 17:29:36 DEBUG throwQueryException() : no errors
2021-01-17 17:29:36 DEBUG HQL: select generatedAlias0 from com.spring.cg.entity.ResultEntity as generatedAlias0 where generatedAlias0.state=:param0
2021-01-17 17:29:36 DEBUG SQL: select resultenti0_.result_id as result_i1_9_, resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_ from result resultenti0_ where resultenti0_.state=?
2021-01-17 17:29:36 DEBUG throwQueryException() : no errors
2021-01-17 17:29:36 DEBUG select resultenti0_.result_id as result_i1_9_, resultenti0_.candidate_name as candidat2_9_, resultenti0_.constituency as constitu3_9_, resultenti0_.date as date4_9_, resultenti0_.election_name as election5_9_, resultenti0_.party_name as party_na6_9_, resultenti0_.state as state7_9_, resultenti0_.votes as votes8_9_ from result resultenti0_ where resultenti0_.state=?
2021-01-17 17:29:36 DEBUG Result set row: 0
2021-01-17 17:29:36 DEBUG Result row: EntityKey[com.spring.cg.entity.ResultEntity#358]
2021-01-17 17:29:36 DEBUG Result set row: 1
2021-01-17 17:29:36 DEBUG Result row: EntityKey[com.spring.cg.entity.ResultEntity#367]
2021-01-17 17:29:36 DEBUG Resolving attributes for [com.spring.cg.entity.ResultEntity#358]
2021-01-17 17:29:36 DEBUG Processing attribute `candidate_name` : value = damini
2021-01-17 17:29:36 DEBUG Attribute (`candidate_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `constituency` : value = Thivim
2021-01-17 17:29:36 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `date` : value = 2020-12-13
2021-01-17 17:29:36 DEBUG Attribute (`date`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `election_name` : value = rajyasabha
2021-01-17 17:29:36 DEBUG Attribute (`election_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `party_name` : value = congress
2021-01-17 17:29:36 DEBUG Attribute (`party_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `state` : value = Goa
2021-01-17 17:29:36 DEBUG Attribute (`state`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `votes` : value = 1
2021-01-17 17:29:36 DEBUG Attribute (`votes`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Done materializing entity [com.spring.cg.entity.ResultEntity#358]
2021-01-17 17:29:36 DEBUG Resolving attributes for [com.spring.cg.entity.ResultEntity#367]
2021-01-17 17:29:36 DEBUG Processing attribute `candidate_name` : value = damini
2021-01-17 17:29:36 DEBUG Attribute (`candidate_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `constituency` : value = Thivim
2021-01-17 17:29:36 DEBUG Attribute (`constituency`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `date` : value = 2020-12-13
2021-01-17 17:29:36 DEBUG Attribute (`date`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `election_name` : value = rajyasabha
2021-01-17 17:29:36 DEBUG Attribute (`election_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `party_name` : value = congress
2021-01-17 17:29:36 DEBUG Attribute (`party_name`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `state` : value = Goa
2021-01-17 17:29:36 DEBUG Attribute (`state`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Processing attribute `votes` : value = 1
2021-01-17 17:29:36 DEBUG Attribute (`votes`)  - enhanced for lazy-loading? - false
2021-01-17 17:29:36 DEBUG Done materializing entity [com.spring.cg.entity.ResultEntity#367]
2021-01-17 17:29:36 DEBUG Using 'application/json', given [application/json, text/plain, */*] and supported [application/json]
2021-01-17 17:29:36 DEBUG Writing [[Result [result_id=358, election_name=rajyasabha, state=Goa, date=2020-12-13, constituency=Thivim, c (truncated)...]
2021-01-17 17:29:36 DEBUG Closing JPA EntityManager in OpenEntityManagerInViewInterceptor
2021-01-17 17:29:36 DEBUG Completed 200 OK
2021-01-17 17:30:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:30:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:30:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:30:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:31:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:31:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:31:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:31:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:32:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:32:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:32:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:32:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:33:00 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:33:00 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:33:30 DEBUG HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:33:30 DEBUG HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2021-01-17 17:33:32 DEBUG Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60222fd8, started on Sun Jan 17 17:05:57 IST 2021
2021-01-17 17:33:32 DEBUG Stopping beans in phase 2147483647
2021-01-17 17:33:32 DEBUG Bean 'documentationPluginsBootstrapper' completed its stop procedure
2021-01-17 17:33:32 DEBUG Bean 'webServerGracefulShutdown' completed its stop procedure
2021-01-17 17:33:32 DEBUG Stopping beans in phase 2147483646
2021-01-17 17:33:32 DEBUG Bean 'webServerStartStop' completed its stop procedure
2021-01-17 17:33:32 DEBUG HHH000031: Closing
2021-01-17 17:33:32 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5324eafc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3f6d36eb]
2021-01-17 17:33:32 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-01-17 17:33:32 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-01-17 17:33:32 DEBUG Unregistering JMX-exposed beans on shutdown
2021-01-17 17:33:32 DEBUG Unregistering JMX-exposed beans
2021-01-17 17:33:32 DEBUG HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@bb6869a: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@da6fd37: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@48a472e7: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@43d3ec7f: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@288b8da8: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@4a9a824a: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@43bd511: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@58d761fd: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@2cc55182: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@ba19ae3: (connection evicted)
2021-01-17 17:33:32 DEBUG HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
